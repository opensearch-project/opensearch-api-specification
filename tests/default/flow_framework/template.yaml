$schema: ../../../json_schemas/test_story.schema.yaml
description: Test flow_framework endpoints using sample template.
version: '>= 2.12'
epilogues:
  - path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: DELETE
    status: [200, 404]
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
warnings:
  multiple-paths-detected: false
chapters:
  - synopsis: Create workflow with openAI model.
    id: create_flow_framework
    path: /_plugins/_flow_framework/workflow
    method: POST
    request:
      payload:
        name: Deploy OpenAI Model
        description: Deploy a model using a connector to OpenAI
        use_case: PROVISION
        version:
          template: 1.0.0
          compatibility:
            - 2.12.0
            - 3.0.0
        workflows:
          provision:
            nodes:
              - id: create_openai_connector
                type: create_connector
                user_inputs:
                  name: OpenAI Chat Connector
                  description: The connector to public OpenAI model service for GPT 3.5
                  version: '1'
                  protocol: http
                  parameters:
                    endpoint: api.openai.com
                    model: gpt-3.5-turbo
                    response_filter: '$.choices[0].message.content'
                  credential:
                    openAI_key: '1234556'
                  actions:
                    - action_type: predict
                      method: POST
                      url: example_url
              - id: register_openai_model
                type: register_remote_model
                previous_node_inputs:
                  create_openai_connector: connector_id
                user_inputs:
                  name: openAI-gpt-3.5-turbo
              - id: deploy_openai_model
                type: deploy_model
                previous_node_inputs:
                  register_openai_model: model_id
    response:
      status: 201
    output:
      test_workflow_id: payload.workflow_id
  - synopsis: Update workflow.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: PUT
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
      update_fields: true
    request:
      payload:
        name: test_update_name
    response:
      status: 201
  - synopsis: Update workflow field fail without updating the whole template.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: PUT
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
      update_fields: true
    request:
      payload:
        workflows:
          name: test
    response:
      status: 400
  - synopsis: Update workflow with updating the whole template.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: PUT
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
    request:
      payload:
        name: Deploy OpenAI Model
        description: Deploy a model using a connector to OpenAI
        use_case: PROVISION
        version:
          template: 1.0.0
          compatibility:
            - 2.12.0
            - 3.0.0
        workflows:
          provision:
            nodes:
              - id: create_openai_connector
                type: create_connector
                user_inputs:
                  name: OpenAI Chat Connector
                  description: The connector to public OpenAI model service for GPT 3.5 update
                  version: '1'
                  protocol: http
                  parameters:
                    endpoint: api.openai.com
                    model: gpt-3.5-turbo
                    response_filter: '$.choices[0].message.content'
                  credential:
                    openAI_key: '1234556'
                  actions:
                    - action_type: predict
                      method: POST
                      url: example_url
              - id: register_openai_model
                type: register_remote_model
                previous_node_inputs:
                  create_openai_connector: connector_id
                user_inputs:
                  name: openAI-gpt-3.5-turbo
              - id: deploy_openai_model
                type: deploy_model
                previous_node_inputs:
                  register_openai_model: model_id
    response:
      status: 201
  - synopsis: Provision workflow.
    path: /_plugins/_flow_framework/workflow/{workflow_id}/_provision
    method: POST
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
    response:
      status: 200
  - synopsis: Update workflow fail With provision and update_fields set true.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: PUT
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
      provision: true
      update_fields: true
    request:
      payload:
        name: test_create_work_flow
    response:
      status: 400
  - synopsis: Update workflow fail With Reprovision and updateFields set true.
    version: '>= 2.17'
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: PUT
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
      reprovision: true
      update_fields: true
    request:
      payload:
        name: test_create_work_flow
    response:
      status: 400
  - synopsis: Create workflow fail With Reprovision set true.
    version: '>= 2.17'
    path: /_plugins/_flow_framework/workflow
    method: POST
    parameters:
      reprovision: true
    request:
      payload:
        name: test_create_work_flow
    response:
      status: 400
  - synopsis: Create workflow fail With Reprovision set true and UseCase Not null.
    version: '>= 2.17'
    path: /_plugins/_flow_framework/workflow
    method: POST
    parameters:
      reprovision: true
      use_case: test_use_case
    request:
      payload:
        name: test_create_work_flow
    response:
      status: 400
  - synopsis: Update workflow fail With Reprovision set true and UseCase Not null.
    version: '>= 2.17'
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: PUT
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
      reprovision: true
      use_case: test_use_case
    request:
      payload:
        name: test_create_work_flow
    response:
      status: 400
  - synopsis: Get workflow.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: GET
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
    response:
      status: 200
  - synopsis: Get workflow fail.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: GET
    parameters:
      workflow_id: invalid
    response:
      status: 404
  - synopsis: Update workflow with a non-existent workflow ID.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: PUT
    parameters:
      workflow_id: invalid
    request:
      payload:
        name: test_update_work_flow
    response:
      status: 404
  - synopsis: Search workflow state.
    path: /_plugins/_flow_framework/workflow/state/_search
    method: POST
    request:
      payload:
        query:
          match:
            state: PROVISIONING
    response:
      status: 200
  - synopsis: Delete workflow.
    path: /_plugins/_flow_framework/workflow/{workflow_id}
    method: DELETE
    parameters:
      workflow_id: ${create_flow_framework.test_workflow_id}
    response:
      status: 200