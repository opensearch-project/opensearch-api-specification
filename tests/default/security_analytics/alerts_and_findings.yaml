$schema: ../../../json_schemas/test_story.schema.yaml

description: Test alert and finding endpoints.
version: '>= 2.4'

prologues:
  - path: /_plugins/_security_analytics/logtype
    id: create_logtype_movies
    method: POST
    request:
      payload:
        description: log type for movies
        name: movies
        source: Custom
    output:
      logtype_id: payload._id
    status: [201]

  - path: /_plugins/_security_analytics/logtype
    id: create_logtype_books
    method: POST
    request:
      payload:
        description: log type for books
        name: books
        source: Custom
    output:
      logtype_id: payload._id
    status: [201]

  - path: /movies
    method: PUT
    request:
      payload:
        mappings:
          properties:
            director: 
              type: text
            title:
              type: text
            year: 
              type: integer
    status: [200]

  - path: /books
    method: PUT
    request:
      payload:
        mappings:
          properties:
            author: 
              type: text
            title:
              type: text
            year: 
              type: integer
    status: [200]

  - path: /_plugins/_security_analytics/rules
    id: create_rule_movies
    method: POST
    parameters:
      category: movies
    request:
      payload:
        title: Movies Published in 1998
        id: 25b9c01c-350d-4b95-bed1-836d04a4f324
        description: Detects when movies were published in 1998
        status: experimental
        author: Unknown
        date: 2021/05/06
        modified: 2021/11/30
        references: []
        tags: []
        logsource:
          product: unknown
        detection:
          selection:
            year: 1998
          condition: selection
        level: critical
        falsepositives: []
    output:
      rule_id: payload._id
    status: [201]

  - path: /_plugins/_security_analytics/rules
    id: create_rule_books
    method: POST
    parameters:
      category: books
    request:
      payload:
        title: Books Published in 1998
        id: c3b33f93-55c3-4427-bf0e-05b07d34ca25
        description: Detects when books were published in 1998
        status: experimental
        author: Unknown
        date: 2021/05/06
        modified: 2021/11/30
        references: []
        tags: []
        logsource:
          product: unknown
        detection:
          selection:
            year: 1998
          condition: selection
        level: critical
        falsepositives: []
    output:
      rule_id: payload._id
    status: [201]
    
  - path: /_plugins/_security_analytics/detectors
    id: create_detector_movies
    method: POST
    request:
      payload:
        enabled: true
        name: Detector movies
        schedule:
          period:
            interval: 1
            unit: MINUTES
        detector_type: movies
        type: detector
        inputs:
          - detector_input:
              description: Detector for movies
              custom_rules:
                - id: '${create_rule_movies.rule_id}'
              indices:
                - movies
              pre_packaged_rules: []
        triggers:
          - ids:
              - '${create_rule_movies.rule_id}'
            types: []
            tags: []
            severity: 1
            actions: []
            id: 8qhrBoQBYK1JzUUDzH
            sev_levels: []
            name: Default trigger
    output:
      detector_id: payload._id
    status: [201]

  - path: /_plugins/_security_analytics/detectors
    id: create_detector_books
    method: POST
    request:
      payload:
        enabled: true
        name: Detector books
        schedule:
          period:
            interval: 1
            unit: MINUTES
        detector_type: books
        type: detector
        inputs:
          - detector_input:
              description: Detector for books
              custom_rules:
                - id: '${create_rule_books.rule_id}'
              indices:
                - books
              pre_packaged_rules: []
        triggers:
          - ids:
              - '${create_rule_books.rule_id}'
            types: []
            tags: []
            severity: 1
            actions: []
            id: 8qhrBoQBYK1JzUUDzHd
            sev_levels: []
            name: Default trigger
    output:
      detector_id: payload._id
    status: [201]

  - path: /_plugins/_security_analytics/correlation/rules
    method: POST
    request:
      payload:
        name: custom-rule
        correlate:
          - index: movies
            category: movies
            query: year:1998
          - index: books
            category: books
            query: year:1998
        time_window: 10000
        triggers: []
    status: [201]

  - path: /_bulk
    method: POST
    parameters:
      refresh: true
    request:
      content_type: application/x-ndjson
      payload:
        - {create: {_index: movies, _id: movie1}}
        - {director: Bennett, title: The Cruise, year: 1998}
        - {create: {_index: movies, _id: movie2}}
        - {director: Bennett, title: Truman Capote, year: 2005}
        - {create: {_index: books, _id: book1}}
        - {author: J. K. Rowling, title: "Harry Potter: Philosopher's Stone", year: 1997}
        - {create: {_index: books, _id: book2}}
        - {author: J. K. Rowling, title: 'Harry Potter: Chamber of Secrets', year: 1998}
    status: [200]

chapters:
  - synopsis: Retrieve all findings for a specific detector. [GET]
    id: get_findings
    path: /_plugins/_security_analytics/findings/_search
    method: GET
    parameters:
      detector_id: ${create_detector_movies.detector_id}
    response:
      payload:
        total_findings: 1
      status: [200]
    retry:
      count: 1
      wait: 65000 # We need to wait 1 minutes for the detector to apply the sigma rule on the new documents added to indexes
    output:
      finding_id: payload.findings[0].id

  - synopsis: Retrieve all alerts for a specific detector. [GET]
    path: /_plugins/_security_analytics/alerts
    method: GET
    parameters:
      detector_id: ${create_detector_books.detector_id}
    response:
      payload:
        total_alerts: 1
      status: [200]

  - synopsis: List correlations for a specific finding. [GET]
    path: /_plugins/_security_analytics/findings/correlate
    method: GET
    parameters:
      finding: ${get_findings.finding_id}
      detector_type: movies
    response:
      payload:
        findings:
          - detector_type: books
      status: [200]

epilogues:
  - path: /_plugins/_security_analytics/detectors/{id}
    method: DELETE
    parameters:
      id: ${create_detector_movies.detector_id}
    status: [200]
    
  - path: /_plugins/_security_analytics/detectors/{id}
    method: DELETE
    parameters:
      id: ${create_detector_books.detector_id}
    status: [200]

  - path: /_plugins/_security_analytics/rules/{id}
    method: DELETE
    parameters:
      forced: true
      id: ${create_rule_movies.rule_id}
    status: [200]

  - path: /_plugins/_security_analytics/rules/{id}
    method: DELETE
    parameters:
      forced: true
      id: ${create_rule_books.rule_id}
    status: [200]

  - path: /_plugins/_security_analytics/logtype/{id}
    method: DELETE
    parameters:
      id: ${create_logtype_movies.logtype_id}
    status: [200]
  
  - path: /_plugins/_security_analytics/logtype/{id}
    method: DELETE
    parameters:
      id: ${create_logtype_books.logtype_id}
    status: [200]

  - path: /movies
    method: DELETE
    status: [200]

  - path: /books
    method: DELETE
    status: [200]
