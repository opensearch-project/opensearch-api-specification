$schema: ../../../../json_schemas/test_story.schema.yaml

description: Test different ways to sort by field.

epilogues:
  - path: /movies
    method: DELETE
    status: [200]

prologues:
  - path: /movies
    method: PUT
    request:
      payload:
        mappings:
          properties:
            title:
              type: keyword
            year:
              type: integer
  - path: /_bulk
    method: POST
    parameters:
      refresh: true
    request:
      content_type: application/x-ndjson
      payload:
        - {create: {_index: movies}}
        - {title: The Lion King, year: 1994}
        - {create: {_index: movies}}
        - {title: The Lion King, year: 2019}
        - {create: {_index: movies}}
        - {title: Frozen, year: 2013}

chapters:
  - synopsis: Sort by year.
    path: /{index}/_search
    parameters:
      index: movies
      sort: year
    method: GET
    response:
      status: 200
      payload:
        hits:
          hits:
            - _source:
                title: The Lion King
                year: 1994
            - _source:
                title: Frozen
                year: 2013
            - _source:
                title: The Lion King
                year: 2019

  - synopsis: Sort by title:desc.
    path: /{index}/_search
    parameters:
      index: movies
      sort: title:desc
    method: GET
    response:
      status: 200
      payload:
        hits:
          hits:
            - _source:
                title: The Lion King
                year: 1994
            - _source:
                title: The Lion King
                year: 2019
            - _source:
                title: Frozen
                year: 2013

  - synopsis: Sort by title:desc,year:desc.
    path: /{index}/_search
    parameters:
      index: movies
      sort: title:desc,year:desc
    method: GET
    response:
      status: 200
      payload:
        hits:
          hits:
            - _source:
                title: The Lion King
                year: 2019
            - _source:
                title: The Lion King
                year: 1994
            - _source:
                title: Frozen
                year: 2013

  - synopsis: Sort by [title, year].
    path: /{index}/_search
    parameters:
      index: movies
    method: GET
    request:
      payload:
        sort:
          - title
          - year
    response:
      status: 200
      payload:
        hits:
          hits:
            - _source:
                title: Frozen
                year: 2013
            - _source:
                title: The Lion King
                year: 1994
            - _source:
                title: The Lion King
                year: 2019

  - synopsis: Sort by year:asc,title:desc.
    path: /{index}/_search
    parameters:
      index: movies
    method: GET
    request:
      payload:
        sort:
          - title: {order: asc}
          - year: {order: desc}
    response:
      status: 200
      payload:
        hits:
          hits:
            - _source:
                title: Frozen
                year: 2013
            - _source:
                title: The Lion King
                year: 2019
            - _source:
                title: The Lion King
                year: 1994

  - synopsis: Sort with direction by year:asc,title:desc.
    path: /{index}/_search
    parameters:
      index: movies
    method: GET
    request:
      payload:
        sort:
          - title: asc
          - year: desc
    response:
      status: 200
      payload:
        hits:
          hits:
            - _source:
                title: Frozen
                year: 2013
            - _source:
                title: The Lion King
                year: 2019
            - _source:
                title: The Lion King
                year: 1994
