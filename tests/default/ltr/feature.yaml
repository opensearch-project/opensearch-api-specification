$schema: ../../../json_schemas/test_story.schema.yaml

description: LTR feature operations including search and CRUD.
version: '>= 2.19'
prologues:
  - path: /_ltr
    method: PUT
    status: [200]
  - path: /_ltr/{store}
    method: PUT
    parameters:
      store: test_store
    status: [200]

epilogues:
  - path: /_ltr
    method: DELETE
    status: [200, 404]
  - path: /_ltr/{store}
    method: DELETE
    parameters:
      store: test_store
    status: [200, 404]

chapters:
  # Search operations
  - synopsis: Search for features in the default store.
    method: GET
    path: /_ltr/_feature
    response:
      status: 200

  - synopsis: Search for features in the default store with prefix filter.
    method: GET
    path: /_ltr/_feature
    parameters:
      prefix: test
    response:
      status: 200

  - synopsis: Search for features in the default store with pagination.
    method: GET
    path: /_ltr/_feature
    parameters:
      from: 0
      size: 10
    response:
      status: 200

  - synopsis: Search for features in a specific store.
    method: GET
    path: /_ltr/{store}/_feature
    parameters:
      store: test_store
    response:
      status: 200

  - synopsis: Search for features in a specific store with prefix filter.
    method: GET
    path: /_ltr/{store}/_feature
    parameters:
      store: test_store
      prefix: test
    response:
      status: 200

  - synopsis: Search for features in a specific store with pagination.
    method: GET
    path: /_ltr/{store}/_feature
    parameters:
      store: test_store
      from: 0
      size: 5
    response:
      status: 200

  # Individual feature CRUD operations (default store)
  - synopsis: Create a feature in the default store.
    method: PUT
    path: /_ltr/_feature/{id}
    parameters:
      id: test_feature
    request:
      payload:
        template:
          match:
            title: "{{keywords}}"
    response:
      status: [200, 201]

  - synopsis: Get a feature from the default store.
    method: GET
    path: /_ltr/_feature/{id}
    parameters:
      id: test_feature
    response:
      status: 200

  - synopsis: Update a feature in the default store.
    method: PUT
    path: /_ltr/_feature/{id}
    parameters:
      id: test_feature
    request:
      payload:
        query:
          match:
            description: "{{keywords}}"
    response:
      status: [200, 201]

  - synopsis: Delete a feature from the default store.
    method: DELETE
    path: /_ltr/_feature/{id}
    parameters:
      id: test_feature
    response:
      status: [200, 404]

  - synopsis: Try to get a deleted feature from the default store.
    method: GET
    path: /_ltr/_feature/{id}
    parameters:
      id: test_feature
    response:
      status: 404

  # Individual feature CRUD operations (named store)
  - synopsis: Create a feature in a specific store.
    method: PUT
    path: /_ltr/{store}/_feature/{id}
    parameters:
      store: test_store
      id: test_feature_store
    request:
      payload:
        query:
          match:
            title: "{{keywords}}"
    response:
      status: [200, 201]

  - synopsis: Get a feature from a specific store.
    method: GET
    path: /_ltr/{store}/_feature/{id}
    parameters:
      store: test_store
      id: test_feature_store
    response:
      status: 200

  - synopsis: Update a feature in a specific store.
    method: PUT
    path: /_ltr/{store}/_feature/{id}
    parameters:
      store: test_store
      id: test_feature_store
    request:
      payload:
        query:
          match:
            description: "{{keywords}}"
    response:
      status: [200, 201]

  - synopsis: Delete a feature from a specific store.
    method: DELETE
    path: /_ltr/{store}/_feature/{id}
    parameters:
      store: test_store
      id: test_feature_store
    response:
      status: [200, 404]

  - synopsis: Try to get a deleted feature from a specific store.
    method: GET
    path: /_ltr/{store}/_feature/{id}
    parameters:
      store: test_store
      id: test_feature_store
    response:
      status: 404
