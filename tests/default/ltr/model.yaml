$schema: ../../../json_schemas/test_story.schema.yaml

description: LTR model CRUD operations.
version: '>= 2.19'
prologues:
  - path: /_ltr
    method: PUT
    status: [200]
  - path: /_ltr/{store}
    method: PUT
    parameters:
      store: test_store
    status: [200]

epilogues:
  - path: /_ltr
    method: DELETE
    status: [200, 404]
  - path: /_ltr/{store}
    method: DELETE
    parameters:
      store: test_store
    status: [200, 404]

chapters:
  # Search operations
  - synopsis: Search for models in the default store.
    method: GET
    path: /_ltr/_model
    response:
      status: 200

  - synopsis: Search for models in the default store with prefix filter.
    method: GET
    path: /_ltr/_model
    parameters:
      prefix: test
    response:
      status: 200

  - synopsis: Search for models in the default store with pagination.
    method: GET
    path: /_ltr/_model
    parameters:
      from: 0
      size: 10
    response:
      status: 200

  - synopsis: Search for models in a specific store.
    method: GET
    path: /_ltr/{store}/_model
    parameters:
      store: test_store
    response:
      status: 200

  - synopsis: Search for models in a specific store with prefix filter.
    method: GET
    path: /_ltr/{store}/_model
    parameters:
      store: test_store
      prefix: test
    response:
      status: 200

  - synopsis: Search for models in a specific store with pagination.
    method: GET
    path: /_ltr/{store}/_model
    parameters:
      store: test_store
      from: 0
      size: 5
    response:
      status: 200

  # Individual model CRUD operations (default store)
  - synopsis: Create a model in the default store.
    method: PUT
    path: /_ltr/_model/{id}
    parameters:
      id: test_model
    request:
      payload:
        model:
          feature_set:
            name: test_featureset
            features:
              - name: title
                params: query_string
                template:
                  match:
                    title: '{{query_string}}'
              - name: popularity_score
                params: query_string
                template:
                  match:
                    popularity_score: '{{query_string}}'
          model:
            type: model/linear
            definition:
              title: 1
              popularity_score: 0.5
    response:
      status: [200, 201]

  - synopsis: Create a model with routing parameter in the default store.
    method: PUT
    path: /_ltr/_model/{id}
    parameters:
      id: test_model_routing
      routing: test_routing_value
    request:
      payload:
        model:
          feature_set:
            name: test_featureset_routing
            features:
              - name: title
                params: query_string
                template:
                  match:
                    title: '{{query_string}}'
          model:
            type: model/linear
            definition:
              title: 1
    response:
      status: [200, 201]

  - synopsis: Get a model from the default store.
    method: GET
    path: /_ltr/_model/{id}
    parameters:
      id: test_model
    response:
      status: 200

  - synopsis: Try to update a model in the default store (should fail).
    method: PUT
    path: /_ltr/_model/{id}
    parameters:
      id: test_model
    request:
      payload:
        model:
          feature_set:
            name: test_featureset
            features:
              - name: title
                params: query_string
                template:
                  match:
                    title: '{{query_string}}'
              - name: popularity_score
                params: query_string
                template:
                  match:
                    popularity_score: '{{query_string}}'
          model:
            type: model/linear
            definition:
              title: 1.2
              popularity_score: 0.7
    response:
      status: [400, 409]


  - synopsis: Delete a model from the default store.
    method: DELETE
    path: /_ltr/_model/{id}
    parameters:
      id: test_model
    response:
      status: [200, 404]


  - synopsis: Try to get a deleted model from the default store.
    method: GET
    path: /_ltr/_model/{id}
    parameters:
      id: test_model
    response:
      status: 404

  # Individual model CRUD operations (named store)
  - synopsis: Create a model in a specific store.
    method: PUT
    path: /_ltr/{store}/_model/{id}
    parameters:
      store: test_store
      id: test_model_store
    request:
      payload:
        model:
          feature_set:
            name: test_featureset_store
            features:
              - name: title
                params: query_string
                template:
                  match:
                    title: '{{query_string}}'
              - name: popularity_score
                params: query_string
                template:
                  match:
                    popularity_score: '{{query_string}}'
          model:
            type: model/linear
            definition:
              title: 0.5
              popularity_score: 1
    response:
      status: [200, 201]

  - synopsis: Create a model with routing parameter in a specific store.
    method: PUT
    path: /_ltr/{store}/_model/{id}
    parameters:
      store: test_store
      id: test_model_store_routing
      routing: test_routing_value
    request:
      payload:
        model:
          feature_set:
            name: test_featureset_store_routing
            features:
              - name: title
                params: query_string
                template:
                  match:
                    title: '{{query_string}}'
          model:
            type: model/linear
            definition:
              title: 0.8
    response:
      status: [200, 201]

  - synopsis: Get a model from a specific store.
    method: GET
    path: /_ltr/{store}/_model/{id}
    parameters:
      store: test_store
      id: test_model_store
    response:
      status: 200

  - synopsis: Try to update a model in a specific store (should fail).
    method: PUT
    path: /_ltr/{store}/_model/{id}
    parameters:
      store: test_store
      id: test_model_store
    request:
      payload:
        model:
          feature_set:
            name: test_featureset_store
            features:
              - name: title
                params: query_string
                template:
                  match:
                    title: '{{query_string}}'
              - name: popularity_score
                params: query_string
                template:
                  match:
                    popularity_score: '{{query_string}}'
          model:
            type: model/linear
            definition:
              title: 0.7
              popularity_score: 1.2
    response:
      status: [400, 409]


  - synopsis: Delete a model from a specific store.
    method: DELETE
    path: /_ltr/{store}/_model/{id}
    parameters:
      store: test_store
      id: test_model_store
    response:
      status: [200, 404]

  # Cleanup routing test models
  - synopsis: Delete the routing test model from the default store.
    method: DELETE
    path: /_ltr/_model/{id}
    parameters:
      id: test_model_routing
    response:
      status: [200, 404]

  - synopsis: Delete the routing test model from a specific store.
    method: DELETE
    path: /_ltr/{store}/_model/{id}
    parameters:
      store: test_store
      id: test_model_store_routing
    response:
      status: [200, 404]

  - synopsis: Try to get a deleted model from a specific store.
    method: GET
    path: /_ltr/{store}/_model/{id}
    parameters:
      store: test_store
      id: test_model_store
    response:
      status: 404
