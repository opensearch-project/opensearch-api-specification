openapi: 3.1.0
info:
  title: Test API
  version: 1.0.0
paths:
  /_cat:
    get:
      operationId: cat.help.0
      x-operation-group: cat.help
      x-version-added: '1.0'
      description: Returns help for the Cat APIs.
      parameters:
        - $ref: '#/components/parameters/cat.help::query.format'
      responses:
        '200':
          $ref: '#/components/responses/cat.help@200'  
  /_cat/health:
    get:
      operationId: cat.health.0
      x-operation-group: cat.health
      x-version-added: '1.0'
      description: Returns health for the Cat APIs.
      parameters:
        - $ref: '#/components/parameters/cat.health::query.format'
      responses:
        '200':
          $ref: '#/components/responses/cat.health@200'
  /_cat/indices/{index}:
    get:
      operationId: cat.indices.1
      x-operation-group: cat.indices
      x-version-added: '1.0'
      description: 'Returns information about indices: number of primaries and replicas, document counts, disk size, ...'
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-indices/
      parameters:
        - $ref: '#/components/parameters/cat.indices::path.index'
        - $ref: '#/components/parameters/cat.indices::query.format'
      responses:
        '200':
          $ref: '#/components/responses/cat.indices@200'
  /{index}:
    delete:
      operationId: indices.delete.0
      x-operation-group: indices.delete
      x-version-added: '1.0'
      description: Deletes an index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/index-apis/delete-index/
      parameters:
        - $ref: '#/components/parameters/indices.delete::path.index'
        - $ref: '#/components/parameters/indices.delete::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/indices.delete@200'
    head:
      operationId: indices.exists.0
      x-operation-group: indices.exists
      x-version-added: '1.0'
      description: Returns information about whether a particular index exists.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/index-apis/exists/
      parameters:
        - $ref: '#/components/parameters/indices.exists::path.index'
      responses:
        '200':
          $ref: '#/components/responses/indices.exists@200'
    put:
      operationId: indices.create.0
      x-operation-group: indices.create
      x-version-added: '1.0'
      description: Creates an index with optional settings and mappings.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/index-apis/create-index/
      parameters:
        - $ref: '#/components/parameters/indices.create::path.index'
      requestBody:
        $ref: '#/components/requestBodies/indices.create'
      responses:
        '200':
          $ref: '#/components/responses/indices.create@200'
components:
  requestBodies:
    indices.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              settings:
                type: object
                description: Optional settings for the index.
              mappings:
                type: object
                description: Optional mappings for the index.
            additionalProperties: false
  responses:
    cat.help@200:
      content:
        text/plain:
          schema:
            type: string
    cat.health@200:
      content:
        text/plain:
          schema:
            type: string
        application/json:
          schema:
            type: array
            items:
              type: object
        application/yaml:
          schema:
            type: array
            items:
              type: object
        application/cbor:
          schema:
            type: array
            items:
              type: object
        application/smile:
          schema:
            type: array
            items:
              type: object
    cat.indices@200:
      description: ''
      content:
        text/plain:
          schema:
            type: string
        application/json:
          schema:
            type: array
            items:
              type: object
        application/yaml:
          schema:
            type: array
            items:
              type: object
        application/cbor:
          schema:
            type: array
            items:
              type: object
        application/smile:
          schema:
            type: array
            items:
              type: object
    indices.delete@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_common:IndicesResponseBase'
    indices.exists@200:
      description: ''
      content:
        application/json: {}
    indices.create@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              index:
                $ref: '#/components/schemas/_common:IndexName'
              shards_acknowledged:
                type: boolean
              acknowledged:
                type: boolean
            required:
              - acknowledged
              - index
              - shards_acknowledged
  parameters:
    cat.health::query.format:
      in: query
      name: format
      schema:
        type: string
    cat.help::query.format:
      in: query
      name: format
      schema:
        type: string
    cat.indices::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases used to limit the request.
        Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.
      required: true
      schema:
        $ref: '#/components/schemas/_common:Indices'
      style: simple
    cat.indices::query.format:
      in: query
      name: format
      schema:
        type: string
    indices.delete::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of indices to delete.
        You cannot specify index aliases.
        By default, this parameter does not support wildcards (`*`) or `_all`.
        To use wildcards or `_all`, set the `action.destructive_requires_name` cluster setting to `false`.
      required: true
      schema:
        $ref: '#/components/schemas/_common:Indices'
    indices.delete::query.timeout:
      in: query
      name: timeout
      description: |-
        Period to wait for a response.
        If no response is received before the timeout expires, the request fails and returns an error.
      schema:
        $ref: '#/components/schemas/_common:Duration'
      style: form
    indices.exists::path.index:
      in: path
      name: index
      description: Comma-separated list of data streams, indices, and aliases. Supports wildcards (`*`).
      required: true
      schema:
        $ref: '#/components/schemas/_common:Indices'
      style: simple
    indices.create::path.index:
      in: path
      name: index
      description: Name of the index you wish to create.
      required: true
      schema:
        $ref: '#/components/schemas/_common:IndexName'
      style: simple
  schemas:
    _common:uint:
      type: number
    _common:ShardStatistics:
      type: object
      properties:
        failed:
          $ref: '#/components/schemas/_common:uint'
        successful:
          $ref: '#/components/schemas/_common:uint'
        total:
          $ref: '#/components/schemas/_common:uint'
        failures:
          type: array
          items:
            type: object
        skipped:
          $ref: '#/components/schemas/_common:uint'
      required:
        - failed
        - successful
        - total
    _common:AcknowledgedResponseBase:
      type: object
      properties:
        acknowledged:
          description: For a successful response, this value is always true. On failure, an exception is returned instead.
          type: boolean
      required:
        - acknowledged
    _common:IndicesResponseBase:
      allOf:
        - $ref: '#/components/schemas/_common:AcknowledgedResponseBase'
        - type: object
          properties:
            _shards:
              $ref: '#/components/schemas/_common:ShardStatistics'
          additionalProperties: false
    _common:Indices:
      oneOf:
        - $ref: '#/components/schemas/_common:IndexName'
        - type: array
          items:
            $ref: '#/components/schemas/_common:IndexName'
    _common:IndexName:
      type: string
    _common:Duration:
      description: |-
        A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
        `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
      pattern: ^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$
      type: string