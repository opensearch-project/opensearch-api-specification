name: Test Spec

on:
  push:
    paths:
      - .github/workflows/test-spec.yml
      - package*.json
      - spec/**
      - tests/**
      - tools/src/tester/**
      - tsconfig.json
  pull_request:
    paths:
      - .github/workflows/test-spec.yml
      - package*.json
      - spec/**
      - tests/**
      - tools/src/tester/**
      - tsconfig.json

jobs:
  test-opensearch-spec:
    strategy:
      matrix:
        entry:
          - version: 1.3.17
            admin_password: admin
          - version: 2.0.0
            admin_password: admin
          - version: 2.15.0
          - version: 2.16.0
            hub: opensearchstaging
            ref: '@sha256:bcd7f5d5d30231f24f266064248cc8d3306574948190f7bf93016dff29acf17e'
          - version: 3.0.0
            hub: opensearchstaging
            ref: '@sha256:db1918b2b8f7ef6c22dd6ff54a0640877c3d395a392a53864745024933981e3b'

    name: test-opensearch-spec (version=${{ matrix.entry.version }}, hub=${{ matrix.entry.hub || 'opensearchproject' }})
    runs-on: ubuntu-latest

    env:
      OPENSEARCH_DOCKER_HUB_PROJECT: ${{ matrix.entry.hub || 'opensearchproject' }}
      OPENSEARCH_DOCKER_REF: ${{ matrix.entry.ref }}
      OPENSEARCH_VERSION: ${{ matrix.entry.version }}
      OPENSEARCH_PASSWORD: ${{ matrix.entry.admin_password || 'myStrongPassword123!' }}
      OPENSEARCH_JAVA_OPTS: ${{ matrix.entry.opts }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Run OpenSearch Cluster
        working-directory: .github/opensearch-cluster
        run: docker compose up -d

      - name: Get Container ID
        id: container
        run: |
          echo "CONTAINER_ID=$(docker ps -aqf "ancestor=opensearchproject/opensearch:${{ matrix.entry.version }}")" >> $GITHUB_OUTPUT

      - name: Run Tests
        run: |
          npm run test:spec -- \
            --opensearch-insecure \
            --opensearch-version=${{ matrix.entry.version }} \
            --coverage coverage/test-spec-coverage-${{ matrix.entry.version }}.json

      - name: Get Container Logs
        if: failure() && steps.container.outputs.CONTAINER_ID
        run: |
          echo Dumping logs from ${{ steps.container.outputs.CONTAINER_ID }} ...
          docker logs ${{ steps.container.outputs.CONTAINER_ID }}

      - name: Upload Test Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.entry.version }}
          path: coverage/test-spec-coverage-${{ matrix.entry.version }}.json

  merge-coverage:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: test-opensearch-spec
    steps:
      - uses: actions/checkout@v3

      - name: Download Spec Coverage Data
        uses: actions/download-artifact@v4
        with:
          path: coverage

      - name: Combine Test Coverage Data
        shell: bash -eo pipefail {0}
        run: |
          jq -sc '
            map(to_entries) |
            flatten |
            group_by(.key) |
            map({key: .[0].key, value: map(.value) | max}) |
            from_entries |
            .' $(find ./coverage -name "test-spec-coverage-*.json") > ./coverage/coverage.json

          cat ./coverage/coverage.json

      - name: Construct Comment Data Payload
        shell: bash -eo pipefail {0}
        run: |
          jq \
            --arg pr_number ${PR_NUMBER} \
            --slurpfile test_coverage ./coverage/coverage.json \
            --null-input '
            {
              "pr_number": ($pr_number),
              "comment_identifier": "## Spec Test Coverage Analysis",
              "template_name": "pr-test-coverage-analysis",
              "template_data": {
                "test_coverage": ($test_coverage[0])
              }
            }
            ' | tee pr-comment.json
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Upload PR Comment Payload
        uses: actions/upload-artifact@v4
        with:
          name: pr-comment
          path: pr-comment.json
