{
  "openapi": "3.1.0",
  "info": {
    "title": "Schemas of nodes._common category",
    "description": "Schemas of nodes._common category",
    "version": "1.0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "Http": {
        "type": "object",
        "properties": {
          "current_open": {
            "description": "Current number of open HTTP connections for the node.",
            "type": "number"
          },
          "total_opened": {
            "description": "Total number of HTTP connections opened for the node.",
            "type": "number"
          },
          "clients": {
            "description": "Information on current and recently-closed HTTP client connections.\nClients that have been closed longer than the `http.client_stats.closed_channels.max_age` setting will not be represented here.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique ID for the HTTP client.",
            "type": "number"
          },
          "agent": {
            "description": "Reported agent for the HTTP client.\nIf unavailable, this property is not included in the response.",
            "type": "string"
          },
          "local_address": {
            "description": "Local address for the HTTP connection.",
            "type": "string"
          },
          "remote_address": {
            "description": "Remote address for the HTTP connection.",
            "type": "string"
          },
          "last_uri": {
            "description": "The URI of the client’s most recent request.",
            "type": "string"
          },
          "opened_time_millis": {
            "description": "Time at which the client opened the connection.",
            "type": "number"
          },
          "closed_time_millis": {
            "description": "Time at which the client closed the connection if the connection is closed.",
            "type": "number"
          },
          "last_request_time_millis": {
            "description": "Time of the most recent request from this client.",
            "type": "number"
          },
          "request_count": {
            "description": "Number of requests from this client.",
            "type": "number"
          },
          "request_size_bytes": {
            "description": "Cumulative size in bytes of all requests from this client.",
            "type": "number"
          },
          "x_opaque_id": {
            "description": "Value from the client’s `x-opaque-id` HTTP header.\nIf unavailable, this property is not included in the response.",
            "type": "string"
          }
        }
      },
      "Ingest": {
        "type": "object",
        "properties": {
          "pipelines": {
            "description": "Contains statistics about ingest pipelines for the node.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IngestTotal"
            }
          },
          "total": {
            "$ref": "#/components/schemas/IngestTotal"
          }
        }
      },
      "IngestTotal": {
        "type": "object",
        "properties": {
          "count": {
            "description": "Total number of documents ingested during the lifetime of this node.",
            "type": "number"
          },
          "current": {
            "description": "Total number of documents currently being ingested.",
            "type": "number"
          },
          "failed": {
            "description": "Total number of failed ingest operations during the lifetime of this node.",
            "type": "number"
          },
          "processors": {
            "description": "Total number of ingest processors.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/KeyedProcessor"
              }
            }
          },
          "time_in_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          }
        }
      },
      "KeyedProcessor": {
        "type": "object",
        "properties": {
          "stats": {
            "$ref": "#/components/schemas/Processor"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Processor": {
        "type": "object",
        "properties": {
          "count": {
            "description": "Number of documents transformed by the processor.",
            "type": "number"
          },
          "current": {
            "description": "Number of documents currently being transformed by the processor.",
            "type": "number"
          },
          "failed": {
            "description": "Number of failed operations for the processor.",
            "type": "number"
          },
          "time_in_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          }
        }
      },
      "ThreadCount": {
        "type": "object",
        "properties": {
          "active": {
            "description": "Number of active threads in the thread pool.",
            "type": "number"
          },
          "completed": {
            "description": "Number of tasks completed by the thread pool executor.",
            "type": "number"
          },
          "largest": {
            "description": "Highest number of active threads in the thread pool.",
            "type": "number"
          },
          "queue": {
            "description": "Number of tasks in queue for the thread pool.",
            "type": "number"
          },
          "rejected": {
            "description": "Number of tasks rejected by the thread pool executor.",
            "type": "number"
          },
          "threads": {
            "description": "Number of threads in the thread pool.",
            "type": "number"
          }
        }
      },
      "Scripting": {
        "type": "object",
        "properties": {
          "cache_evictions": {
            "description": "Total number of times the script cache has evicted old data.",
            "type": "number"
          },
          "compilations": {
            "description": "Total number of inline script compilations performed by the node.",
            "type": "number"
          },
          "compilations_history": {
            "description": "Contains this recent history of script compilations.",
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "compilation_limit_triggered": {
            "description": "Total number of times the script compilation circuit breaker has limited inline script compilations.",
            "type": "number"
          },
          "contexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Context"
            }
          }
        }
      },
      "Context": {
        "type": "object",
        "properties": {
          "context": {
            "type": "string"
          },
          "compilations": {
            "type": "number"
          },
          "cache_evictions": {
            "type": "number"
          },
          "compilation_limit_triggered": {
            "type": "number"
          }
        }
      },
      "NodesResponseBase": {
        "type": "object",
        "properties": {
          "_nodes": {
            "$ref": "_common.json#/components/schemas/NodeStatistics"
          }
        }
      },
      "NodeReloadResult": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Stats"
          },
          {
            "$ref": "#/components/schemas/NodeReloadError"
          }
        ]
      },
      "Stats": {
        "type": "object",
        "properties": {
          "adaptive_selection": {
            "description": "Statistics about adaptive replica selection.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AdaptiveSelection"
            }
          },
          "breakers": {
            "description": "Statistics about the field data circuit breaker.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Breaker"
            }
          },
          "fs": {
            "$ref": "#/components/schemas/FileSystem"
          },
          "host": {
            "$ref": "_common.json#/components/schemas/Host"
          },
          "http": {
            "$ref": "#/components/schemas/Http"
          },
          "ingest": {
            "$ref": "#/components/schemas/Ingest"
          },
          "ip": {
            "description": "IP address and port for the node.",
            "oneOf": [
              {
                "$ref": "_common.json#/components/schemas/Ip"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "_common.json#/components/schemas/Ip"
                }
              }
            ]
          },
          "jvm": {
            "$ref": "#/components/schemas/Jvm"
          },
          "name": {
            "$ref": "_common.json#/components/schemas/Name"
          },
          "os": {
            "$ref": "#/components/schemas/OperatingSystem"
          },
          "process": {
            "$ref": "#/components/schemas/Process"
          },
          "roles": {
            "$ref": "_common.json#/components/schemas/NodeRoles"
          },
          "script": {
            "$ref": "#/components/schemas/Scripting"
          },
          "script_cache": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ScriptCache"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScriptCache"
                  }
                }
              ]
            }
          },
          "thread_pool": {
            "description": "Statistics about each thread pool, including current size, queue and rejected tasks.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ThreadCount"
            }
          },
          "timestamp": {
            "type": "number"
          },
          "transport": {
            "$ref": "#/components/schemas/Transport"
          },
          "transport_address": {
            "$ref": "_common.json#/components/schemas/TransportAddress"
          },
          "attributes": {
            "description": "Contains a list of attributes for the node.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "discovery": {
            "$ref": "#/components/schemas/Discovery"
          },
          "indexing_pressure": {
            "$ref": "#/components/schemas/IndexingPressure"
          },
          "indices": {
            "$ref": "indices.stats.json#/components/schemas/ShardStats"
          }
        }
      },
      "AdaptiveSelection": {
        "type": "object",
        "properties": {
          "avg_queue_size": {
            "description": "The exponentially weighted moving average queue size of search requests on the keyed node.",
            "type": "number"
          },
          "avg_response_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "avg_response_time_ns": {
            "description": "The exponentially weighted moving average response time, in nanoseconds, of search requests on the keyed node.",
            "type": "number"
          },
          "avg_service_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "avg_service_time_ns": {
            "description": "The exponentially weighted moving average service time, in nanoseconds, of search requests on the keyed node.",
            "type": "number"
          },
          "outgoing_searches": {
            "description": "The number of outstanding search requests to the keyed node from the node these stats are for.",
            "type": "number"
          },
          "rank": {
            "description": "The rank of this node; used for shard selection when routing search requests.",
            "type": "string"
          }
        }
      },
      "Breaker": {
        "type": "object",
        "properties": {
          "estimated_size": {
            "description": "Estimated memory used for the operation.",
            "type": "string"
          },
          "estimated_size_in_bytes": {
            "description": "Estimated memory used, in bytes, for the operation.",
            "type": "number"
          },
          "limit_size": {
            "description": "Memory limit for the circuit breaker.",
            "type": "string"
          },
          "limit_size_in_bytes": {
            "description": "Memory limit, in bytes, for the circuit breaker.",
            "type": "number"
          },
          "overhead": {
            "description": "A constant that all estimates for the circuit breaker are multiplied with to calculate a final estimate.",
            "type": "number"
          },
          "tripped": {
            "description": "Total number of times the circuit breaker has been triggered and prevented an out of memory error.",
            "type": "number"
          }
        }
      },
      "FileSystem": {
        "type": "object",
        "properties": {
          "data": {
            "description": "List of all file stores.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPathStats"
            }
          },
          "timestamp": {
            "description": "Last time the file stores statistics were refreshed.\nRecorded in milliseconds since the Unix Epoch.",
            "type": "number"
          },
          "total": {
            "$ref": "#/components/schemas/FileSystemTotal"
          },
          "io_stats": {
            "$ref": "#/components/schemas/IoStats"
          }
        }
      },
      "DataPathStats": {
        "type": "object",
        "properties": {
          "available": {
            "description": "Total amount of disk space available to this Java virtual machine on this file store.",
            "type": "string"
          },
          "available_in_bytes": {
            "description": "Total number of bytes available to this Java virtual machine on this file store.",
            "type": "number"
          },
          "disk_queue": {
            "type": "string"
          },
          "disk_reads": {
            "type": "number"
          },
          "disk_read_size": {
            "type": "string"
          },
          "disk_read_size_in_bytes": {
            "type": "number"
          },
          "disk_writes": {
            "type": "number"
          },
          "disk_write_size": {
            "type": "string"
          },
          "disk_write_size_in_bytes": {
            "type": "number"
          },
          "free": {
            "description": "Total amount of unallocated disk space in the file store.",
            "type": "string"
          },
          "free_in_bytes": {
            "description": "Total number of unallocated bytes in the file store.",
            "type": "number"
          },
          "mount": {
            "description": "Mount point of the file store (for example: `/dev/sda2`).",
            "type": "string"
          },
          "path": {
            "description": "Path to the file store.",
            "type": "string"
          },
          "total": {
            "description": "Total size of the file store.",
            "type": "string"
          },
          "total_in_bytes": {
            "description": "Total size of the file store in bytes.",
            "type": "number"
          },
          "type": {
            "description": "Type of the file store (ex: ext4).",
            "type": "string"
          }
        }
      },
      "FileSystemTotal": {
        "type": "object",
        "properties": {
          "available": {
            "description": "Total disk space available to this Java virtual machine on all file stores.\nDepending on OS or process level restrictions, this might appear less than `free`.\nThis is the actual amount of free disk space the Opensearch node can utilise.",
            "type": "string"
          },
          "available_in_bytes": {
            "description": "Total number of bytes available to this Java virtual machine on all file stores.\nDepending on OS or process level restrictions, this might appear less than `free_in_bytes`.\nThis is the actual amount of free disk space the Opensearch node can utilise.",
            "type": "number"
          },
          "free": {
            "description": "Total unallocated disk space in all file stores.",
            "type": "string"
          },
          "free_in_bytes": {
            "description": "Total number of unallocated bytes in all file stores.",
            "type": "number"
          },
          "total": {
            "description": "Total size of all file stores.",
            "type": "string"
          },
          "total_in_bytes": {
            "description": "Total size of all file stores in bytes.",
            "type": "number"
          }
        }
      },
      "IoStats": {
        "type": "object",
        "properties": {
          "devices": {
            "description": "Array of disk metrics for each device that is backing an Opensearch data path.\nThese disk metrics are probed periodically and averages between the last probe and the current probe are computed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IoStatDevice"
            }
          },
          "total": {
            "$ref": "#/components/schemas/IoStatDevice"
          }
        }
      },
      "IoStatDevice": {
        "type": "object",
        "properties": {
          "device_name": {
            "description": "The Linux device name.",
            "type": "string"
          },
          "operations": {
            "description": "The total number of read and write operations for the device completed since starting Opensearch.",
            "type": "number"
          },
          "read_kilobytes": {
            "description": "The total number of kilobytes read for the device since starting Opensearch.",
            "type": "number"
          },
          "read_operations": {
            "description": "The total number of read operations for the device completed since starting Opensearch.",
            "type": "number"
          },
          "write_kilobytes": {
            "description": "The total number of kilobytes written for the device since starting Opensearch.",
            "type": "number"
          },
          "write_operations": {
            "description": "The total number of write operations for the device completed since starting Opensearch.",
            "type": "number"
          }
        }
      },
      "Jvm": {
        "type": "object",
        "properties": {
          "buffer_pools": {
            "description": "Contains statistics about JVM buffer pools for the node.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NodeBufferPool"
            }
          },
          "classes": {
            "$ref": "#/components/schemas/JvmClasses"
          },
          "gc": {
            "$ref": "#/components/schemas/GarbageCollector"
          },
          "mem": {
            "$ref": "#/components/schemas/JvmMemoryStats"
          },
          "threads": {
            "$ref": "#/components/schemas/JvmThreads"
          },
          "timestamp": {
            "description": "Last time JVM statistics were refreshed.",
            "type": "number"
          },
          "uptime": {
            "description": "Human-readable JVM uptime.\nOnly returned if the `human` query parameter is `true`.",
            "type": "string"
          },
          "uptime_in_millis": {
            "description": "JVM uptime in milliseconds.",
            "type": "number"
          }
        }
      },
      "NodeBufferPool": {
        "type": "object",
        "properties": {
          "count": {
            "description": "Number of buffer pools.",
            "type": "number"
          },
          "total_capacity": {
            "description": "Total capacity of buffer pools.",
            "type": "string"
          },
          "total_capacity_in_bytes": {
            "description": "Total capacity of buffer pools in bytes.",
            "type": "number"
          },
          "used": {
            "description": "Size of buffer pools.",
            "type": "string"
          },
          "used_in_bytes": {
            "description": "Size of buffer pools in bytes.",
            "type": "number"
          }
        }
      },
      "JvmClasses": {
        "type": "object",
        "properties": {
          "current_loaded_count": {
            "description": "Number of classes currently loaded by JVM.",
            "type": "number"
          },
          "total_loaded_count": {
            "description": "Total number of classes loaded since the JVM started.",
            "type": "number"
          },
          "total_unloaded_count": {
            "description": "Total number of classes unloaded since the JVM started.",
            "type": "number"
          }
        }
      },
      "GarbageCollector": {
        "type": "object",
        "properties": {
          "collectors": {
            "description": "Contains statistics about JVM garbage collectors for the node.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GarbageCollectorTotal"
            }
          }
        }
      },
      "GarbageCollectorTotal": {
        "type": "object",
        "properties": {
          "collection_count": {
            "description": "Total number of JVM garbage collectors that collect objects.",
            "type": "number"
          },
          "collection_time": {
            "description": "Total time spent by JVM collecting objects.",
            "type": "string"
          },
          "collection_time_in_millis": {
            "description": "Total time, in milliseconds, spent by JVM collecting objects.",
            "type": "number"
          }
        }
      },
      "JvmMemoryStats": {
        "type": "object",
        "properties": {
          "heap_used_in_bytes": {
            "description": "Memory, in bytes, currently in use by the heap.",
            "type": "number"
          },
          "heap_used_percent": {
            "description": "Percentage of memory currently in use by the heap.",
            "type": "number"
          },
          "heap_committed_in_bytes": {
            "description": "Amount of memory, in bytes, available for use by the heap.",
            "type": "number"
          },
          "heap_max_in_bytes": {
            "description": "Maximum amount of memory, in bytes, available for use by the heap.",
            "type": "number"
          },
          "non_heap_used_in_bytes": {
            "description": "Non-heap memory used, in bytes.",
            "type": "number"
          },
          "non_heap_committed_in_bytes": {
            "description": "Amount of non-heap memory available, in bytes.",
            "type": "number"
          },
          "pools": {
            "description": "Contains statistics about heap memory usage for the node.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Pool"
            }
          }
        }
      },
      "Pool": {
        "type": "object",
        "properties": {
          "used_in_bytes": {
            "description": "Memory, in bytes, used by the heap.",
            "type": "number"
          },
          "max_in_bytes": {
            "description": "Maximum amount of memory, in bytes, available for use by the heap.",
            "type": "number"
          },
          "peak_used_in_bytes": {
            "description": "Largest amount of memory, in bytes, historically used by the heap.",
            "type": "number"
          },
          "peak_max_in_bytes": {
            "description": "Largest amount of memory, in bytes, historically used by the heap.",
            "type": "number"
          }
        }
      },
      "JvmThreads": {
        "type": "object",
        "properties": {
          "count": {
            "description": "Number of active threads in use by JVM.",
            "type": "number"
          },
          "peak_count": {
            "description": "Highest number of threads used by JVM.",
            "type": "number"
          }
        }
      },
      "OperatingSystem": {
        "type": "object",
        "properties": {
          "cpu": {
            "$ref": "#/components/schemas/Cpu"
          },
          "mem": {
            "$ref": "#/components/schemas/ExtendedMemoryStats"
          },
          "swap": {
            "$ref": "#/components/schemas/MemoryStats"
          },
          "cgroup": {
            "$ref": "#/components/schemas/Cgroup"
          },
          "timestamp": {
            "type": "number"
          }
        }
      },
      "Cpu": {
        "type": "object",
        "properties": {
          "percent": {
            "type": "number"
          },
          "sys": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "sys_in_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "total": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "total_in_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "user": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "user_in_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "load_average": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        }
      },
      "ExtendedMemoryStats": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MemoryStats"
          },
          {
            "type": "object",
            "properties": {
              "free_percent": {
                "description": "Percentage of free memory.",
                "type": "number"
              },
              "used_percent": {
                "description": "Percentage of used memory.",
                "type": "number"
              }
            }
          }
        ]
      },
      "MemoryStats": {
        "type": "object",
        "properties": {
          "adjusted_total_in_bytes": {
            "description": "If the amount of physical memory has been overridden using the `es`.`total_memory_bytes` system property then this reports the overridden value in bytes.\nOtherwise it reports the same value as `total_in_bytes`.",
            "type": "number"
          },
          "resident": {
            "type": "string"
          },
          "resident_in_bytes": {
            "type": "number"
          },
          "share": {
            "type": "string"
          },
          "share_in_bytes": {
            "type": "number"
          },
          "total_virtual": {
            "type": "string"
          },
          "total_virtual_in_bytes": {
            "type": "number"
          },
          "total_in_bytes": {
            "description": "Total amount of physical memory in bytes.",
            "type": "number"
          },
          "free_in_bytes": {
            "description": "Amount of free physical memory in bytes.",
            "type": "number"
          },
          "used_in_bytes": {
            "description": "Amount of used physical memory in bytes.",
            "type": "number"
          }
        }
      },
      "Cgroup": {
        "type": "object",
        "properties": {
          "cpuacct": {
            "$ref": "#/components/schemas/CpuAcct"
          },
          "cpu": {
            "$ref": "#/components/schemas/CgroupCpu"
          },
          "memory": {
            "$ref": "#/components/schemas/CgroupMemory"
          }
        }
      },
      "CpuAcct": {
        "type": "object",
        "properties": {
          "control_group": {
            "description": "The `cpuacct` control group to which the Opensearch process belongs.",
            "type": "string"
          },
          "usage_nanos": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitNanos"
          }
        }
      },
      "CgroupCpu": {
        "type": "object",
        "properties": {
          "control_group": {
            "description": "The `cpu` control group to which the Opensearch process belongs.",
            "type": "string"
          },
          "cfs_period_micros": {
            "description": "The period of time, in microseconds, for how regularly all tasks in the same cgroup as the Opensearch process should have their access to CPU resources reallocated.",
            "type": "number"
          },
          "cfs_quota_micros": {
            "description": "The total amount of time, in microseconds, for which all tasks in the same cgroup as the Opensearch process can run during one period `cfs_period_micros`.",
            "type": "number"
          },
          "stat": {
            "$ref": "#/components/schemas/CgroupCpuStat"
          }
        }
      },
      "CgroupCpuStat": {
        "type": "object",
        "properties": {
          "number_of_elapsed_periods": {
            "description": "The number of reporting periods (as specified by `cfs_period_micros`) that have elapsed.",
            "type": "number"
          },
          "number_of_times_throttled": {
            "description": "The number of times all tasks in the same cgroup as the Opensearch process have been throttled.",
            "type": "number"
          },
          "time_throttled_nanos": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitNanos"
          }
        }
      },
      "CgroupMemory": {
        "type": "object",
        "properties": {
          "control_group": {
            "description": "The `memory` control group to which the Opensearch process belongs.",
            "type": "string"
          },
          "limit_in_bytes": {
            "description": "The maximum amount of user memory (including file cache) allowed for all tasks in the same cgroup as the Opensearch process.\nThis value can be too big to store in a `long`, so is returned as a string so that the value returned can exactly match what the underlying operating system interface returns.\nAny value that is too large to parse into a `long` almost certainly means no limit has been set for the cgroup.",
            "type": "string"
          },
          "usage_in_bytes": {
            "description": "The total current memory usage by processes in the cgroup, in bytes, by all tasks in the same cgroup as the Opensearch process.\nThis value is stored as a string for consistency with `limit_in_bytes`.",
            "type": "string"
          }
        }
      },
      "Process": {
        "type": "object",
        "properties": {
          "cpu": {
            "$ref": "#/components/schemas/Cpu"
          },
          "mem": {
            "$ref": "#/components/schemas/MemoryStats"
          },
          "open_file_descriptors": {
            "description": "Number of opened file descriptors associated with the current or `-1` if not supported.",
            "type": "number"
          },
          "max_file_descriptors": {
            "description": "Maximum number of file descriptors allowed on the system, or `-1` if not supported.",
            "type": "number"
          },
          "timestamp": {
            "description": "Last time the statistics were refreshed.\nRecorded in milliseconds since the Unix Epoch.",
            "type": "number"
          }
        }
      },
      "ScriptCache": {
        "type": "object",
        "properties": {
          "cache_evictions": {
            "description": "Total number of times the script cache has evicted old data.",
            "type": "number"
          },
          "compilation_limit_triggered": {
            "description": "Total number of times the script compilation circuit breaker has limited inline script compilations.",
            "type": "number"
          },
          "compilations": {
            "description": "Total number of inline script compilations performed by the node.",
            "type": "number"
          },
          "context": {
            "type": "string"
          }
        }
      },
      "Transport": {
        "type": "object",
        "properties": {
          "inbound_handling_time_histogram": {
            "description": "The distribution of the time spent handling each inbound message on a transport thread, represented as a histogram.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportHistogram"
            }
          },
          "outbound_handling_time_histogram": {
            "description": "The distribution of the time spent sending each outbound transport message on a transport thread, represented as a histogram.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportHistogram"
            }
          },
          "rx_count": {
            "description": "Total number of RX (receive) packets received by the node during internal cluster communication.",
            "type": "number"
          },
          "rx_size": {
            "description": "Size of RX packets received by the node during internal cluster communication.",
            "type": "string"
          },
          "rx_size_in_bytes": {
            "description": "Size, in bytes, of RX packets received by the node during internal cluster communication.",
            "type": "number"
          },
          "server_open": {
            "description": "Current number of inbound TCP connections used for internal communication between nodes.",
            "type": "number"
          },
          "tx_count": {
            "description": "Total number of TX (transmit) packets sent by the node during internal cluster communication.",
            "type": "number"
          },
          "tx_size": {
            "description": "Size of TX packets sent by the node during internal cluster communication.",
            "type": "string"
          },
          "tx_size_in_bytes": {
            "description": "Size, in bytes, of TX packets sent by the node during internal cluster communication.",
            "type": "number"
          },
          "total_outbound_connections": {
            "description": "The cumulative number of outbound transport connections that this node has opened since it started.\nEach transport connection may comprise multiple TCP connections but is only counted once in this statistic.\nTransport connections are typically long-lived so this statistic should remain constant in a stable cluster.",
            "type": "number"
          }
        }
      },
      "TransportHistogram": {
        "type": "object",
        "properties": {
          "count": {
            "description": "The number of times a transport thread took a period of time within the bounds of this bucket to handle an inbound message.",
            "type": "number"
          },
          "lt_millis": {
            "description": "The exclusive upper bound of the bucket in milliseconds.\nMay be omitted on the last bucket if this bucket has no upper bound.",
            "type": "number"
          },
          "ge_millis": {
            "description": "The inclusive lower bound of the bucket in milliseconds. May be omitted on the first bucket if this bucket has no lower bound.",
            "type": "number"
          }
        }
      },
      "Discovery": {
        "type": "object",
        "properties": {
          "cluster_state_queue": {
            "$ref": "#/components/schemas/ClusterStateQueue"
          },
          "published_cluster_states": {
            "$ref": "#/components/schemas/PublishedClusterStates"
          },
          "cluster_state_update": {
            "description": "Contains low-level statistics about how long various activities took during cluster state updates while the node was the elected master.\nOmitted if the node is not master-eligible.\nEvery field whose name ends in `_time` within this object is also represented as a raw number of milliseconds in a field whose name ends in `_time_millis`.\nThe human-readable fields with a `_time` suffix are only returned if requested with the `?human=true` query parameter.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClusterStateUpdate"
            }
          },
          "serialized_cluster_states": {
            "$ref": "#/components/schemas/SerializedClusterState"
          },
          "cluster_applier_stats": {
            "$ref": "#/components/schemas/ClusterAppliedStats"
          }
        }
      },
      "ClusterStateQueue": {
        "type": "object",
        "properties": {
          "total": {
            "description": "Total number of cluster states in queue.",
            "type": "number"
          },
          "pending": {
            "description": "Number of pending cluster states in queue.",
            "type": "number"
          },
          "committed": {
            "description": "Number of committed cluster states in queue.",
            "type": "number"
          }
        }
      },
      "PublishedClusterStates": {
        "type": "object",
        "properties": {
          "full_states": {
            "description": "Number of published cluster states.",
            "type": "number"
          },
          "incompatible_diffs": {
            "description": "Number of incompatible differences between published cluster states.",
            "type": "number"
          },
          "compatible_diffs": {
            "description": "Number of compatible differences between published cluster states.",
            "type": "number"
          }
        }
      },
      "ClusterStateUpdate": {
        "type": "object",
        "properties": {
          "count": {
            "description": "The number of cluster state update attempts that did not change the cluster state since the node started.",
            "type": "number"
          },
          "computation_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "computation_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "publication_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "publication_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "context_construction_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "context_construction_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "commit_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "commit_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "completion_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "completion_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "master_apply_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "master_apply_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          },
          "notification_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "notification_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          }
        },
        "required": [
          "count"
        ]
      },
      "SerializedClusterState": {
        "type": "object",
        "properties": {
          "full_states": {
            "$ref": "#/components/schemas/SerializedClusterStateDetail"
          },
          "diffs": {
            "$ref": "#/components/schemas/SerializedClusterStateDetail"
          }
        }
      },
      "SerializedClusterStateDetail": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          },
          "uncompressed_size": {
            "type": "string"
          },
          "uncompressed_size_in_bytes": {
            "type": "number"
          },
          "compressed_size": {
            "type": "string"
          },
          "compressed_size_in_bytes": {
            "type": "number"
          }
        }
      },
      "ClusterAppliedStats": {
        "type": "object",
        "properties": {
          "recordings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recording"
            }
          }
        }
      },
      "Recording": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cumulative_execution_count": {
            "type": "number"
          },
          "cumulative_execution_time": {
            "$ref": "_common.json#/components/schemas/Duration"
          },
          "cumulative_execution_time_millis": {
            "$ref": "_common.json#/components/schemas/DurationValueUnitMillis"
          }
        }
      },
      "IndexingPressure": {
        "type": "object",
        "properties": {
          "memory": {
            "$ref": "#/components/schemas/IndexingPressureMemory"
          }
        }
      },
      "IndexingPressureMemory": {
        "type": "object",
        "properties": {
          "limit": {
            "$ref": "_common.json#/components/schemas/ByteSize"
          },
          "limit_in_bytes": {
            "description": "Configured memory limit, in bytes, for the indexing requests.\nReplica requests have an automatic limit that is 1.5x this value.",
            "type": "number"
          },
          "current": {
            "$ref": "#/components/schemas/PressureMemory"
          },
          "total": {
            "$ref": "#/components/schemas/PressureMemory"
          }
        }
      },
      "PressureMemory": {
        "type": "object",
        "properties": {
          "all": {
            "$ref": "_common.json#/components/schemas/ByteSize"
          },
          "all_in_bytes": {
            "description": "Memory consumed, in bytes, by indexing requests in the coordinating, primary, or replica stage.",
            "type": "number"
          },
          "combined_coordinating_and_primary": {
            "$ref": "_common.json#/components/schemas/ByteSize"
          },
          "combined_coordinating_and_primary_in_bytes": {
            "description": "Memory consumed, in bytes, by indexing requests in the coordinating or primary stage.\nThis value is not the sum of coordinating and primary as a node can reuse the coordinating memory if the primary stage is executed locally.",
            "type": "number"
          },
          "coordinating": {
            "$ref": "_common.json#/components/schemas/ByteSize"
          },
          "coordinating_in_bytes": {
            "description": "Memory consumed, in bytes, by indexing requests in the coordinating stage.",
            "type": "number"
          },
          "primary": {
            "$ref": "_common.json#/components/schemas/ByteSize"
          },
          "primary_in_bytes": {
            "description": "Memory consumed, in bytes, by indexing requests in the primary stage.",
            "type": "number"
          },
          "replica": {
            "$ref": "_common.json#/components/schemas/ByteSize"
          },
          "replica_in_bytes": {
            "description": "Memory consumed, in bytes, by indexing requests in the replica stage.",
            "type": "number"
          },
          "coordinating_rejections": {
            "description": "Number of indexing requests rejected in the coordinating stage.",
            "type": "number"
          },
          "primary_rejections": {
            "description": "Number of indexing requests rejected in the primary stage.",
            "type": "number"
          },
          "replica_rejections": {
            "description": "Number of indexing requests rejected in the replica stage.",
            "type": "number"
          }
        }
      },
      "NodeReloadError": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "_common.json#/components/schemas/Name"
          },
          "reload_exception": {
            "$ref": "_common.json#/components/schemas/ErrorCause"
          }
        },
        "required": [
          "name"
        ]
      },
      "SampleType": {
        "type": "string",
        "description": "The type to sample.",
        "enum": [
          "cpu",
          "wait",
          "block"
        ]
      }
    }
  }
}