{
  "openapi": "3.1.0",
  "info": {
    "title": "Schemas of _core.msearch category",
    "description": "Schemas of _core.msearch category",
    "version": "1.0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "RequestItem": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MultisearchHeader"
          },
          {
            "$ref": "#/components/schemas/MultisearchBody"
          }
        ]
      },
      "MultisearchHeader": {
        "type": "object",
        "properties": {
          "allow_no_indices": {
            "type": "boolean"
          },
          "expand_wildcards": {
            "$ref": "_common.json#/components/schemas/ExpandWildcards"
          },
          "ignore_unavailable": {
            "type": "boolean"
          },
          "index": {
            "$ref": "_common.json#/components/schemas/Indices"
          },
          "preference": {
            "type": "string"
          },
          "request_cache": {
            "type": "boolean"
          },
          "routing": {
            "$ref": "_common.json#/components/schemas/Routing"
          },
          "search_type": {
            "$ref": "_common.json#/components/schemas/SearchType"
          },
          "ccs_minimize_roundtrips": {
            "type": "boolean"
          },
          "allow_partial_search_results": {
            "type": "boolean"
          },
          "ignore_throttled": {
            "type": "boolean"
          }
        }
      },
      "MultisearchBody": {
        "type": "object",
        "properties": {
          "aggregations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "_common.aggregations.json#/components/schemas/AggregationContainer"
            }
          },
          "collapse": {
            "$ref": "_core.search.json#/components/schemas/FieldCollapse"
          },
          "query": {
            "$ref": "_common.query_dsl.json#/components/schemas/QueryContainer"
          },
          "explain": {
            "description": "If true, returns detailed information about score computation as part of a hit.",
            "type": "boolean"
          },
          "ext": {
            "description": "Configuration of search extensions defined by Opensearch plugins.",
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "stored_fields": {
            "$ref": "_common.json#/components/schemas/Fields"
          },
          "docvalue_fields": {
            "description": "Array of wildcard (*) patterns. The request returns doc values for field\nnames matching these patterns in the hits.fields property of the response.",
            "type": "array",
            "items": {
              "$ref": "_common.query_dsl.json#/components/schemas/FieldAndFormat"
            }
          },
          "knn": {
            "description": "Defines the approximate kNN search to run.",
            "oneOf": [
              {
                "$ref": "_common.json#/components/schemas/KnnQuery"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "_common.json#/components/schemas/KnnQuery"
                }
              }
            ]
          },
          "from": {
            "description": "Starting document offset. By default, you cannot page through more than 10,000\nhits using the from and size parameters. To page through more hits, use the\nsearch_after parameter.",
            "type": "number"
          },
          "highlight": {
            "$ref": "_core.search.json#/components/schemas/Highlight"
          },
          "indices_boost": {
            "description": "Boosts the _score of documents from specified indices.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "number"
              }
            }
          },
          "min_score": {
            "description": "Minimum _score for matching documents. Documents with a lower _score are\nnot included in the search results.",
            "type": "number"
          },
          "post_filter": {
            "$ref": "_common.query_dsl.json#/components/schemas/QueryContainer"
          },
          "profile": {
            "type": "boolean"
          },
          "rescore": {
            "oneOf": [
              {
                "$ref": "_core.search.json#/components/schemas/Rescore"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "_core.search.json#/components/schemas/Rescore"
                }
              }
            ]
          },
          "script_fields": {
            "description": "Retrieve a script evaluation (based on different fields) for each hit.",
            "type": "object",
            "additionalProperties": {
              "$ref": "_common.json#/components/schemas/ScriptField"
            }
          },
          "search_after": {
            "$ref": "_common.json#/components/schemas/SortResults"
          },
          "size": {
            "description": "The number of hits to return. By default, you cannot page through more\nthan 10,000 hits using the from and size parameters. To page through more\nhits, use the search_after parameter.",
            "type": "number"
          },
          "sort": {
            "$ref": "_common.json#/components/schemas/Sort"
          },
          "_source": {
            "$ref": "_core.search.json#/components/schemas/SourceConfig"
          },
          "fields": {
            "description": "Array of wildcard (*) patterns. The request returns values for field names\nmatching these patterns in the hits.fields property of the response.",
            "type": "array",
            "items": {
              "$ref": "_common.query_dsl.json#/components/schemas/FieldAndFormat"
            }
          },
          "terminate_after": {
            "description": "Maximum number of documents to collect for each shard. If a query reaches this\nlimit, Opensearch terminates the query early. Opensearch collects documents\nbefore sorting. Defaults to 0, which does not terminate query execution early.",
            "type": "number"
          },
          "stats": {
            "description": "Stats groups to associate with the search. Each group maintains a statistics\naggregation for its associated searches. You can retrieve these stats using\nthe indices stats API.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeout": {
            "description": "Specifies the period of time to wait for a response from each shard. If no response\nis received before the timeout expires, the request fails and returns an error.\nDefaults to no timeout.",
            "type": "string"
          },
          "track_scores": {
            "description": "If true, calculate and return document scores, even if the scores are not used for sorting.",
            "type": "boolean"
          },
          "track_total_hits": {
            "$ref": "_core.search.json#/components/schemas/TrackHits"
          },
          "version": {
            "description": "If true, returns document version as part of a hit.",
            "type": "boolean"
          },
          "runtime_mappings": {
            "$ref": "_common.mapping.json#/components/schemas/RuntimeFields"
          },
          "seq_no_primary_term": {
            "description": "If true, returns sequence number and primary term of the last modification\nof each hit. See Optimistic concurrency control.",
            "type": "boolean"
          },
          "pit": {
            "$ref": "_core.search.json#/components/schemas/PointInTimeReference"
          },
          "suggest": {
            "$ref": "_core.search.json#/components/schemas/Suggester"
          }
        }
      },
      "ResponseItem": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MultiSearchItem"
          },
          {
            "$ref": "_common.json#/components/schemas/ErrorResponseBase"
          }
        ]
      },
      "MultiSearchItem": {
        "allOf": [
          {
            "$ref": "_core.search.json#/components/schemas/ResponseBody"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "number"
              }
            }
          }
        ]
      },
      "MultiSearchResult": {
        "type": "object",
        "properties": {
          "took": {
            "type": "number"
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseItem"
            }
          }
        },
        "required": [
          "took",
          "responses"
        ]
      }
    }
  }
}