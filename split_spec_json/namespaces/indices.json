{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenSearch Indices API",
    "description": "OpenSearch Indices API",
    "version": "1.0.0"
  },
  "paths": {
    "/_alias": {
      "get": {
        "description": "Returns an alias.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-alias/"
        },
        "operationId": "IndicesGetAlias",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_alias#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_alias#200"
          }
        },
        "x-operation-group": "indices.get_alias",
        "x-version-added": "1.0"
      }
    },
    "/_alias/{name}": {
      "get": {
        "description": "Returns an alias.",
        "operationId": "IndicesGetAlias_WithName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_alias#200"
          }
        },
        "x-operation-group": "indices.get_alias",
        "x-version-added": "1.0"
      },
      "head": {
        "description": "Returns information about whether a particular alias exists.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesExistsAlias",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.exists_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.exists_alias#200"
          }
        },
        "x-operation-group": "indices.exists_alias",
        "x-version-added": "1.0"
      }
    },
    "/_aliases": {
      "post": {
        "description": "Updates index aliases.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/alias/"
        },
        "operationId": "IndicesUpdateAliases",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.update_aliases"
        },
        "parameters": [
          {
            "in": "query",
            "name": "timeout",
            "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.update_aliases#200"
          }
        },
        "x-operation-group": "indices.update_aliases",
        "x-version-added": "1.0"
      }
    },
    "/_analyze": {
      "get": {
        "description": "Performs the analysis process on a text and return the tokens breakdown of the text.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/analyze-apis/perform-text-analysis/"
        },
        "operationId": "IndicesAnalyze_Get",
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "description": "The name of the index to scope the operation.",
            "schema": {
              "type": "string",
              "description": "The name of the index to scope the operation."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.analyze#200"
          }
        },
        "x-operation-group": "indices.analyze",
        "x-version-added": "1.0",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.analyze"
        }
      },
      "post": {
        "description": "Performs the analysis process on a text and return the tokens breakdown of the text.",
        "operationId": "IndicesAnalyze_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.analyze"
        },
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "description": "The name of the index to scope the operation.",
            "schema": {
              "type": "string",
              "description": "The name of the index to scope the operation."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.analyze#200"
          }
        },
        "x-operation-group": "indices.analyze",
        "x-version-added": "1.0"
      }
    },
    "/_cache/clear": {
      "post": {
        "description": "Clears all or specific caches for one or more indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/clear-index-cache/"
        },
        "operationId": "IndicesClearCache",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.clear_cache#fielddata"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#fields"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#query"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#expand_wildcards"
          },
          {
            "name": "index",
            "in": "query",
            "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices."
            },
            "explode": true
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#request"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.clear_cache#200"
          }
        },
        "x-operation-group": "indices.clear_cache",
        "x-version-added": "1.0"
      }
    },
    "/_data_stream": {
      "get": {
        "description": "Returns data streams.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/data-streams/"
        },
        "operationId": "IndicesGetDataStream",
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_data_stream#200"
          }
        },
        "x-operation-group": "indices.get_data_stream",
        "x-version-added": "1.0",
        "parameters": []
      }
    },
    "/_data_stream/_stats": {
      "get": {
        "description": "Provides statistics on operations happening in a data stream.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/data-streams/"
        },
        "operationId": "IndicesDataStreamsStats",
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.data_streams_stats#200"
          }
        },
        "x-operation-group": "indices.data_streams_stats",
        "x-version-added": "1.0",
        "parameters": []
      }
    },
    "/_data_stream/{name}": {
      "delete": {
        "description": "Deletes a data stream.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/data-streams/"
        },
        "operationId": "IndicesDeleteDataStream",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Comma-separated list of data streams to delete. Wildcard (`*`) expressions are supported.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/DataStreamNames"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.delete_data_stream#200"
          }
        },
        "x-operation-group": "indices.delete_data_stream",
        "x-version-added": "1.0"
      },
      "get": {
        "description": "Returns data streams.",
        "operationId": "IndicesGetDataStream_WithName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_data_stream#name"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_data_stream#200"
          }
        },
        "x-operation-group": "indices.get_data_stream",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Creates or updates a data stream.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/data-streams/"
        },
        "operationId": "IndicesCreateDataStream",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.create_data_stream"
        },
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the data stream, which must meet the following criteria:\nLowercase only;\nCannot include `\\`, `/`, `*`, `?`, `\"`, `<`, `>`, `|`, `,`, `#`, `:`, or a space character;\nCannot start with `-`, `_`, `+`, or `.ds-`;\nCannot be `.` or `..`;\nCannot be longer than 255 bytes. Multi-byte characters count towards this limit faster.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/DataStreamName"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.create_data_stream#200"
          }
        },
        "x-operation-group": "indices.create_data_stream",
        "x-version-added": "1.0"
      }
    },
    "/_data_stream/{name}/_stats": {
      "get": {
        "description": "Provides statistics on operations happening in a data stream.",
        "operationId": "IndicesDataStreamsStats_WithName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.data_streams_stats#name"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.data_streams_stats#200"
          }
        },
        "x-operation-group": "indices.data_streams_stats",
        "x-version-added": "1.0"
      }
    },
    "/_flush": {
      "get": {
        "description": "Performs the flush operation on one or more indices.",
        "operationId": "IndicesFlush_Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.flush#force"
          },
          {
            "$ref": "#/components/parameters/indices.flush#wait_if_ongoing"
          },
          {
            "$ref": "#/components/parameters/indices.flush#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.flush#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.flush#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.flush#200"
          }
        },
        "x-operation-group": "indices.flush",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Performs the flush operation on one or more indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesFlush_Post",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.flush#force"
          },
          {
            "$ref": "#/components/parameters/indices.flush#wait_if_ongoing"
          },
          {
            "$ref": "#/components/parameters/indices.flush#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.flush#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.flush#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.flush#200"
          }
        },
        "x-operation-group": "indices.flush",
        "x-version-added": "1.0"
      }
    },
    "/_forcemerge": {
      "post": {
        "description": "Performs the force merge operation on one or more indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesForcemerge",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.forcemerge#flush"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#max_num_segments"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#only_expunge_deletes"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#wait_for_completion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.forcemerge#200"
          }
        },
        "x-operation-group": "indices.forcemerge",
        "x-version-added": "1.0"
      }
    },
    "/_index_template": {
      "get": {
        "description": "Returns an index template.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-templates/"
        },
        "operationId": "IndicesGetIndexTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_index_template#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_index_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_index_template#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_index_template#200"
          }
        },
        "x-operation-group": "indices.get_index_template",
        "x-version-added": "1.0"
      }
    },
    "/_index_template/_simulate": {
      "post": {
        "description": "Simulate resolving the given template name or body.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesSimulateTemplate",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.simulate_template"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.simulate_template#create"
          },
          {
            "name": "cause",
            "in": "query",
            "description": "User defined reason for dry-run creating the new template for simulation purposes.",
            "schema": {
              "type": "string",
              "default": "false",
              "description": "User defined reason for dry-run creating the new template for simulation purposes."
            }
          },
          {
            "$ref": "#/components/parameters/indices.simulate_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.simulate_template#200"
          }
        },
        "x-operation-group": "indices.simulate_template",
        "x-version-added": "1.0"
      }
    },
    "/_index_template/_simulate/{name}": {
      "post": {
        "description": "Simulate resolving the given template name or body.",
        "operationId": "IndicesSimulateTemplate_WithName",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.simulate_template"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.simulate_template#name"
          },
          {
            "$ref": "#/components/parameters/indices.simulate_template#create"
          },
          {
            "name": "cause",
            "in": "query",
            "description": "User defined reason for dry-run creating the new template for simulation purposes.",
            "schema": {
              "type": "string",
              "default": "false",
              "description": "User defined reason for dry-run creating the new template for simulation purposes."
            }
          },
          {
            "$ref": "#/components/parameters/indices.simulate_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.simulate_template#200"
          }
        },
        "x-operation-group": "indices.simulate_template",
        "x-version-added": "1.0"
      }
    },
    "/_index_template/_simulate_index/{name}": {
      "post": {
        "description": "Simulate matching the given index name against the index templates in the system.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesSimulateIndexTemplate",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.simulate_index_template"
        },
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Index or template name to simulate",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Name"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "create",
            "description": "If `true`, the template passed in the body is only used if no existing\ntemplates match the same index patterns. If `false`, the simulation uses\nthe template with the highest priority. Note that the template is not\npermanently added or updated in either case; it is only used for the\nsimulation.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "name": "cause",
            "in": "query",
            "description": "User defined reason for dry-run creating the new template for simulation purposes.",
            "schema": {
              "type": "string",
              "default": "false",
              "description": "User defined reason for dry-run creating the new template for simulation purposes."
            }
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node. If no response is received\nbefore the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.simulate_index_template#200"
          }
        },
        "x-operation-group": "indices.simulate_index_template",
        "x-version-added": "1.0"
      }
    },
    "/_index_template/{name}": {
      "delete": {
        "description": "Deletes an index template.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template"
        },
        "operationId": "IndicesDeleteIndexTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Comma-separated list of index template names used to limit the request. Wildcard (*) expressions are supported.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Names"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "timeout",
            "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.delete_index_template#200"
          }
        },
        "x-operation-group": "indices.delete_index_template",
        "x-version-added": "1.0"
      },
      "get": {
        "description": "Returns an index template.",
        "operationId": "IndicesGetIndexTemplate_WithName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_index_template#name"
          },
          {
            "$ref": "#/components/parameters/indices.get_index_template#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_index_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_index_template#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_index_template#200"
          }
        },
        "x-operation-group": "indices.get_index_template",
        "x-version-added": "1.0"
      },
      "head": {
        "description": "Returns information about whether a particular index template exists.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-templates/"
        },
        "operationId": "IndicesExistsIndexTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Comma-separated list of index template names used to limit the request. Wildcard (*) expressions are supported.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Name"
            },
            "style": "simple"
          },
          {
            "name": "flat_settings",
            "in": "query",
            "description": "Return settings in flat format.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "Return settings in flat format."
            }
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "name": "local",
            "in": "query",
            "description": "Return local information, do not retrieve the state from cluster-manager node.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "Return local information, do not retrieve the state from cluster-manager node."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.exists_index_template#200"
          }
        },
        "x-operation-group": "indices.exists_index_template",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Creates or updates an index template.",
        "operationId": "IndicesPutIndexTemplate_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_index_template"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_index_template#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_index_template#create"
          },
          {
            "name": "cause",
            "in": "query",
            "description": "User defined reason for creating/updating the index template.",
            "schema": {
              "type": "string",
              "default": "false",
              "description": "User defined reason for creating/updating the index template."
            }
          },
          {
            "name": "master_timeout",
            "in": "query",
            "description": "Operation timeout for connection to master node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead.",
            "deprecated": true
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_index_template#200"
          }
        },
        "x-operation-group": "indices.put_index_template",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Creates or updates an index template.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-templates/"
        },
        "operationId": "IndicesPutIndexTemplate_Put",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_index_template"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_index_template#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_index_template#create"
          },
          {
            "name": "cause",
            "in": "query",
            "description": "User defined reason for creating/updating the index template.",
            "schema": {
              "type": "string",
              "default": "false",
              "description": "User defined reason for creating/updating the index template."
            }
          },
          {
            "name": "master_timeout",
            "in": "query",
            "description": "Operation timeout for connection to master node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead.",
            "deprecated": true
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_index_template#200"
          }
        },
        "x-operation-group": "indices.put_index_template",
        "x-version-added": "1.0"
      }
    },
    "/_mapping": {
      "get": {
        "description": "Returns mappings for one or more indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/field-types/index/#get-a-mapping"
        },
        "operationId": "IndicesGetMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_mapping#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_mapping#200"
          }
        },
        "x-operation-group": "indices.get_mapping",
        "x-version-added": "1.0"
      }
    },
    "/_mapping/field/{fields}": {
      "get": {
        "description": "Returns mapping for one or more fields.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/field-types/index/"
        },
        "operationId": "IndicesGetFieldMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#fields"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#include_defaults"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_field_mapping#200"
          }
        },
        "x-operation-group": "indices.get_field_mapping",
        "x-version-added": "1.0"
      }
    },
    "/_recovery": {
      "get": {
        "description": "Returns information about ongoing index shard recoveries.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesRecovery",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.recovery#detailed"
          },
          {
            "$ref": "#/components/parameters/indices.recovery#active_only"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.recovery#200"
          }
        },
        "x-operation-group": "indices.recovery",
        "x-version-added": "1.0"
      }
    },
    "/_refresh": {
      "get": {
        "description": "Performs the refresh operation in one or more indices.",
        "operationId": "IndicesRefresh_Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.refresh#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.refresh#200"
          }
        },
        "x-operation-group": "indices.refresh",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Performs the refresh operation in one or more indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/tuning-your-cluster/availability-and-recovery/remote-store/index/#refresh-level-and-request-level-durability"
        },
        "operationId": "IndicesRefresh_Post",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.refresh#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.refresh#200"
          }
        },
        "x-operation-group": "indices.refresh",
        "x-version-added": "1.0"
      }
    },
    "/_resolve/index/{name}": {
      "get": {
        "description": "Returns information about any matching indices, aliases, and data streams.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesResolveIndex",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Comma-separated name(s) or index pattern(s) of the indices, aliases, and data streams to resolve.\nResources on remote clusters can be specified using the `<cluster>`:`<name>` syntax.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Names"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "expand_wildcards",
            "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.resolve_index#200"
          }
        },
        "x-operation-group": "indices.resolve_index",
        "x-version-added": "1.0"
      }
    },
    "/_segments": {
      "get": {
        "description": "Provides low-level information about segments in a Lucene index.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesSegments",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.segments#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.segments#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.segments#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.segments#verbose"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.segments#200"
          }
        },
        "x-operation-group": "indices.segments",
        "x-version-added": "1.0"
      }
    },
    "/_settings": {
      "get": {
        "description": "Returns settings for one or more indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/get-settings/"
        },
        "operationId": "IndicesGetSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_settings#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#local"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#include_defaults"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_settings#200"
          }
        },
        "x-operation-group": "indices.get_settings",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Updates the index settings.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/update-settings/"
        },
        "operationId": "IndicesPutSettings",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_settings"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_settings#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#preserve_existing"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#flat_settings"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_settings#200"
          }
        },
        "x-operation-group": "indices.put_settings",
        "x-version-added": "1.0"
      }
    },
    "/_settings/{name}": {
      "get": {
        "description": "Returns settings for one or more indices.",
        "operationId": "IndicesGetSettings_WithName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_settings#name"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#local"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#include_defaults"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_settings#200"
          }
        },
        "x-operation-group": "indices.get_settings",
        "x-version-added": "1.0"
      }
    },
    "/_shard_stores": {
      "get": {
        "description": "Provides store information for shard copies of indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesShardStores",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.shard_stores#status"
          },
          {
            "$ref": "#/components/parameters/indices.shard_stores#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.shard_stores#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.shard_stores#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.shard_stores#200"
          }
        },
        "x-operation-group": "indices.shard_stores",
        "x-version-added": "1.0"
      }
    },
    "/_stats": {
      "get": {
        "description": "Provides statistics on operations happening in an index.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesStats",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.stats#completion_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fielddata_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#groups"
          },
          {
            "$ref": "#/components/parameters/indices.stats#level"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_segment_file_sizes"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_unloaded_segments"
          },
          {
            "$ref": "#/components/parameters/indices.stats#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.stats#forbid_closed_indices"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.stats#200"
          }
        },
        "x-operation-group": "indices.stats",
        "x-version-added": "1.0"
      }
    },
    "/_stats/{metric}": {
      "get": {
        "description": "Provides statistics on operations happening in an index.",
        "operationId": "IndicesStats_WithMetric",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.stats#metric"
          },
          {
            "$ref": "#/components/parameters/indices.stats#completion_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fielddata_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#groups"
          },
          {
            "$ref": "#/components/parameters/indices.stats#level"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_segment_file_sizes"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_unloaded_segments"
          },
          {
            "$ref": "#/components/parameters/indices.stats#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.stats#forbid_closed_indices"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.stats#200"
          }
        },
        "x-operation-group": "indices.stats",
        "x-version-added": "1.0"
      }
    },
    "/_template": {
      "get": {
        "description": "Returns an index template.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesGetTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_template#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_template#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_template#200"
          }
        },
        "x-operation-group": "indices.get_template",
        "x-version-added": "1.0"
      }
    },
    "/_template/{name}": {
      "delete": {
        "description": "Deletes an index template.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesDeleteTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The name of the legacy index template to delete.\nWildcard (`*`) expressions are supported.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Name"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "timeout",
            "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.delete_template#200"
          }
        },
        "x-operation-group": "indices.delete_template",
        "x-version-added": "1.0"
      },
      "get": {
        "description": "Returns an index template.",
        "operationId": "IndicesGetTemplate_WithName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_template#name"
          },
          {
            "$ref": "#/components/parameters/indices.get_template#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_template#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_template#200"
          }
        },
        "x-operation-group": "indices.get_template",
        "x-version-added": "1.0"
      },
      "head": {
        "description": "Returns information about whether a particular index template exists.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesExistsTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The comma separated names of the index templates",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Names"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "flat_settings",
            "description": "Return settings in flat format (default: false)",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Explicit operation timeout for connection to master node",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "in": "query",
            "name": "local",
            "description": "Return local information, do not retrieve the state from master node (default: false)",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.exists_template#200"
          }
        },
        "x-operation-group": "indices.exists_template",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Creates or updates an index template.",
        "operationId": "IndicesPutTemplate_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_template"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_template#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_template#order"
          },
          {
            "$ref": "#/components/parameters/indices.put_template#create"
          },
          {
            "$ref": "#/components/parameters/indices.put_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_template#200"
          }
        },
        "x-operation-group": "indices.put_template",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Creates or updates an index template.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-templates/"
        },
        "operationId": "IndicesPutTemplate_Put",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_template"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_template#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_template#order"
          },
          {
            "$ref": "#/components/parameters/indices.put_template#create"
          },
          {
            "$ref": "#/components/parameters/indices.put_template#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_template#200"
          }
        },
        "x-operation-group": "indices.put_template",
        "x-version-added": "1.0"
      }
    },
    "/_upgrade": {
      "get": {
        "description": "The _upgrade API is no longer useful and will be removed.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesGetUpgrade",
        "parameters": [
          {
            "name": "ignore_unavailable",
            "in": "query",
            "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed).",
            "schema": {
              "type": "boolean",
              "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)."
            }
          },
          {
            "name": "allow_no_indices",
            "in": "query",
            "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified).",
            "schema": {
              "type": "boolean",
              "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)."
            }
          },
          {
            "name": "expand_wildcards",
            "in": "query",
            "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IndicesGetUpgrade 200 response"
          }
        },
        "x-operation-group": "indices.get_upgrade",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "The _upgrade API is no longer useful and will be removed.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesUpgrade",
        "parameters": [
          {
            "name": "allow_no_indices",
            "in": "query",
            "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified).",
            "schema": {
              "type": "boolean",
              "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)."
            }
          },
          {
            "name": "expand_wildcards",
            "in": "query",
            "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            }
          },
          {
            "name": "ignore_unavailable",
            "in": "query",
            "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed).",
            "schema": {
              "type": "boolean",
              "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)."
            }
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "only_ancient_segments",
            "in": "query",
            "description": "If true, only ancient (an older Lucene major release) segments will be upgraded.",
            "schema": {
              "type": "boolean",
              "description": "If true, only ancient (an older Lucene major release) segments will be upgraded."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IndicesUpgrade 200 response"
          }
        },
        "x-operation-group": "indices.upgrade",
        "x-version-added": "1.0"
      }
    },
    "/_validate/query": {
      "get": {
        "description": "Allows a user to validate a potentially expensive query without executing it.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesValidateQuery_Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.validate_query#explain"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#q"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyzer"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyze_wildcard"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#default_operator"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#df"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#lenient"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#rewrite"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#all_shards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.validate_query#200"
          }
        },
        "x-operation-group": "indices.validate_query",
        "x-version-added": "1.0",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.validate_query"
        }
      },
      "post": {
        "description": "Allows a user to validate a potentially expensive query without executing it.",
        "operationId": "IndicesValidateQuery_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.validate_query"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.validate_query#explain"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#q"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyzer"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyze_wildcard"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#default_operator"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#df"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#lenient"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#rewrite"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#all_shards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.validate_query#200"
          }
        },
        "x-operation-group": "indices.validate_query",
        "x-version-added": "1.0"
      }
    },
    "/{alias}/_rollover": {
      "post": {
        "description": "Updates an alias to point to a new index when the existing index\nis considered to be too large or too old.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/dashboards/im-dashboards/rollover/"
        },
        "operationId": "IndicesRollover",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.rollover"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.rollover#alias"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#dry_run"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#wait_for_active_shards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.rollover#200"
          }
        },
        "x-operation-group": "indices.rollover",
        "x-version-added": "1.0"
      }
    },
    "/{alias}/_rollover/{new_index}": {
      "post": {
        "description": "Updates an alias to point to a new index when the existing index\nis considered to be too large or too old.",
        "operationId": "IndicesRollover_WithNewIndex",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.rollover"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.rollover#alias"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#new_index"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#dry_run"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.rollover#wait_for_active_shards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.rollover#200"
          }
        },
        "x-operation-group": "indices.rollover",
        "x-version-added": "1.0"
      }
    },
    "/{index}": {
      "delete": {
        "description": "Deletes an index.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/delete-index/"
        },
        "operationId": "IndicesDelete",
        "parameters": [
          {
            "in": "path",
            "name": "index",
            "description": "Comma-separated list of indices to delete.\nYou cannot specify index aliases.\nBy default, this parameter does not support wildcards (`*`) or `_all`.\nTo use wildcards or `_all`, set the `action.destructive_requires_name` cluster setting to `false`.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Indices"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "timeout",
            "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "in": "query",
            "name": "ignore_unavailable",
            "description": "If `false`, the request returns an error if it targets a missing or closed index.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "allow_no_indices",
            "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "in": "query",
            "name": "expand_wildcards",
            "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.delete#200"
          }
        },
        "x-operation-group": "indices.delete",
        "x-version-added": "1.0"
      },
      "get": {
        "description": "Returns information about one or more indices.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/get-index/"
        },
        "operationId": "IndicesGet",
        "parameters": [
          {
            "in": "path",
            "name": "index",
            "description": "Comma-separated list of data streams, indices, and index aliases used to limit the request.\nWildcard expressions (*) are supported.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Indices"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "local",
            "description": "If true, the request retrieves information from the local node only. Defaults to false, which means information is retrieved from the master node.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "ignore_unavailable",
            "description": "If false, requests that target a missing index return an error.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "allow_no_indices",
            "description": "If false, the request returns an error if any wildcard expression, index alias, or _all value targets only\nmissing or closed indices. This behavior applies even if the request targets other open indices. For example,\na request targeting foo*,bar* returns an error if an index starts with foo but no index starts with bar.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "expand_wildcards",
            "description": "Type of index that wildcard expressions can match. If the request can target data streams, this argument\ndetermines whether wildcard expressions match hidden data streams. Supports comma-separated values,\nsuch as open,hidden.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "flat_settings",
            "description": "If true, returns settings in flat format.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "include_defaults",
            "description": "If true, return all default settings in the response.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get#200"
          }
        },
        "x-operation-group": "indices.get",
        "x-version-added": "1.0"
      },
      "head": {
        "description": "Returns information about whether a particular index exists.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/exists/"
        },
        "operationId": "IndicesExists",
        "parameters": [
          {
            "in": "path",
            "name": "index",
            "description": "Comma-separated list of data streams, indices, and aliases. Supports wildcards (`*`).",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Indices"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "local",
            "description": "If `true`, the request retrieves information from the local node only.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "ignore_unavailable",
            "description": "If `false`, the request returns an error if it targets a missing or closed index.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "allow_no_indices",
            "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "expand_wildcards",
            "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "flat_settings",
            "description": "If `true`, returns settings in flat format.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "include_defaults",
            "description": "If `true`, return all default settings in the response.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.exists#200"
          }
        },
        "x-operation-group": "indices.exists",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Creates an index with optional settings and mappings.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/create-index/"
        },
        "operationId": "IndicesCreate",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.create"
        },
        "parameters": [
          {
            "in": "path",
            "name": "index",
            "description": "Name of the index you wish to create.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/IndexName"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "wait_for_active_shards",
            "description": "The number of shard copies that must be active before proceeding with the operation. \nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/WaitForActiveShards"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "timeout",
            "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.create#200"
          }
        },
        "x-operation-group": "indices.create",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_alias": {
      "get": {
        "description": "Returns an alias.",
        "operationId": "IndicesGetAlias_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_alias#200"
          }
        },
        "x-operation-group": "indices.get_alias",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_alias/{name}": {
      "delete": {
        "description": "Deletes an alias.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-alias/#delete-aliases"
        },
        "operationId": "IndicesDeleteAlias",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.delete_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.delete_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.delete_alias#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.delete_alias#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.delete_alias#200"
          }
        },
        "x-operation-group": "indices.delete_alias",
        "x-version-added": "1.0"
      },
      "get": {
        "description": "Returns an alias.",
        "operationId": "IndicesGetAlias_WithIndexName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_alias#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_alias#200"
          }
        },
        "x-operation-group": "indices.get_alias",
        "x-version-added": "1.0"
      },
      "head": {
        "description": "Returns information about whether a particular alias exists.",
        "operationId": "IndicesExistsAlias_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.exists_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.exists_alias#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.exists_alias#200"
          }
        },
        "x-operation-group": "indices.exists_alias",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Creates or updates an alias.",
        "operationId": "IndicesPutAlias_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_alias"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_alias#200"
          }
        },
        "x-operation-group": "indices.put_alias",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Creates or updates an alias.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/im-plugin/index-alias/#create-aliases"
        },
        "operationId": "IndicesPutAlias_Put",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_alias"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_alias#200"
          }
        },
        "x-operation-group": "indices.put_alias",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_aliases/{name}": {
      "delete": {
        "description": "Deletes an alias.",
        "operationId": "IndicesDeleteAlias_Plural",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.delete_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.delete_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.delete_alias#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.delete_alias#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.delete_alias#200"
          }
        },
        "x-operation-group": "indices.delete_alias",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Creates or updates an alias.",
        "operationId": "IndicesPutAlias_Post_Plural",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_alias"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_alias#200"
          }
        },
        "x-operation-group": "indices.put_alias",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Creates or updates an alias.",
        "operationId": "IndicesPutAlias_Put_Plural",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_alias"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_alias#index"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#name"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_alias#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_alias#200"
          }
        },
        "x-operation-group": "indices.put_alias",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_analyze": {
      "get": {
        "description": "Performs the analysis process on a text and return the tokens breakdown of the text.",
        "operationId": "IndicesAnalyze_Get_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.analyze#index"
          },
          {
            "name": "index",
            "in": "query",
            "description": "The name of the index to scope the operation.",
            "schema": {
              "type": "string",
              "description": "The name of the index to scope the operation."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.analyze#200"
          }
        },
        "x-operation-group": "indices.analyze",
        "x-version-added": "1.0",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.analyze"
        }
      },
      "post": {
        "description": "Performs the analysis process on a text and return the tokens breakdown of the text.",
        "operationId": "IndicesAnalyze_Post_WithIndex",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.analyze"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.analyze#index"
          },
          {
            "name": "index",
            "in": "query",
            "description": "The name of the index to scope the operation.",
            "schema": {
              "type": "string",
              "description": "The name of the index to scope the operation."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.analyze#200"
          }
        },
        "x-operation-group": "indices.analyze",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_block/{block}": {
      "put": {
        "description": "Adds a block to an index.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest"
        },
        "operationId": "IndicesAddBlock",
        "parameters": [
          {
            "in": "path",
            "name": "index",
            "description": "A comma separated list of indices to add a block to",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/IndexName"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "block",
            "description": "The block to add (one of read, write, read_only or metadata)",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/indices.add_block.json#/components/schemas/IndicesBlockOptions"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "timeout",
            "description": "Explicit operation timeout",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Specify timeout for connection to master",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "in": "query",
            "name": "ignore_unavailable",
            "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "allow_no_indices",
            "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "expand_wildcards",
            "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.add_block#200"
          }
        },
        "x-operation-group": "indices.add_block",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_cache/clear": {
      "post": {
        "description": "Clears all or specific caches for one or more indices.",
        "operationId": "IndicesClearCache_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.clear_cache#index"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#fielddata"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#fields"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#query"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#expand_wildcards"
          },
          {
            "name": "index",
            "in": "query",
            "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices."
            },
            "explode": true
          },
          {
            "$ref": "#/components/parameters/indices.clear_cache#request"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.clear_cache#200"
          }
        },
        "x-operation-group": "indices.clear_cache",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_clone/{target}": {
      "post": {
        "description": "Clones an index.",
        "operationId": "IndicesClone_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.clone"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.clone#index"
          },
          {
            "$ref": "#/components/parameters/indices.clone#target"
          },
          {
            "$ref": "#/components/parameters/indices.clone#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.clone#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.clone#wait_for_active_shards"
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "task_execution_timeout",
            "in": "query",
            "description": "Explicit task execution timeout, only useful when wait_for_completion is false, defaults to 1h.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.clone#200"
          }
        },
        "x-operation-group": "indices.clone",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Clones an index.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/clone/"
        },
        "operationId": "IndicesClone_Put",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.clone"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.clone#index"
          },
          {
            "$ref": "#/components/parameters/indices.clone#target"
          },
          {
            "$ref": "#/components/parameters/indices.clone#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.clone#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.clone#wait_for_active_shards"
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "task_execution_timeout",
            "in": "query",
            "description": "Explicit task execution timeout, only useful when wait_for_completion is false, defaults to 1h.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.clone#200"
          }
        },
        "x-operation-group": "indices.clone",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_close": {
      "post": {
        "description": "Closes an index.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/close-index/"
        },
        "operationId": "IndicesClose",
        "parameters": [
          {
            "in": "path",
            "name": "index",
            "description": "Comma-separated list or wildcard expression of index names used to limit the request.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Indices"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "timeout",
            "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "in": "query",
            "name": "ignore_unavailable",
            "description": "If `false`, the request returns an error if it targets a missing or closed index.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "allow_no_indices",
            "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "expand_wildcards",
            "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "wait_for_active_shards",
            "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/WaitForActiveShards"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.close#200"
          }
        },
        "x-operation-group": "indices.close",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_flush": {
      "get": {
        "description": "Performs the flush operation on one or more indices.",
        "operationId": "IndicesFlush_Get_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.flush#index"
          },
          {
            "$ref": "#/components/parameters/indices.flush#force"
          },
          {
            "$ref": "#/components/parameters/indices.flush#wait_if_ongoing"
          },
          {
            "$ref": "#/components/parameters/indices.flush#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.flush#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.flush#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.flush#200"
          }
        },
        "x-operation-group": "indices.flush",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Performs the flush operation on one or more indices.",
        "operationId": "IndicesFlush_Post_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.flush#index"
          },
          {
            "$ref": "#/components/parameters/indices.flush#force"
          },
          {
            "$ref": "#/components/parameters/indices.flush#wait_if_ongoing"
          },
          {
            "$ref": "#/components/parameters/indices.flush#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.flush#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.flush#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.flush#200"
          }
        },
        "x-operation-group": "indices.flush",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_forcemerge": {
      "post": {
        "description": "Performs the force merge operation on one or more indices.",
        "operationId": "IndicesForcemerge_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.forcemerge#index"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#flush"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#max_num_segments"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#only_expunge_deletes"
          },
          {
            "$ref": "#/components/parameters/indices.forcemerge#wait_for_completion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.forcemerge#200"
          }
        },
        "x-operation-group": "indices.forcemerge",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_mapping": {
      "get": {
        "description": "Returns mappings for one or more indices.",
        "operationId": "IndicesGetMapping_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_mapping#index"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_mapping#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_mapping#200"
          }
        },
        "x-operation-group": "indices.get_mapping",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Updates the index mappings.",
        "operationId": "IndicesPutMapping_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_mapping"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_mapping#index"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#write_index_only"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_mapping#200"
          }
        },
        "x-operation-group": "indices.put_mapping",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Updates the index mappings.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/put-mapping/"
        },
        "operationId": "IndicesPutMapping_Put",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_mapping"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_mapping#index"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.put_mapping#write_index_only"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_mapping#200"
          }
        },
        "x-operation-group": "indices.put_mapping",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_mapping/field/{fields}": {
      "get": {
        "description": "Returns mapping for one or more fields.",
        "operationId": "IndicesGetFieldMapping_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#index"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#fields"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#include_defaults"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_field_mapping#local"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_field_mapping#200"
          }
        },
        "x-operation-group": "indices.get_field_mapping",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_open": {
      "post": {
        "description": "Opens an index.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/open-index/"
        },
        "operationId": "IndicesOpen",
        "parameters": [
          {
            "in": "path",
            "name": "index",
            "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nBy default, you must explicitly name the indices you using to limit the request.\nTo limit a request using `_all`, `*`, or other wildcard expressions, change the `action.destructive_requires_name` setting to false.\nYou can update this setting in the `opensearch.yml` file or using the cluster update settings API.",
            "required": true,
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Indices"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "timeout",
            "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "master_timeout",
            "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
            "deprecated": true,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "style": "form",
            "x-version-deprecated": "2.0.0",
            "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
          },
          {
            "in": "query",
            "name": "ignore_unavailable",
            "description": "If `false`, the request returns an error if it targets a missing or closed index.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "allow_no_indices",
            "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "expand_wildcards",
            "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            },
            "style": "form"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "in": "query",
            "name": "wait_for_active_shards",
            "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
            "deprecated": false,
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/WaitForActiveShards"
            },
            "style": "form"
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "task_execution_timeout",
            "in": "query",
            "description": "Explicit task execution timeout, only useful when wait_for_completion is false, defaults to 1h.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.open#200"
          }
        },
        "x-operation-group": "indices.open",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_recovery": {
      "get": {
        "description": "Returns information about ongoing index shard recoveries.",
        "operationId": "IndicesRecovery_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.recovery#index"
          },
          {
            "$ref": "#/components/parameters/indices.recovery#detailed"
          },
          {
            "$ref": "#/components/parameters/indices.recovery#active_only"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.recovery#200"
          }
        },
        "x-operation-group": "indices.recovery",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_refresh": {
      "get": {
        "description": "Performs the refresh operation in one or more indices.",
        "operationId": "IndicesRefresh_Get_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.refresh#index"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.refresh#200"
          }
        },
        "x-operation-group": "indices.refresh",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "Performs the refresh operation in one or more indices.",
        "operationId": "IndicesRefresh_Post_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.refresh#index"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.refresh#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.refresh#200"
          }
        },
        "x-operation-group": "indices.refresh",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_segments": {
      "get": {
        "description": "Provides low-level information about segments in a Lucene index.",
        "operationId": "IndicesSegments_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.segments#index"
          },
          {
            "$ref": "#/components/parameters/indices.segments#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.segments#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.segments#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.segments#verbose"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.segments#200"
          }
        },
        "x-operation-group": "indices.segments",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_settings": {
      "get": {
        "description": "Returns settings for one or more indices.",
        "operationId": "IndicesGetSettings_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_settings#index"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#local"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#include_defaults"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_settings#200"
          }
        },
        "x-operation-group": "indices.get_settings",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Updates the index settings.",
        "operationId": "IndicesPutSettings_WithIndex",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.put_settings"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.put_settings#index"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#preserve_existing"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.put_settings#flat_settings"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.put_settings#200"
          }
        },
        "x-operation-group": "indices.put_settings",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_settings/{name}": {
      "get": {
        "description": "Returns settings for one or more indices.",
        "operationId": "IndicesGetSettings_WithIndexName",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.get_settings#index"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#name"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#flat_settings"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#local"
          },
          {
            "$ref": "#/components/parameters/indices.get_settings#include_defaults"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.get_settings#200"
          }
        },
        "x-operation-group": "indices.get_settings",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_shard_stores": {
      "get": {
        "description": "Provides store information for shard copies of indices.",
        "operationId": "IndicesShardStores_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.shard_stores#index"
          },
          {
            "$ref": "#/components/parameters/indices.shard_stores#status"
          },
          {
            "$ref": "#/components/parameters/indices.shard_stores#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.shard_stores#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.shard_stores#expand_wildcards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.shard_stores#200"
          }
        },
        "x-operation-group": "indices.shard_stores",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_shrink/{target}": {
      "post": {
        "description": "Allow to shrink an existing index into a new index with fewer primary shards.",
        "operationId": "IndicesShrink_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.shrink"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.shrink#index"
          },
          {
            "$ref": "#/components/parameters/indices.shrink#target"
          },
          {
            "name": "copy_settings",
            "in": "query",
            "description": "whether or not to copy settings from the source index.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "whether or not to copy settings from the source index."
            }
          },
          {
            "$ref": "#/components/parameters/indices.shrink#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.shrink#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.shrink#wait_for_active_shards"
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "task_execution_timeout",
            "in": "query",
            "description": "Explicit task execution timeout, only useful when wait_for_completion is false, defaults to 1h.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.shrink#200"
          }
        },
        "x-operation-group": "indices.shrink",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Allow to shrink an existing index into a new index with fewer primary shards.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/shrink-index/"
        },
        "operationId": "IndicesShrink_Put",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.shrink"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.shrink#index"
          },
          {
            "$ref": "#/components/parameters/indices.shrink#target"
          },
          {
            "name": "copy_settings",
            "in": "query",
            "description": "whether or not to copy settings from the source index.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "whether or not to copy settings from the source index."
            }
          },
          {
            "$ref": "#/components/parameters/indices.shrink#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.shrink#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.shrink#wait_for_active_shards"
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "task_execution_timeout",
            "in": "query",
            "description": "Explicit task execution timeout, only useful when wait_for_completion is false, defaults to 1h.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.shrink#200"
          }
        },
        "x-operation-group": "indices.shrink",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_split/{target}": {
      "post": {
        "description": "Allows you to split an existing index into a new index with more primary shards.",
        "operationId": "IndicesSplit_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.split"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.split#index"
          },
          {
            "$ref": "#/components/parameters/indices.split#target"
          },
          {
            "name": "copy_settings",
            "in": "query",
            "description": "whether or not to copy settings from the source index.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "whether or not to copy settings from the source index."
            }
          },
          {
            "$ref": "#/components/parameters/indices.split#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.split#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.split#wait_for_active_shards"
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "task_execution_timeout",
            "in": "query",
            "description": "Explicit task execution timeout, only useful when wait_for_completion is false, defaults to 1h.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.split#200"
          }
        },
        "x-operation-group": "indices.split",
        "x-version-added": "1.0"
      },
      "put": {
        "description": "Allows you to split an existing index into a new index with more primary shards.",
        "externalDocs": {
          "description": "API Reference",
          "url": "https://opensearch.org/docs/latest/api-reference/index-apis/split/"
        },
        "operationId": "IndicesSplit_Put",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.split"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.split#index"
          },
          {
            "$ref": "#/components/parameters/indices.split#target"
          },
          {
            "name": "copy_settings",
            "in": "query",
            "description": "whether or not to copy settings from the source index.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "whether or not to copy settings from the source index."
            }
          },
          {
            "$ref": "#/components/parameters/indices.split#timeout"
          },
          {
            "$ref": "#/components/parameters/indices.split#master_timeout"
          },
          {
            "name": "cluster_manager_timeout",
            "in": "query",
            "description": "Operation timeout for connection to cluster-manager node.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            },
            "x-version-added": "2.0.0"
          },
          {
            "$ref": "#/components/parameters/indices.split#wait_for_active_shards"
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "task_execution_timeout",
            "in": "query",
            "description": "Explicit task execution timeout, only useful when wait_for_completion is false, defaults to 1h.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.split#200"
          }
        },
        "x-operation-group": "indices.split",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_stats": {
      "get": {
        "description": "Provides statistics on operations happening in an index.",
        "operationId": "IndicesStats_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.stats#index"
          },
          {
            "$ref": "#/components/parameters/indices.stats#completion_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fielddata_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#groups"
          },
          {
            "$ref": "#/components/parameters/indices.stats#level"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_segment_file_sizes"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_unloaded_segments"
          },
          {
            "$ref": "#/components/parameters/indices.stats#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.stats#forbid_closed_indices"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.stats#200"
          }
        },
        "x-operation-group": "indices.stats",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_stats/{metric}": {
      "get": {
        "description": "Provides statistics on operations happening in an index.",
        "operationId": "IndicesStats_WithIndexMetric",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.stats#index"
          },
          {
            "$ref": "#/components/parameters/indices.stats#metric"
          },
          {
            "$ref": "#/components/parameters/indices.stats#completion_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fielddata_fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#fields"
          },
          {
            "$ref": "#/components/parameters/indices.stats#groups"
          },
          {
            "$ref": "#/components/parameters/indices.stats#level"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_segment_file_sizes"
          },
          {
            "$ref": "#/components/parameters/indices.stats#include_unloaded_segments"
          },
          {
            "$ref": "#/components/parameters/indices.stats#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.stats#forbid_closed_indices"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.stats#200"
          }
        },
        "x-operation-group": "indices.stats",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_upgrade": {
      "get": {
        "description": "The _upgrade API is no longer useful and will be removed.",
        "operationId": "IndicesGetUpgrade_WithIndex",
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.",
            "schema": {
              "type": "string",
              "pattern": "^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$",
              "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.",
              "x-data-type": "array"
            },
            "required": true
          },
          {
            "name": "ignore_unavailable",
            "in": "query",
            "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed).",
            "schema": {
              "type": "boolean",
              "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)."
            }
          },
          {
            "name": "allow_no_indices",
            "in": "query",
            "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified).",
            "schema": {
              "type": "boolean",
              "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)."
            }
          },
          {
            "name": "expand_wildcards",
            "in": "query",
            "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IndicesGetUpgrade_WithIndex 200 response"
          }
        },
        "x-operation-group": "indices.get_upgrade",
        "x-version-added": "1.0"
      },
      "post": {
        "description": "The _upgrade API is no longer useful and will be removed.",
        "operationId": "IndicesUpgrade_WithIndex",
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.",
            "schema": {
              "type": "string",
              "pattern": "^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$",
              "description": "Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.",
              "x-data-type": "array"
            },
            "required": true
          },
          {
            "name": "allow_no_indices",
            "in": "query",
            "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified).",
            "schema": {
              "type": "boolean",
              "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)."
            }
          },
          {
            "name": "expand_wildcards",
            "in": "query",
            "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
            }
          },
          {
            "name": "ignore_unavailable",
            "in": "query",
            "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed).",
            "schema": {
              "type": "boolean",
              "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)."
            }
          },
          {
            "name": "wait_for_completion",
            "in": "query",
            "description": "Should this request wait until the operation has completed before returning.",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "Should this request wait until the operation has completed before returning."
            }
          },
          {
            "name": "only_ancient_segments",
            "in": "query",
            "description": "If true, only ancient (an older Lucene major release) segments will be upgraded.",
            "schema": {
              "type": "boolean",
              "description": "If true, only ancient (an older Lucene major release) segments will be upgraded."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IndicesUpgrade_WithIndex 200 response"
          }
        },
        "x-operation-group": "indices.upgrade",
        "x-version-added": "1.0"
      }
    },
    "/{index}/_validate/query": {
      "get": {
        "description": "Allows a user to validate a potentially expensive query without executing it.",
        "operationId": "IndicesValidateQuery_Get_WithIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.validate_query#index"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#explain"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#q"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyzer"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyze_wildcard"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#default_operator"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#df"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#lenient"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#rewrite"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#all_shards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.validate_query#200"
          }
        },
        "x-operation-group": "indices.validate_query",
        "x-version-added": "1.0",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.validate_query"
        }
      },
      "post": {
        "description": "Allows a user to validate a potentially expensive query without executing it.",
        "operationId": "IndicesValidateQuery_Post_WithIndex",
        "requestBody": {
          "$ref": "#/components/requestBodies/indices.validate_query"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/indices.validate_query#index"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#explain"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#ignore_unavailable"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#allow_no_indices"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#expand_wildcards"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#q"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyzer"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#analyze_wildcard"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#default_operator"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#df"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#lenient"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#rewrite"
          },
          {
            "$ref": "#/components/parameters/indices.validate_query#all_shards"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/indices.validate_query#200"
          }
        },
        "x-operation-group": "indices.validate_query",
        "x-version-added": "1.0"
      }
    }
  },
  "components": {
    "requestBodies": {
      "indices.analyze": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "analyzer": {
                  "description": "The name of the analyzer that should be applied to the provided `text`.\nThis could be a built-in analyzer, or an analyzer that’s been configured in the index.",
                  "type": "string"
                },
                "attributes": {
                  "description": "Array of token attributes used to filter the output of the `explain` parameter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "char_filter": {
                  "description": "Array of character filters used to preprocess characters before the tokenizer.",
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/_common.analysis.json#/components/schemas/CharFilter"
                  }
                },
                "explain": {
                  "description": "If `true`, the response includes token attributes and additional details.",
                  "type": "boolean"
                },
                "field": {
                  "$ref": "../schemas/_common.json#/components/schemas/Field"
                },
                "filter": {
                  "description": "Array of token filters used to apply after the tokenizer.",
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/_common.analysis.json#/components/schemas/TokenFilter"
                  }
                },
                "normalizer": {
                  "description": "Normalizer to use to convert text into a single token.",
                  "type": "string"
                },
                "text": {
                  "$ref": "../schemas/indices.analyze.json#/components/schemas/TextToAnalyze"
                },
                "tokenizer": {
                  "$ref": "../schemas/_common.analysis.json#/components/schemas/Tokenizer"
                }
              },
              "description": "Define analyzer/tokenizer parameters and the text on which the analysis should be performed"
            }
          }
        }
      },
      "indices.clone": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "aliases": {
                  "description": "Aliases for the resulting index.",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices._common.json#/components/schemas/Alias"
                  }
                },
                "settings": {
                  "description": "Configuration options for the target index.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "description": "The configuration for the target index (`settings` and `aliases`)"
            }
          }
        }
      },
      "indices.put_alias": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "filter": {
                  "$ref": "../schemas/_common.query_dsl.json#/components/schemas/QueryContainer"
                },
                "index_routing": {
                  "$ref": "../schemas/_common.json#/components/schemas/Routing"
                },
                "is_write_index": {
                  "description": "If `true`, sets the write index or data stream for the alias.\nIf an alias points to multiple indices or data streams and `is_write_index` isn’t set, the alias rejects write requests.\nIf an index alias points to one index and `is_write_index` isn’t set, the index automatically acts as the write index.\nData stream aliases don’t automatically set a write data stream, even if the alias points to one data stream.",
                  "type": "boolean"
                },
                "routing": {
                  "$ref": "../schemas/_common.json#/components/schemas/Routing"
                },
                "search_routing": {
                  "$ref": "../schemas/_common.json#/components/schemas/Routing"
                }
              },
              "description": "The settings for the alias, such as `routing` or `filter`"
            }
          }
        }
      },
      "indices.put_index_template": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "index_patterns": {
                  "$ref": "../schemas/_common.json#/components/schemas/Indices"
                },
                "composed_of": {
                  "description": "An ordered list of component template names.\nComponent templates are merged in the order specified, meaning that the last component template specified has the highest precedence.",
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/_common.json#/components/schemas/Name"
                  }
                },
                "template": {
                  "$ref": "../schemas/indices.put_index_template.json#/components/schemas/IndexTemplateMapping"
                },
                "data_stream": {
                  "$ref": "../schemas/indices._common.json#/components/schemas/DataStreamVisibility"
                },
                "priority": {
                  "description": "Priority to determine index template precedence when a new data stream or index is created.\nThe index template with the highest priority is chosen.\nIf no priority is specified the template is treated as though it is of priority 0 (lowest priority).\nThis number is not automatically generated by Opensearch.",
                  "type": "number"
                },
                "version": {
                  "$ref": "../schemas/_common.json#/components/schemas/VersionNumber"
                },
                "_meta": {
                  "$ref": "../schemas/_common.json#/components/schemas/Metadata"
                }
              },
              "description": "The template definition"
            }
          }
        },
        "required": true
      },
      "indices.put_mapping": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "date_detection": {
                  "description": "Controls whether dynamic date detection is enabled.",
                  "type": "boolean"
                },
                "dynamic": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/DynamicMapping"
                },
                "dynamic_date_formats": {
                  "description": "If date detection is enabled then new string fields are checked\nagainst 'dynamic_date_formats' and if the value matches then\na new date field is added instead of string.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "dynamic_templates": {
                  "description": "Specify dynamic templates for the mapping.",
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "../schemas/_common.mapping.json#/components/schemas/DynamicTemplate"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "../schemas/_common.mapping.json#/components/schemas/DynamicTemplate"
                        }
                      }
                    }
                  ]
                },
                "_field_names": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/FieldNamesField"
                },
                "_meta": {
                  "$ref": "../schemas/_common.json#/components/schemas/Metadata"
                },
                "numeric_detection": {
                  "description": "Automatically map strings into numeric data types for all fields.",
                  "type": "boolean"
                },
                "properties": {
                  "description": "Mapping for a field. For new fields, this mapping can include:\n\n- Field name\n- Field data type\n- Mapping parameters",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/_common.mapping.json#/components/schemas/Property"
                  }
                },
                "_routing": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/RoutingField"
                },
                "_source": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/SourceField"
                },
                "runtime": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/RuntimeFields"
                }
              },
              "description": "The mapping definition"
            }
          }
        },
        "required": true
      },
      "indices.put_settings": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/indices._common.json#/components/schemas/IndexSettings"
            }
          }
        },
        "required": true
      },
      "indices.put_template": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "aliases": {
                  "description": "Aliases for the index.",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices._common.json#/components/schemas/Alias"
                  }
                },
                "index_patterns": {
                  "description": "Array of wildcard expressions used to match the names\nof indices during creation.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "mappings": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/TypeMapping"
                },
                "order": {
                  "description": "Order in which Opensearch applies this template if index\nmatches multiple templates.\n\nTemplates with lower 'order' values are merged first. Templates with higher\n'order' values are merged later, overriding templates with lower values.",
                  "type": "number"
                },
                "settings": {
                  "description": "Configuration options for the index.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "version": {
                  "$ref": "../schemas/_common.json#/components/schemas/VersionNumber"
                }
              },
              "description": "The template definition"
            }
          }
        },
        "required": true
      },
      "indices.rollover": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "aliases": {
                  "description": "Aliases for the target index.\nData streams do not support this parameter.",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices._common.json#/components/schemas/Alias"
                  }
                },
                "conditions": {
                  "$ref": "../schemas/indices.rollover.json#/components/schemas/RolloverConditions"
                },
                "mappings": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/TypeMapping"
                },
                "settings": {
                  "description": "Configuration options for the index.\nData streams do not support this parameter.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "description": "The conditions that needs to be met for executing rollover"
            }
          }
        }
      },
      "indices.shrink": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "aliases": {
                  "description": "The key is the alias name.\nIndex alias names support date math.",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices._common.json#/components/schemas/Alias"
                  }
                },
                "settings": {
                  "description": "Configuration options for the target index.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "description": "The configuration for the target index (`settings` and `aliases`)"
            }
          }
        }
      },
      "indices.simulate_template": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/indices._common.json#/components/schemas/IndexTemplate"
            }
          }
        }
      },
      "indices.split": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "aliases": {
                  "description": "Aliases for the resulting index.",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices._common.json#/components/schemas/Alias"
                  }
                },
                "settings": {
                  "description": "Configuration options for the target index.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "description": "The configuration for the target index (`settings` and `aliases`)"
            }
          }
        }
      },
      "indices.validate_query": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "$ref": "../schemas/_common.query_dsl.json#/components/schemas/QueryContainer"
                }
              },
              "description": "The query definition specified with the Query DSL"
            }
          }
        }
      },
      "indices.update_aliases": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "actions": {
                  "description": "Actions to perform.",
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.update_aliases.json#/components/schemas/Action"
                  }
                }
              },
              "description": "The definition of `actions` to perform"
            }
          }
        },
        "required": true
      },
      "indices.create_data_stream": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The data stream definition"
            }
          }
        }
      },
      "indices.simulate_index_template": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "allow_auto_create": {
                  "description": "This setting overrides the value of the `action.auto_create_index` cluster setting.\nIf set to `true` in a template, then indices can be automatically created using that template even if auto-creation of indices is disabled via `actions.auto_create_index`.\nIf set to `false`, then indices or data streams matching the template must always be explicitly created, and may never be automatically created.",
                  "type": "boolean"
                },
                "index_patterns": {
                  "$ref": "../schemas/_common.json#/components/schemas/Indices"
                },
                "composed_of": {
                  "description": "An ordered list of component template names.\nComponent templates are merged in the order specified, meaning that the last component template specified has the highest precedence.",
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/_common.json#/components/schemas/Name"
                  }
                },
                "template": {
                  "$ref": "../schemas/indices.put_index_template.json#/components/schemas/IndexTemplateMapping"
                },
                "data_stream": {
                  "$ref": "../schemas/indices._common.json#/components/schemas/DataStreamVisibility"
                },
                "priority": {
                  "description": "Priority to determine index template precedence when a new data stream or index is created.\nThe index template with the highest priority is chosen.\nIf no priority is specified the template is treated as though it is of priority 0 (lowest priority).\nThis number is not automatically generated by Opensearch.",
                  "type": "number"
                },
                "version": {
                  "$ref": "../schemas/_common.json#/components/schemas/VersionNumber"
                },
                "_meta": {
                  "$ref": "../schemas/_common.json#/components/schemas/Metadata"
                }
              },
              "description": "New index template definition, which will be included in the simulation, as if it already exists in the system"
            }
          }
        }
      },
      "indices.create": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "aliases": {
                  "description": "Aliases for the index.",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices._common.json#/components/schemas/Alias"
                  }
                },
                "mappings": {
                  "$ref": "../schemas/_common.mapping.json#/components/schemas/TypeMapping"
                },
                "settings": {
                  "$ref": "../schemas/indices._common.json#/components/schemas/IndexSettings"
                }
              },
              "description": "The configuration for the index (`settings` and `mappings`)"
            }
          }
        }
      }
    },
    "responses": {
      "indices.analyze#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "$ref": "../schemas/indices.analyze.json#/components/schemas/AnalyzeDetail"
                },
                "tokens": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.analyze.json#/components/schemas/AnalyzeToken"
                  }
                }
              }
            }
          }
        }
      },
      "indices.clear_cache#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ShardsOperationResponseBase"
            }
          }
        }
      },
      "indices.clone#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "index": {
                  "$ref": "../schemas/_common.json#/components/schemas/IndexName"
                },
                "shards_acknowledged": {
                  "type": "boolean"
                }
              },
              "required": [
                "acknowledged",
                "index",
                "shards_acknowledged"
              ]
            }
          }
        }
      },
      "indices.data_streams_stats#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "_shards": {
                  "$ref": "../schemas/_common.json#/components/schemas/ShardStatistics"
                },
                "backing_indices": {
                  "description": "Total number of backing indices for the selected data streams.",
                  "type": "number"
                },
                "data_stream_count": {
                  "description": "Total number of selected data streams.",
                  "type": "number"
                },
                "data_streams": {
                  "description": "Contains statistics for the selected data streams.",
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.data_streams_stats.json#/components/schemas/DataStreamsStatsItem"
                  }
                },
                "total_store_sizes": {
                  "$ref": "../schemas/_common.json#/components/schemas/ByteSize"
                },
                "total_store_size_bytes": {
                  "description": "Total size, in bytes, of all shards for the selected data streams.",
                  "type": "number"
                }
              },
              "required": [
                "_shards",
                "backing_indices",
                "data_stream_count",
                "data_streams",
                "total_store_size_bytes"
              ]
            }
          }
        }
      },
      "indices.delete_alias#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.exists_alias#200": {
        "description": "",
        "content": {
          "application/json": {}
        }
      },
      "indices.flush#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ShardsOperationResponseBase"
            }
          }
        }
      },
      "indices.forcemerge#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/indices.forcemerge._types.json#/components/schemas/ForceMergeResponseBody"
            }
          }
        }
      },
      "indices.get_alias#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "../schemas/indices.get_alias.json#/components/schemas/IndexAliases"
              }
            }
          }
        }
      },
      "indices.get_data_stream#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data_streams": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices._common.json#/components/schemas/DataStream"
                  }
                }
              },
              "required": [
                "data_streams"
              ]
            }
          }
        }
      },
      "indices.get_field_mapping#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "../schemas/indices.get_field_mapping.json#/components/schemas/TypeFieldMappings"
              }
            }
          }
        }
      },
      "indices.get_index_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "index_templates": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.get_index_template.json#/components/schemas/IndexTemplateItem"
                  }
                }
              },
              "required": [
                "index_templates"
              ]
            }
          }
        }
      },
      "indices.get_mapping#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "../schemas/indices.get_mapping.json#/components/schemas/IndexMappingRecord"
              }
            }
          }
        }
      },
      "indices.get_settings#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "../schemas/indices._common.json#/components/schemas/IndexState"
              }
            }
          }
        }
      },
      "indices.get_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "../schemas/indices._common.json#/components/schemas/TemplateMapping"
              }
            }
          }
        }
      },
      "indices.put_alias#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.put_index_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.put_mapping#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/IndicesResponseBase"
            }
          }
        }
      },
      "indices.put_settings#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.put_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.recovery#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "../schemas/indices.recovery.json#/components/schemas/RecoveryStatus"
              }
            }
          }
        }
      },
      "indices.refresh#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/ShardsOperationResponseBase"
            }
          }
        }
      },
      "indices.rollover#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "conditions": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "dry_run": {
                  "type": "boolean"
                },
                "new_index": {
                  "type": "string"
                },
                "old_index": {
                  "type": "string"
                },
                "rolled_over": {
                  "type": "boolean"
                },
                "shards_acknowledged": {
                  "type": "boolean"
                }
              },
              "required": [
                "acknowledged",
                "conditions",
                "dry_run",
                "new_index",
                "old_index",
                "rolled_over",
                "shards_acknowledged"
              ]
            }
          }
        }
      },
      "indices.segments#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "indices": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices.segments.json#/components/schemas/IndexSegment"
                  }
                },
                "_shards": {
                  "$ref": "../schemas/_common.json#/components/schemas/ShardStatistics"
                }
              },
              "required": [
                "indices",
                "_shards"
              ]
            }
          }
        }
      },
      "indices.shard_stores#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "indices": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices.shard_stores.json#/components/schemas/IndicesShardStores"
                  }
                }
              },
              "required": [
                "indices"
              ]
            }
          }
        }
      },
      "indices.shrink#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "shards_acknowledged": {
                  "type": "boolean"
                },
                "index": {
                  "$ref": "../schemas/_common.json#/components/schemas/IndexName"
                }
              },
              "required": [
                "acknowledged",
                "shards_acknowledged",
                "index"
              ]
            }
          }
        }
      },
      "indices.simulate_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "overlapping": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.simulate_template.json#/components/schemas/Overlapping"
                  }
                },
                "template": {
                  "$ref": "../schemas/indices.simulate_template.json#/components/schemas/Template"
                }
              },
              "required": [
                "template"
              ]
            }
          }
        }
      },
      "indices.split#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "shards_acknowledged": {
                  "type": "boolean"
                },
                "index": {
                  "$ref": "../schemas/_common.json#/components/schemas/IndexName"
                }
              },
              "required": [
                "acknowledged",
                "shards_acknowledged",
                "index"
              ]
            }
          }
        }
      },
      "indices.stats#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "indices": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices.stats.json#/components/schemas/IndicesStats"
                  }
                },
                "_shards": {
                  "$ref": "../schemas/_common.json#/components/schemas/ShardStatistics"
                },
                "_all": {
                  "$ref": "../schemas/indices.stats.json#/components/schemas/IndicesStats"
                }
              },
              "required": [
                "_shards",
                "_all"
              ]
            }
          }
        }
      },
      "indices.validate_query#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "explanations": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.validate_query.json#/components/schemas/IndicesValidationExplanation"
                  }
                },
                "_shards": {
                  "$ref": "../schemas/_common.json#/components/schemas/ShardStatistics"
                },
                "valid": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "valid"
              ]
            }
          }
        }
      },
      "indices.update_aliases#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.delete_data_stream#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.create_data_stream#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.simulate_index_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "indices.delete_index_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.exists_index_template#200": {
        "description": "",
        "content": {
          "application/json": {}
        }
      },
      "indices.resolve_index#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "indices": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.resolve_index.json#/components/schemas/ResolveIndexItem"
                  }
                },
                "aliases": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.resolve_index.json#/components/schemas/ResolveIndexAliasItem"
                  }
                },
                "data_streams": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.resolve_index.json#/components/schemas/ResolveIndexDataStreamsItem"
                  }
                }
              },
              "required": [
                "indices",
                "aliases",
                "data_streams"
              ]
            }
          }
        }
      },
      "indices.delete_template#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/AcknowledgedResponseBase"
            }
          }
        }
      },
      "indices.exists_template#200": {
        "description": "",
        "content": {
          "application/json": {}
        }
      },
      "indices.delete#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/_common.json#/components/schemas/IndicesResponseBase"
            }
          }
        }
      },
      "indices.get#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "../schemas/indices._common.json#/components/schemas/IndexState"
              }
            }
          }
        }
      },
      "indices.exists#200": {
        "description": "",
        "content": {
          "application/json": {}
        }
      },
      "indices.create#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "index": {
                  "$ref": "../schemas/_common.json#/components/schemas/IndexName"
                },
                "shards_acknowledged": {
                  "type": "boolean"
                },
                "acknowledged": {
                  "type": "boolean"
                }
              },
              "required": [
                "index",
                "shards_acknowledged",
                "acknowledged"
              ]
            }
          }
        }
      },
      "indices.add_block#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "shards_acknowledged": {
                  "type": "boolean"
                },
                "indices": {
                  "type": "array",
                  "items": {
                    "$ref": "../schemas/indices.add_block.json#/components/schemas/IndicesBlockStatus"
                  }
                }
              },
              "required": [
                "acknowledged",
                "shards_acknowledged",
                "indices"
              ]
            }
          }
        }
      },
      "indices.close#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "indices": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "../schemas/indices.close.json#/components/schemas/CloseIndexResult"
                  }
                },
                "shards_acknowledged": {
                  "type": "boolean"
                }
              },
              "required": [
                "acknowledged",
                "indices",
                "shards_acknowledged"
              ]
            }
          }
        }
      },
      "indices.open#200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "shards_acknowledged": {
                  "type": "boolean"
                }
              },
              "required": [
                "acknowledged",
                "shards_acknowledged"
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "indices.analyze#index": {
        "in": "path",
        "name": "index",
        "description": "Index used to derive the analyzer.\nIf specified, the `analyzer` or field parameter overrides this value.\nIf no index is specified or the index does not have a default analyzer, the analyze API uses the standard analyzer.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.clear_cache#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.clear_cache#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.clear_cache#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.clear_cache#fielddata": {
        "in": "query",
        "name": "fielddata",
        "description": "If `true`, clears the fields cache.\nUse the `fields` parameter to clear the cache of specific fields only.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.clear_cache#fields": {
        "in": "query",
        "name": "fields",
        "description": "Comma-separated list of field names used to limit the `fielddata` parameter.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Fields"
        },
        "style": "form"
      },
      "indices.clear_cache#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.clear_cache#query": {
        "in": "query",
        "name": "query",
        "description": "If `true`, clears the query cache.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.clear_cache#request": {
        "in": "query",
        "name": "request",
        "description": "If `true`, clears the request cache.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.clone#index": {
        "in": "path",
        "name": "index",
        "description": "Name of the source index to clone.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.clone#target": {
        "in": "path",
        "name": "target",
        "description": "Name of the target index to create.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Name"
        },
        "style": "simple"
      },
      "indices.clone#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.clone#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.clone#wait_for_active_shards": {
        "in": "query",
        "name": "wait_for_active_shards",
        "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/WaitForActiveShards"
        },
        "style": "form"
      },
      "indices.data_streams_stats#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list of data streams used to limit the request.\nWildcard expressions (`*`) are supported.\nTo target all data streams in a cluster, omit this parameter or use `*`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.delete_alias#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams or indices used to limit the request.\nSupports wildcards (`*`).",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.delete_alias#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list of aliases to remove.\nSupports wildcards (`*`). To remove all aliases, use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Names"
        },
        "style": "simple"
      },
      "indices.delete_alias#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.delete_alias#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.exists_alias#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list of aliases to check. Supports wildcards (`*`).",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Names"
        },
        "style": "simple"
      },
      "indices.exists_alias#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams or indices used to limit the request. Supports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.exists_alias#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.exists_alias#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.exists_alias#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, requests that include a missing data stream or index in the target indices or data streams return an error.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.exists_alias#local": {
        "in": "query",
        "name": "local",
        "description": "If `true`, the request retrieves information from the local node only.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.flush#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases to flush.\nSupports wildcards (`*`).\nTo flush all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.flush#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.flush#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.flush#force": {
        "in": "query",
        "name": "force",
        "description": "If `true`, the request forces a flush even if there are no changes to commit to the index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.flush#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.flush#wait_if_ongoing": {
        "in": "query",
        "name": "wait_if_ongoing",
        "description": "If `true`, the flush operation blocks until execution when another flush operation is running.\nIf `false`, Opensearch returns an error if you request a flush when another flush operation is running.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.forcemerge#index": {
        "in": "path",
        "name": "index",
        "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.forcemerge#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.forcemerge#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.forcemerge#flush": {
        "in": "query",
        "name": "flush",
        "description": "Specify whether the index should be flushed after performing the operation (default: true)",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.forcemerge#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.forcemerge#max_num_segments": {
        "in": "query",
        "name": "max_num_segments",
        "description": "The number of segments the index should be merged into (default: dynamic)",
        "deprecated": false,
        "schema": {
          "type": "number"
        },
        "style": "form"
      },
      "indices.forcemerge#only_expunge_deletes": {
        "in": "query",
        "name": "only_expunge_deletes",
        "description": "Specify whether the operation should only expunge deleted documents",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.forcemerge#wait_for_completion": {
        "in": "query",
        "name": "wait_for_completion",
        "description": "Should the request wait until the force merge is completed.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_alias#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list of aliases to retrieve.\nSupports wildcards (`*`).\nTo retrieve all aliases, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Names"
        },
        "style": "simple"
      },
      "indices.get_alias#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams or indices used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.get_alias#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_alias#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.get_alias#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_alias#local": {
        "in": "query",
        "name": "local",
        "description": "If `true`, the request retrieves information from the local node only.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_data_stream#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list of data stream names used to limit the request.\nWildcard (`*`) expressions are supported. If omitted, all data streams are returned.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/DataStreamNames"
        },
        "style": "simple"
      },
      "indices.get_field_mapping#fields": {
        "in": "path",
        "name": "fields",
        "description": "Comma-separated list or wildcard expression of fields used to limit returned information.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Fields"
        },
        "style": "simple"
      },
      "indices.get_field_mapping#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.get_field_mapping#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_field_mapping#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.get_field_mapping#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_field_mapping#include_defaults": {
        "in": "query",
        "name": "include_defaults",
        "description": "If `true`, return all default settings in the response.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_field_mapping#local": {
        "in": "query",
        "name": "local",
        "description": "If `true`, the request retrieves information from the local node only.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_index_template#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list of index template names used to limit the request. Wildcard (*) expressions are supported.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Name"
        },
        "style": "simple"
      },
      "indices.get_index_template#local": {
        "in": "query",
        "name": "local",
        "description": "If true, the request retrieves information from the local node only. Defaults to false, which means information is retrieved from the master node.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_index_template#flat_settings": {
        "in": "query",
        "name": "flat_settings",
        "description": "If true, returns settings in flat format.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_index_template#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.get_mapping#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.get_mapping#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_mapping#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.get_mapping#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_mapping#local": {
        "in": "query",
        "name": "local",
        "description": "If `true`, the request retrieves information from the local node only.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_mapping#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.get_settings#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit\nthe request. Supports wildcards (`*`). To target all data streams and\nindices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.get_settings#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list or wildcard expression of settings to retrieve.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Names"
        },
        "style": "simple"
      },
      "indices.get_settings#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index\nalias, or `_all` value targets only missing or closed indices. This\nbehavior applies even if the request targets other open indices. For\nexample, a request targeting `foo*,bar*` returns an error if an index\nstarts with foo but no index starts with `bar`.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_settings#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.get_settings#flat_settings": {
        "in": "query",
        "name": "flat_settings",
        "description": "If `true`, returns settings in flat format.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_settings#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_settings#include_defaults": {
        "in": "query",
        "name": "include_defaults",
        "description": "If `true`, return all default settings in the response.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_settings#local": {
        "in": "query",
        "name": "local",
        "description": "If `true`, the request retrieves information from the local node only. If\n`false`, information is retrieved from the master node.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_settings#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an\nerror.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.get_template#name": {
        "in": "path",
        "name": "name",
        "description": "Comma-separated list of index template names used to limit the request.\nWildcard (`*`) expressions are supported.\nTo return all index templates, omit this parameter or use a value of `_all` or `*`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Names"
        },
        "style": "simple"
      },
      "indices.get_template#flat_settings": {
        "in": "query",
        "name": "flat_settings",
        "description": "If `true`, returns settings in flat format.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_template#local": {
        "in": "query",
        "name": "local",
        "description": "If `true`, the request retrieves information from the local node only.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.get_template#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.put_alias#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams or indices to add.\nSupports wildcards (`*`).\nWildcard patterns that match both data streams and indices return an error.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.put_alias#name": {
        "in": "path",
        "name": "name",
        "description": "Alias to update.\nIf the alias doesn’t exist, the request creates it.\nIndex alias names support date math.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Name"
        },
        "style": "simple"
      },
      "indices.put_alias#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.put_alias#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.put_index_template#name": {
        "in": "path",
        "name": "name",
        "description": "Index or template name",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Name"
        },
        "style": "simple"
      },
      "indices.put_index_template#create": {
        "in": "query",
        "name": "create",
        "description": "If `true`, this request cannot replace or update existing index templates.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_mapping#index": {
        "in": "path",
        "name": "index",
        "description": "A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.put_mapping#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_mapping#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.put_mapping#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_mapping#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.put_mapping#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.put_mapping#write_index_only": {
        "in": "query",
        "name": "write_index_only",
        "description": "If `true`, the mappings are applied only to the current write index for the target.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_settings#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit\nthe request. Supports wildcards (`*`). To target all data streams and\nindices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.put_settings#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index\nalias, or `_all` value targets only missing or closed indices. This\nbehavior applies even if the request targets other open indices. For\nexample, a request targeting `foo*,bar*` returns an error if an index\nstarts with `foo` but no index starts with `bar`.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_settings#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match. If the request can target\ndata streams, this argument determines whether wildcard expressions match\nhidden data streams. Supports comma-separated values, such as\n`open,hidden`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.put_settings#flat_settings": {
        "in": "query",
        "name": "flat_settings",
        "description": "If `true`, returns settings in flat format.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_settings#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `true`, returns settings in flat format.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_settings#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an\nerror.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.put_settings#preserve_existing": {
        "in": "query",
        "name": "preserve_existing",
        "description": "If `true`, existing index settings remain unchanged.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_settings#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response. If no response is received before the\n timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.put_template#name": {
        "in": "path",
        "name": "name",
        "description": "The name of the template",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Name"
        },
        "style": "simple"
      },
      "indices.put_template#create": {
        "in": "query",
        "name": "create",
        "description": "If true, this request cannot replace or update existing index templates.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.put_template#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node. If no response is\nreceived before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.put_template#order": {
        "in": "query",
        "name": "order",
        "description": "Order in which Opensearch applies this template if index\nmatches multiple templates.\n\nTemplates with lower 'order' values are merged first. Templates with higher\n'order' values are merged later, overriding templates with lower values.",
        "deprecated": false,
        "schema": {
          "type": "number"
        },
        "style": "form"
      },
      "indices.recovery#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.recovery#active_only": {
        "in": "query",
        "name": "active_only",
        "description": "If `true`, the response only includes ongoing shard recoveries.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.recovery#detailed": {
        "in": "query",
        "name": "detailed",
        "description": "If `true`, the response includes detailed information about shard recoveries.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.refresh#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.refresh#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.refresh#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.refresh#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.rollover#alias": {
        "in": "path",
        "name": "alias",
        "description": "Name of the data stream or index alias to roll over.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexAlias"
        },
        "style": "simple"
      },
      "indices.rollover#new_index": {
        "in": "path",
        "name": "new_index",
        "description": "Name of the index to create.\nSupports date math.\nData streams do not support this parameter.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.rollover#dry_run": {
        "in": "query",
        "name": "dry_run",
        "description": "If `true`, checks whether the current index satisfies the specified conditions but does not perform a rollover.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.rollover#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.rollover#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.rollover#wait_for_active_shards": {
        "in": "query",
        "name": "wait_for_active_shards",
        "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/WaitForActiveShards"
        },
        "style": "form"
      },
      "indices.segments#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit the request.\nSupports wildcards (`*`).\nTo target all data streams and indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.segments#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.segments#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.segments#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.segments#verbose": {
        "in": "query",
        "name": "verbose",
        "description": "If `true`, the request returns a verbose response.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.shard_stores#index": {
        "in": "path",
        "name": "index",
        "description": "List of data streams, indices, and aliases used to limit the request.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.shard_stores#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If false, the request returns an error if any wildcard expression, index alias, or _all\nvalue targets only missing or closed indices. This behavior applies even if the request\ntargets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.shard_stores#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match. If the request can target data streams,\nthis argument determines whether wildcard expressions match hidden data streams.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.shard_stores#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If true, missing or closed indices are not included in the response.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.shard_stores#status": {
        "in": "query",
        "name": "status",
        "description": "List of shard health statuses used to limit the request.",
        "deprecated": false,
        "schema": {
          "oneOf": [
            {
              "$ref": "../schemas/indices.shard_stores.json#/components/schemas/ShardStoreStatus"
            },
            {
              "type": "array",
              "items": {
                "$ref": "../schemas/indices.shard_stores.json#/components/schemas/ShardStoreStatus"
              }
            }
          ]
        },
        "style": "form"
      },
      "indices.shrink#index": {
        "in": "path",
        "name": "index",
        "description": "Name of the source index to shrink.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.shrink#target": {
        "in": "path",
        "name": "target",
        "description": "Name of the target index to create.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.shrink#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.shrink#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.shrink#wait_for_active_shards": {
        "in": "query",
        "name": "wait_for_active_shards",
        "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/WaitForActiveShards"
        },
        "style": "form"
      },
      "indices.simulate_template#name": {
        "in": "path",
        "name": "name",
        "description": "Name of the index template to simulate. To test a template configuration before you add it to the cluster, omit\nthis parameter and specify the template configuration in the request body.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Name"
        },
        "style": "simple"
      },
      "indices.simulate_template#create": {
        "in": "query",
        "name": "create",
        "description": "If true, the template passed in the body is only used if no existing templates match the same index patterns. If false, the simulation uses the template with the highest priority. Note that the template is not permanently added or updated in either case; it is only used for the simulation.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.simulate_template#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.split#index": {
        "in": "path",
        "name": "index",
        "description": "Name of the source index to split.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.split#target": {
        "in": "path",
        "name": "target",
        "description": "Name of the target index to create.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/IndexName"
        },
        "style": "simple"
      },
      "indices.split#master_timeout": {
        "in": "query",
        "name": "master_timeout",
        "description": "Period to wait for a connection to the master node.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": true,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form",
        "x-version-deprecated": "2.0.0",
        "x-deprecation-message": "To promote inclusive language, use 'cluster_manager_timeout' instead."
      },
      "indices.split#timeout": {
        "in": "query",
        "name": "timeout",
        "description": "Period to wait for a response.\nIf no response is received before the timeout expires, the request fails and returns an error.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Duration"
        },
        "style": "form"
      },
      "indices.split#wait_for_active_shards": {
        "in": "query",
        "name": "wait_for_active_shards",
        "description": "The number of shard copies that must be active before proceeding with the operation.\nSet to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/WaitForActiveShards"
        },
        "style": "form"
      },
      "indices.stats#metric": {
        "in": "path",
        "name": "metric",
        "description": "Limit the information returned the specific metrics.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Metrics"
        },
        "style": "simple"
      },
      "indices.stats#index": {
        "in": "path",
        "name": "index",
        "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.stats#completion_fields": {
        "in": "query",
        "name": "completion_fields",
        "description": "Comma-separated list or wildcard expressions of fields to include in fielddata and suggest statistics.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Fields"
        },
        "style": "form"
      },
      "indices.stats#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match. If the request can target data streams, this argument\ndetermines whether wildcard expressions match hidden data streams. Supports comma-separated values,\nsuch as `open,hidden`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.stats#fielddata_fields": {
        "in": "query",
        "name": "fielddata_fields",
        "description": "Comma-separated list or wildcard expressions of fields to include in fielddata statistics.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Fields"
        },
        "style": "form"
      },
      "indices.stats#fields": {
        "in": "query",
        "name": "fields",
        "description": "Comma-separated list or wildcard expressions of fields to include in the statistics.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Fields"
        },
        "style": "form"
      },
      "indices.stats#forbid_closed_indices": {
        "in": "query",
        "name": "forbid_closed_indices",
        "description": "If true, statistics are not collected from closed indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.stats#groups": {
        "in": "query",
        "name": "groups",
        "description": "Comma-separated list of search groups to include in the search statistics.",
        "deprecated": false,
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "style": "form"
      },
      "indices.stats#include_segment_file_sizes": {
        "in": "query",
        "name": "include_segment_file_sizes",
        "description": "If true, the call reports the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested).",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.stats#include_unloaded_segments": {
        "in": "query",
        "name": "include_unloaded_segments",
        "description": "If true, the response includes information from segments that are not loaded into memory.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.stats#level": {
        "in": "query",
        "name": "level",
        "description": "Indicates whether statistics are aggregated at the cluster, index, or shard level.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Level"
        },
        "style": "form"
      },
      "indices.validate_query#index": {
        "in": "path",
        "name": "index",
        "description": "Comma-separated list of data streams, indices, and aliases to search.\nSupports wildcards (`*`).\nTo search all data streams or indices, omit this parameter or use `*` or `_all`.",
        "required": true,
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/Indices"
        },
        "style": "simple"
      },
      "indices.validate_query#allow_no_indices": {
        "in": "query",
        "name": "allow_no_indices",
        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.validate_query#all_shards": {
        "in": "query",
        "name": "all_shards",
        "description": "If `true`, the validation is executed on all shards instead of one random shard per index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.validate_query#analyzer": {
        "in": "query",
        "name": "analyzer",
        "description": "Analyzer to use for the query string.\nThis parameter can only be used when the `q` query string parameter is specified.",
        "deprecated": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "indices.validate_query#analyze_wildcard": {
        "in": "query",
        "name": "analyze_wildcard",
        "description": "If `true`, wildcard and prefix queries are analyzed.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.validate_query#default_operator": {
        "in": "query",
        "name": "default_operator",
        "description": "The default operator for query string query: `AND` or `OR`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.query_dsl.json#/components/schemas/Operator"
        },
        "style": "form"
      },
      "indices.validate_query#df": {
        "in": "query",
        "name": "df",
        "description": "Field to use as default where no field prefix is given in the query string.\nThis parameter can only be used when the `q` query string parameter is specified.",
        "deprecated": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "indices.validate_query#expand_wildcards": {
        "in": "query",
        "name": "expand_wildcards",
        "description": "Type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nSupports comma-separated values, such as `open,hidden`.\nValid values are: `all`, `open`, `closed`, `hidden`, `none`.",
        "deprecated": false,
        "schema": {
          "$ref": "../schemas/_common.json#/components/schemas/ExpandWildcards"
        },
        "style": "form"
      },
      "indices.validate_query#explain": {
        "in": "query",
        "name": "explain",
        "description": "If `true`, the response returns detailed information if an error has occurred.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.validate_query#ignore_unavailable": {
        "in": "query",
        "name": "ignore_unavailable",
        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.validate_query#lenient": {
        "in": "query",
        "name": "lenient",
        "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.validate_query#rewrite": {
        "in": "query",
        "name": "rewrite",
        "description": "If `true`, returns a more detailed explanation showing the actual Lucene query that will be executed.",
        "deprecated": false,
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "indices.validate_query#q": {
        "in": "query",
        "name": "q",
        "description": "Query in the Lucene query string syntax.",
        "deprecated": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      }
    }
  }
}