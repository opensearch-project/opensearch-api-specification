openapi: 3.1.0
info:
  title: OpenSearch LTR API
  description: OpenSearch Learning to Rank API.
  version: 1.0.0
paths:
  /_ltr:
    get:
      operationId: ltr.list_stores.0
      x-operation-group: ltr.list_stores
      x-version-added: 2.17.1
      description: Lists all available feature stores.
      responses:
        '200':
          $ref: '#/components/responses/ltr.list_stores@200'

    put:
      operationId: ltr.create_default_store.0
      x-operation-group: ltr.create_default_store
      x-version-added: 2.17.1
      description: Creates the default feature store.
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_default_store@200'

    delete:
      operationId: ltr.delete_default_store.0
      x-operation-group: ltr.delete_default_store
      x-version-added: 2.17.1
      description: Deletes the default feature store.
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_default_store@200'

  /_ltr/{store}:
    get:
      operationId: ltr.get_store.0
      x-operation-group: ltr.get_store
      x-version-added: 2.17.1
      description: Checks if a store exists.
      parameters:
        - $ref: '#/components/parameters/ltr.get_store::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.get_store@200'
        '404':
          $ref: '#/components/responses/ltr.get_store@404'

    put:
      operationId: ltr.create_store.0
      x-operation-group: ltr.create_store
      x-version-added: 2.17.1
      description: Creates a new feature store with the specified name.
      parameters:
        - $ref: '#/components/parameters/ltr.create_store::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_store@200'

    delete:
      operationId: ltr.delete_store.0
      x-operation-group: ltr.delete_store
      x-version-added: 2.17.1
      description: Deletes a feature store with the specified name.
      parameters:
        - $ref: '#/components/parameters/ltr.delete_store::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_store@200'

  /_plugins/_ltr/stats:
    get:
      operationId: ltr.stats.0
      x-operation-group: ltr.stats
      x-version-added: '2.19'
      description: Provides information about the current status of the LTR plugin.
      parameters:
        - $ref: '#/components/parameters/ltr.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/ltr.stats@200'

  /_plugins/_ltr/stats/{stat}:
    get:
      operationId: ltr.stats.1
      x-operation-group: ltr.stats
      x-version-added: '2.19'
      description: Provides information about the current status of the LTR plugin.
      parameters:
        - $ref: '#/components/parameters/ltr.stats::path.stat'
        - $ref: '#/components/parameters/ltr.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/ltr.stats@200'

  /_plugins/_ltr/{node_id}/stats:
    get:
      operationId: ltr.stats.2
      x-operation-group: ltr.stats
      x-version-added: '2.19'
      description: Provides information about the current status of the LTR plugin.
      parameters:
        - $ref: '#/components/parameters/ltr.stats::path.node_id'
        - $ref: '#/components/parameters/ltr.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/ltr.stats@200'

  /_plugins/_ltr/{node_id}/stats/{stat}:
    get:
      operationId: ltr.stats.3
      x-operation-group: ltr.stats
      x-version-added: '2.19'
      description: Provides information about the current status of the LTR plugin.
      parameters:
        - $ref: '#/components/parameters/ltr.stats::path.node_id'
        - $ref: '#/components/parameters/ltr.stats::path.stat'
        - $ref: '#/components/parameters/ltr.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/ltr.stats@200'

  /_ltr/_clearcache:
    post:
      operationId: ltr.clear_cache.0
      x-operation-group: ltr.clear_cache
      x-version-added: '2.19'
      description: Clears the store caches.
      responses:
        '200':
          $ref: '#/components/responses/ltr.clear_cache@200'

  /_ltr/{store}/_clearcache:
    post:
      operationId: ltr.clear_cache.1
      x-operation-group: ltr.clear_cache
      x-version-added: '2.19'
      description: Clears the store caches.
      parameters:
        - $ref: '#/components/parameters/ltr.clear_cache::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.clear_cache@200'

  /_ltr/_cachestats:
    get:
      operationId: ltr.cache_stats.0
      x-operation-group: ltr.cache_stats
      x-version-added: '2.19'
      description: Retrieves cache statistics for all feature stores.
      responses:
        '200':
          $ref: '#/components/responses/ltr.cache_stats@200'

  /_ltr/_feature:
    get:
      operationId: ltr.search_features.0
      x-operation-group: ltr.search_features
      x-version-added: '2.19'
      description: Search for features in a feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.search_features::query.from'
        - $ref: '#/components/parameters/ltr.search_features::query.prefix'
        - $ref: '#/components/parameters/ltr.search_features::query.size'
      responses:
        '200':
          $ref: '#/components/responses/ltr.search_features@200'

  /_ltr/{store}/_feature:
    get:
      operationId: ltr.search_features.1
      x-operation-group: ltr.search_features
      x-version-added: '2.19'
      description: Search for features in a feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.search_features::path.store'
        - $ref: '#/components/parameters/ltr.search_features::query.from'
        - $ref: '#/components/parameters/ltr.search_features::query.prefix'
        - $ref: '#/components/parameters/ltr.search_features::query.size'
      responses:
        '200':
          $ref: '#/components/responses/ltr.search_features@200'

  /_ltr/_featureset:
    get:
      operationId: ltr.search_featuresets.0
      x-operation-group: ltr.search_featuresets
      x-version-added: '2.19'
      description: Search for featuresets in a feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.search_featuresets::query.from'
        - $ref: '#/components/parameters/ltr.search_featuresets::query.prefix'
        - $ref: '#/components/parameters/ltr.search_featuresets::query.size'
      responses:
        '200':
          $ref: '#/components/responses/ltr.search_featuresets@200'

  /_ltr/{store}/_featureset:
    get:
      operationId: ltr.search_featuresets.1
      x-operation-group: ltr.search_featuresets
      x-version-added: '2.19'
      description: Search for featuresets in a feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.search_featuresets::path.store'
        - $ref: '#/components/parameters/ltr.search_featuresets::query.from'
        - $ref: '#/components/parameters/ltr.search_featuresets::query.prefix'
        - $ref: '#/components/parameters/ltr.search_featuresets::query.size'
      responses:
        '200':
          $ref: '#/components/responses/ltr.search_featuresets@200'

  /_ltr/_model:
    get:
      operationId: ltr.search_models.0
      x-operation-group: ltr.search_models
      x-version-added: '2.19'
      description: Search for models in a feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.search_models::query.from'
        - $ref: '#/components/parameters/ltr.search_models::query.prefix'
        - $ref: '#/components/parameters/ltr.search_models::query.size'
      responses:
        '200':
          $ref: '#/components/responses/ltr.search_models@200'

  /_ltr/{store}/_model:
    get:
      operationId: ltr.search_models.1
      x-operation-group: ltr.search_models
      x-version-added: '2.19'
      description: Search for models in a feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.search_models::path.store'
        - $ref: '#/components/parameters/ltr.search_models::query.from'
        - $ref: '#/components/parameters/ltr.search_models::query.prefix'
        - $ref: '#/components/parameters/ltr.search_models::query.size'
      responses:
        '200':
          $ref: '#/components/responses/ltr.search_models@200'

  /_ltr/_feature/{id}:
    get:
      operationId: ltr.get_feature.0
      x-operation-group: ltr.get_feature
      x-version-added: '2.19'
      description: Get a feature from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.get_feature::path.id'
      responses:
        '200':
          $ref: '#/components/responses/ltr.get_feature@200'
        '404':
          $ref: '#/components/responses/ltr.get_feature@404'

    put:
      operationId: ltr.create_feature.0
      x-operation-group: ltr.create_feature
      x-version-added: '2.19'
      description: Create or update a feature in the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.create_feature::path.id'
      requestBody:
        $ref: '#/components/requestBodies/ltr.create_feature'
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_feature@200'
        '201':
          $ref: '#/components/responses/ltr.create_feature@201'

    delete:
      operationId: ltr.delete_feature.0
      x-operation-group: ltr.delete_feature
      x-version-added: '2.19'
      description: Delete a feature from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.delete_feature::path.id'
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_feature@200'
        '404':
          $ref: '#/components/responses/ltr.delete_feature@404'

  /_ltr/{store}/_feature/{id}:
    get:
      operationId: ltr.get_feature.1
      x-operation-group: ltr.get_feature
      x-version-added: '2.19'
      description: Get a feature from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.get_feature::path.id'
        - $ref: '#/components/parameters/ltr.get_feature::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.get_feature@200'
        '404':
          $ref: '#/components/responses/ltr.get_feature@404'

    put:
      operationId: ltr.create_feature.1
      x-operation-group: ltr.create_feature
      x-version-added: '2.19'
      description: Create or update a feature in the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.create_feature::path.id'
        - $ref: '#/components/parameters/ltr.create_feature::path.store'
      requestBody:
        $ref: '#/components/requestBodies/ltr.create_feature'
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_feature@200'
        '201':
          $ref: '#/components/responses/ltr.create_feature@201'

    delete:
      operationId: ltr.delete_feature.1
      x-operation-group: ltr.delete_feature
      x-version-added: '2.19'
      description: Delete a feature from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.delete_feature::path.id'
        - $ref: '#/components/parameters/ltr.delete_feature::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_feature@200'
        '404':
          $ref: '#/components/responses/ltr.delete_feature@404'

  /_ltr/_featureset/{id}:
    get:
      operationId: ltr.get_featureset.0
      x-operation-group: ltr.get_featureset
      x-version-added: '2.19'
      description: Get a featureset from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.get_featureset::path.id'
      responses:
        '200':
          $ref: '#/components/responses/ltr.get_featureset@200'
        '404':
          $ref: '#/components/responses/ltr.get_featureset@404'

    put:
      operationId: ltr.create_featureset.0
      x-operation-group: ltr.create_featureset
      x-version-added: '2.19'
      description: Create or update a featureset in the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.create_featureset::path.id'
      requestBody:
        $ref: '#/components/requestBodies/ltr.create_featureset'
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_featureset@200'
        '201':
          $ref: '#/components/responses/ltr.create_featureset@201'

    delete:
      operationId: ltr.delete_featureset.0
      x-operation-group: ltr.delete_featureset
      x-version-added: '2.19'
      description: Delete a featureset from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.delete_featureset::path.id'
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_featureset@200'
        '404':
          $ref: '#/components/responses/ltr.delete_featureset@404'

  /_ltr/{store}/_featureset/{id}:
    get:
      operationId: ltr.get_featureset.1
      x-operation-group: ltr.get_featureset
      x-version-added: '2.19'
      description: Get a featureset from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.get_featureset::path.id'
        - $ref: '#/components/parameters/ltr.get_featureset::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.get_featureset@200'
        '404':
          $ref: '#/components/responses/ltr.get_featureset@404'

    put:
      operationId: ltr.create_featureset.1
      x-operation-group: ltr.create_featureset
      x-version-added: '2.19'
      description: Create or update a featureset in the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.create_featureset::path.id'
        - $ref: '#/components/parameters/ltr.create_featureset::path.store'
      requestBody:
        $ref: '#/components/requestBodies/ltr.create_featureset'
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_featureset@200'
        '201':
          $ref: '#/components/responses/ltr.create_featureset@201'

    delete:
      operationId: ltr.delete_featureset.1
      x-operation-group: ltr.delete_featureset
      x-version-added: '2.19'
      description: Delete a featureset from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.delete_featureset::path.id'
        - $ref: '#/components/parameters/ltr.delete_featureset::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_featureset@200'
        '404':
          $ref: '#/components/responses/ltr.delete_featureset@404'

  /_ltr/_model/{id}:
    get:
      operationId: ltr.get_model.0
      x-operation-group: ltr.get_model
      x-version-added: '2.19'
      description: Get a model from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.get_model::path.id'
      responses:
        '200':
          $ref: '#/components/responses/ltr.get_model@200'
        '404':
          $ref: '#/components/responses/ltr.get_model@404'

    put:
      operationId: ltr.create_model.0
      x-operation-group: ltr.create_model
      x-version-added: '2.19'
      description: Create or update a model in the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.create_model::path.id'
      requestBody:
        $ref: '#/components/requestBodies/ltr.create_model'
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_model@200'
        '201':
          $ref: '#/components/responses/ltr.create_model@201'
        '409':
          $ref: '#/components/responses/ltr.create_model@409'

    delete:
      operationId: ltr.delete_model.0
      x-operation-group: ltr.delete_model
      x-version-added: '2.19'
      description: Delete a model from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.delete_model::path.id'
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_model@200'
        '404':
          $ref: '#/components/responses/ltr.delete_model@404'

  /_ltr/{store}/_model/{id}:
    get:
      operationId: ltr.get_model.1
      x-operation-group: ltr.get_model
      x-version-added: '2.19'
      description: Get a model from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.get_model::path.id'
        - $ref: '#/components/parameters/ltr.get_model::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.get_model@200'
        '404':
          $ref: '#/components/responses/ltr.get_model@404'

    put:
      operationId: ltr.create_model.1
      x-operation-group: ltr.create_model
      x-version-added: '2.19'
      description: Create or update a model in the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.create_model::path.id'
        - $ref: '#/components/parameters/ltr.create_model::path.store'
      requestBody:
        $ref: '#/components/requestBodies/ltr.create_model'
      responses:
        '200':
          $ref: '#/components/responses/ltr.create_model@200'
        '201':
          $ref: '#/components/responses/ltr.create_model@201'
        '409':
          $ref: '#/components/responses/ltr.create_model@409'

    delete:
      operationId: ltr.delete_model.1
      x-operation-group: ltr.delete_model
      x-version-added: '2.19'
      description: Delete a model from the default feature store.
      parameters:
        - $ref: '#/components/parameters/ltr.delete_model::path.id'
        - $ref: '#/components/parameters/ltr.delete_model::path.store'
      responses:
        '200':
          $ref: '#/components/responses/ltr.delete_model@200'
        '404':
          $ref: '#/components/responses/ltr.delete_model@404'


components:
  parameters:
    ltr.get_store::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.create_store::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.delete_store::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.stats::query.timeout:
      name: timeout
      in: query
      description: The time in milliseconds to wait for a response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
    ltr.stats::path.stat:
      name: stat
      in: path
      description: Comma-separated list of stats to retrieve; use `_all` or empty string to retrieve all stats.
      schema:
        type: array
        description: Comma-separated list of stats to retrieve; use `_all` or empty string to retrieve all stats.
        items:
          type: string
          enum:
            - cache
            - request_error_count
            - request_total_count
      required: true
    ltr.stats::path.node_id:
      name: node_id
      in: path
      description: Comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes.
      schema:
        type: array
        description: Comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes.
        items:
          type: string
      required: true
    ltr.clear_cache::path.store:
      name: store
      in: path
      description: The name of the feature store for which to clear the cache.
      schema:
        type: string
      required: true
    ltr.search_features::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.search_features::query.prefix:
      name: prefix
      in: query
      description: A name prefix to filter features by.
      schema:
        type: string
      required: false
    ltr.search_features::query.from:
      name: from
      in: query
      description: The offset from the first result (for pagination).
      schema:
        type: integer
        default: 0
      required: false
    ltr.search_features::query.size:
      name: size
      in: query
      description: The number of features to return.
      schema:
        type: integer
        default: 20
      required: false
    ltr.search_featuresets::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.search_featuresets::query.prefix:
      name: prefix
      in: query
      description: A name prefix to filter featuresets by.
      schema:
        type: string
      required: false
    ltr.search_featuresets::query.from:
      name: from
      in: query
      description: The offset from the first result (for pagination).
      schema:
        type: integer
        default: 0
      required: false
    ltr.search_featuresets::query.size:
      name: size
      in: query
      description: The number of featuresets to return.
      schema:
        type: integer
        default: 20
      required: false
    ltr.search_models::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.search_models::query.prefix:
      name: prefix
      in: query
      description: A name prefix to filter models by.
      schema:
        type: string
      required: false
    ltr.search_models::query.from:
      name: from
      in: query
      description: The offset from the first result (for pagination).
      schema:
        type: integer
        default: 0
      required: false
    ltr.search_models::query.size:
      name: size
      in: query
      description: The number of models to return.
      schema:
        type: integer
        default: 20
      required: false
    ltr.get_feature::path.id:
      name: id
      in: path
      description: The name of the feature.
      schema:
        type: string
      required: true
    ltr.get_feature::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.create_feature::path.id:
      name: id
      in: path
      description: The name of the feature.
      schema:
        type: string
      required: true
    ltr.create_feature::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.delete_feature::path.id:
      name: id
      in: path
      description: The name of the feature.
      schema:
        type: string
      required: true
    ltr.delete_feature::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.get_featureset::path.id:
      name: id
      in: path
      description: The name of the featureset.
      schema:
        type: string
      required: true
    ltr.get_featureset::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.create_featureset::path.id:
      name: id
      in: path
      description: The name of the featureset.
      schema:
        type: string
      required: true
    ltr.create_featureset::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.delete_featureset::path.id:
      name: id
      in: path
      description: The name of the featureset.
      schema:
        type: string
      required: true
    ltr.delete_featureset::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.get_model::path.id:
      name: id
      in: path
      description: The name of the model.
      schema:
        type: string
      required: true
    ltr.get_model::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.create_model::path.id:
      name: id
      in: path
      description: The name of the model.
      schema:
        type: string
      required: true
    ltr.create_model::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true
    ltr.delete_model::path.id:
      name: id
      in: path
      description: The name of the model.
      schema:
        type: string
      required: true
    ltr.delete_model::path.store:
      name: store
      in: path
      description: The name of the feature store.
      schema:
        type: string
      required: true

  responses:
    ltr.list_stores@200:
      description: Returns a list of available feature stores.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/ListStoresResponse'
    
    ltr.delete_default_store@200:
      description: Successfully deleted the default feature store.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.get_store@200:
      description: Returns information about the store existence.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/StoreExistsResponse'

    ltr.get_store@404:
      description: The store does not exist.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/StoreExistsResponse'

    ltr.create_store@200:
      description: Successfully created the feature store.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.create_default_store@200:
      description: Successfully created the default feature store.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.delete_store@200:
      description: Successfully deleted the feature store.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'
            
    ltr.stats@200:
      description: Provides information about the current status of the LTR plugin.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/Stats'
            
    ltr.clear_cache@200:
      description: Successfully cleared the feature store cache.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'
            
    ltr.cache_stats@200:
      description: Returns cache statistics for all feature stores.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/CacheStatsResponse'

    ltr.search_features@200:
      description: Returns search results for features.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/SearchResponse'

    ltr.search_featuresets@200:
      description: Returns search results for featuresets.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/SearchResponse'

    ltr.search_models@200:
      description: Returns search results for models.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/SearchResponse'

    ltr.get_feature@200:
      description: Successfully retrieved the feature.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true

    ltr.get_feature@404:
      description: The feature does not exist.
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/ErrorResponseBase'

    ltr.create_feature@200:
      description: Successfully updated the feature.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.create_feature@201:
      description: Successfully created the feature.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.delete_feature@200:
      description: Successfully deleted the feature.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.delete_feature@404:
      description: The feature does not exist.
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/ErrorResponseBase'

    ltr.get_featureset@200:
      description: Successfully retrieved the featureset.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true

    ltr.get_featureset@404:
      description: The featureset does not exist.
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/ErrorResponseBase'

    ltr.create_featureset@200:
      description: Successfully updated the featureset.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.create_featureset@201:
      description: Successfully created the featureset.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.delete_featureset@200:
      description: Successfully deleted the featureset.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/AcknowledgedResponse'

    ltr.delete_featureset@404:
      description: The featureset does not exist.
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/ErrorResponseBase'

    ltr.get_model@200:
      description: Successfully retrieved the model.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true

    ltr.get_model@404:
      description: The model does not exist.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/NotFoundResponse'

    ltr.create_model@200:
      description: Successfully updated the model.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/DocumentResponse'

    ltr.create_model@201:
      description: Successfully created the model.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/DocumentResponse'

    ltr.create_model@409:
      description: Model update failed - models cannot be updated.
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/ErrorResponseBase'

    ltr.delete_model@200:
      description: Successfully deleted the model.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/DocumentResponse'

    ltr.delete_model@404:
      description: The model does not exist.
      content:
        application/json:
          schema:
            $ref: '../schemas/ltr._common.yaml#/components/schemas/NotFoundResponse'

  requestBodies:
    ltr.create_feature:
      description: The feature definition.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      required: true

    ltr.create_featureset:
      description: The featureset definition.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      required: true

    ltr.create_model:
      description: The model definition.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      required: true
