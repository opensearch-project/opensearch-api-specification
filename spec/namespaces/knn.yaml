openapi: 3.1.0
info:
  title: OpenSearch Knn API
  description: OpenSearch Knn API.
  version: 1.0.0
paths:
  /_plugins/_knn/models/_search:
    get:
      operationId: knn.search_models.0
      x-operation-group: knn.search_models
      x-version-added: '1.0'
      description: Use an OpenSearch query to search for models in the index.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#search-model
      parameters:
        - $ref: '#/components/parameters/knn.search_models::query._source'
        - $ref: '#/components/parameters/knn.search_models::query._source_excludes'
        - $ref: '#/components/parameters/knn.search_models::query._source_includes'
        - $ref: '#/components/parameters/knn.search_models::query.allow_no_indices'
        - $ref: '#/components/parameters/knn.search_models::query.allow_partial_search_results'
        - $ref: '#/components/parameters/knn.search_models::query.analyze_wildcard'
        - $ref: '#/components/parameters/knn.search_models::query.analyzer'
        - $ref: '#/components/parameters/knn.search_models::query.batched_reduce_size'
        - $ref: '#/components/parameters/knn.search_models::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/knn.search_models::query.default_operator'
        - $ref: '#/components/parameters/knn.search_models::query.df'
        - $ref: '#/components/parameters/knn.search_models::query.docvalue_fields'
        - $ref: '#/components/parameters/knn.search_models::query.expand_wildcards'
        - $ref: '#/components/parameters/knn.search_models::query.explain'
        - $ref: '#/components/parameters/knn.search_models::query.from'
        - $ref: '#/components/parameters/knn.search_models::query.ignore_throttled'
        - $ref: '#/components/parameters/knn.search_models::query.ignore_unavailable'
        - $ref: '#/components/parameters/knn.search_models::query.lenient'
        - $ref: '#/components/parameters/knn.search_models::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/knn.search_models::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/knn.search_models::query.preference'
        - $ref: '#/components/parameters/knn.search_models::query.q'
        - $ref: '#/components/parameters/knn.search_models::query.request_cache'
        - $ref: '#/components/parameters/knn.search_models::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/knn.search_models::query.routing'
        - $ref: '#/components/parameters/knn.search_models::query.scroll'
        - $ref: '#/components/parameters/knn.search_models::query.search_type'
        - $ref: '#/components/parameters/knn.search_models::query.seq_no_primary_term'
        - $ref: '#/components/parameters/knn.search_models::query.size'
        - $ref: '#/components/parameters/knn.search_models::query.sort'
        - $ref: '#/components/parameters/knn.search_models::query.stats'
        - $ref: '#/components/parameters/knn.search_models::query.stored_fields'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_field'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_mode'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_size'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_text'
        - $ref: '#/components/parameters/knn.search_models::query.terminate_after'
        - $ref: '#/components/parameters/knn.search_models::query.timeout'
        - $ref: '#/components/parameters/knn.search_models::query.track_scores'
        - $ref: '#/components/parameters/knn.search_models::query.track_total_hits'
        - $ref: '#/components/parameters/knn.search_models::query.typed_keys'
        - $ref: '#/components/parameters/knn.search_models::query.version'
      requestBody:
        $ref: '#/components/requestBodies/knn.search_models'
      responses:
        '200':
          $ref: '#/components/responses/knn.search_models@200'
    post:
      operationId: knn.search_models.1
      x-operation-group: knn.search_models
      x-version-added: '1.0'
      description: Use an OpenSearch query to search for models in the index.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#search-model
      parameters:
        - $ref: '#/components/parameters/knn.search_models::query._source'
        - $ref: '#/components/parameters/knn.search_models::query._source_excludes'
        - $ref: '#/components/parameters/knn.search_models::query._source_includes'
        - $ref: '#/components/parameters/knn.search_models::query.allow_no_indices'
        - $ref: '#/components/parameters/knn.search_models::query.allow_partial_search_results'
        - $ref: '#/components/parameters/knn.search_models::query.analyze_wildcard'
        - $ref: '#/components/parameters/knn.search_models::query.analyzer'
        - $ref: '#/components/parameters/knn.search_models::query.batched_reduce_size'
        - $ref: '#/components/parameters/knn.search_models::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/knn.search_models::query.default_operator'
        - $ref: '#/components/parameters/knn.search_models::query.df'
        - $ref: '#/components/parameters/knn.search_models::query.docvalue_fields'
        - $ref: '#/components/parameters/knn.search_models::query.expand_wildcards'
        - $ref: '#/components/parameters/knn.search_models::query.explain'
        - $ref: '#/components/parameters/knn.search_models::query.from'
        - $ref: '#/components/parameters/knn.search_models::query.ignore_throttled'
        - $ref: '#/components/parameters/knn.search_models::query.ignore_unavailable'
        - $ref: '#/components/parameters/knn.search_models::query.lenient'
        - $ref: '#/components/parameters/knn.search_models::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/knn.search_models::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/knn.search_models::query.preference'
        - $ref: '#/components/parameters/knn.search_models::query.q'
        - $ref: '#/components/parameters/knn.search_models::query.request_cache'
        - $ref: '#/components/parameters/knn.search_models::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/knn.search_models::query.routing'
        - $ref: '#/components/parameters/knn.search_models::query.scroll'
        - $ref: '#/components/parameters/knn.search_models::query.search_type'
        - $ref: '#/components/parameters/knn.search_models::query.seq_no_primary_term'
        - $ref: '#/components/parameters/knn.search_models::query.size'
        - $ref: '#/components/parameters/knn.search_models::query.sort'
        - $ref: '#/components/parameters/knn.search_models::query.stats'
        - $ref: '#/components/parameters/knn.search_models::query.stored_fields'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_field'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_mode'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_size'
        - $ref: '#/components/parameters/knn.search_models::query.suggest_text'
        - $ref: '#/components/parameters/knn.search_models::query.terminate_after'
        - $ref: '#/components/parameters/knn.search_models::query.timeout'
        - $ref: '#/components/parameters/knn.search_models::query.track_scores'
        - $ref: '#/components/parameters/knn.search_models::query.track_total_hits'
        - $ref: '#/components/parameters/knn.search_models::query.typed_keys'
        - $ref: '#/components/parameters/knn.search_models::query.version'
      requestBody:
        $ref: '#/components/requestBodies/knn.search_models'
      responses:
        '200':
          $ref: '#/components/responses/knn.search_models@200'
  /_plugins/_knn/models/_train:
    post:
      operationId: knn.train_model.0
      x-operation-group: knn.train_model
      x-version-added: '1.0'
      description: Create and train a model that can be used for initializing k-NN native library indexes during indexing.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#train-model
      parameters:
        - $ref: '#/components/parameters/knn.train_model::query.preference'
      requestBody:
        $ref: '#/components/requestBodies/knn.train_model'
      responses:
        '200':
          $ref: '#/components/responses/knn.train_model@200'
  /_plugins/_knn/models/{model_id}:
    get:
      operationId: knn.get_model.0
      x-operation-group: knn.get_model
      x-version-added: '1.0'
      description: Used to retrieve information about models present in the cluster.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#get-model
      parameters:
        - $ref: '#/components/parameters/knn.get_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/knn.get_model@200'
    delete:
      operationId: knn.delete_model.0
      x-operation-group: knn.delete_model
      x-version-added: '1.0'
      description: Used to delete a particular model in the cluster.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#delete-model
      parameters:
        - $ref: '#/components/parameters/knn.delete_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/knn.delete_model@200'
  /_plugins/_knn/models/{model_id}/_train:
    post:
      operationId: knn.train_model.1
      x-operation-group: knn.train_model
      x-version-added: '1.0'
      description: Create and train a model that can be used for initializing k-NN native library indexes during indexing.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#train-model
      parameters:
        - $ref: '#/components/parameters/knn.train_model::path.model_id'
        - $ref: '#/components/parameters/knn.train_model::query.preference'
      requestBody:
        $ref: '#/components/requestBodies/knn.train_model'
      responses:
        '200':
          $ref: '#/components/responses/knn.train_model@200'
  /_plugins/_knn/stats:
    get:
      operationId: knn.stats.0
      x-operation-group: knn.stats
      x-version-added: '1.0'
      description: Provides information about the current status of the k-NN plugin.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#stats
      parameters:
        - $ref: '#/components/parameters/knn.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/knn.stats@200'
  /_plugins/_knn/stats/{stat}:
    get:
      operationId: knn.stats.1
      x-operation-group: knn.stats
      x-version-added: '1.0'
      description: Provides information about the current status of the k-NN plugin.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#stats
      parameters:
        - $ref: '#/components/parameters/knn.stats::path.stat'
        - $ref: '#/components/parameters/knn.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/knn.stats@200'
  /_plugins/_knn/warmup/{index}:
    get:
      operationId: knn.warmup.0
      x-operation-group: knn.warmup
      x-version-added: '1.0'
      description: Preloads native library files into memory, reducing initial search latency for specified indexes.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#warmup-operation
      parameters:
        - $ref: '#/components/parameters/knn.warmup::path.index'
      responses:
        '200':
          $ref: '#/components/responses/knn.warmup@200'
  /_plugins/_knn/{node_id}/stats:
    get:
      operationId: knn.stats.2
      x-operation-group: knn.stats
      x-version-added: '1.0'
      description: Provides information about the current status of the k-NN plugin.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#stats
      parameters:
        - $ref: '#/components/parameters/knn.stats::path.node_id'
        - $ref: '#/components/parameters/knn.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/knn.stats@200'
  /_plugins/_knn/{node_id}/stats/{stat}:
    get:
      operationId: knn.stats.3
      x-operation-group: knn.stats
      x-version-added: '1.0'
      description: Provides information about the current status of the k-NN plugin.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/knn/api/#stats
      parameters:
        - $ref: '#/components/parameters/knn.stats::path.node_id'
        - $ref: '#/components/parameters/knn.stats::path.stat'
        - $ref: '#/components/parameters/knn.stats::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/knn.stats@200'
components:
  requestBodies:
    knn.search_models:
      content:
        application/json:
          schema:
            type: object
    knn.train_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              training_index:
                type: string
              training_field:
                type: string
              dimension:
                type: integer
                format: int32
              max_training_vector_count:
                type: integer
                format: int32
              search_size:
                type: integer
                format: int32
              description:
                type: string
              method:
                type: string
            required:
              - dimension
              - method
              - training_field
              - training_index
      required: true
  responses:
    knn.delete_model@200: {}
    knn.get_model@200: {}
    knn.search_models@200: {}
    knn.stats@200: {}
    knn.train_model@200: {}
    knn.warmup@200: {}
  parameters:
    knn.delete_model::path.model_id:
      name: model_id
      in: path
      description: The id of the model.
      schema:
        type: string
        description: The id of the model.
      required: true
    knn.get_model::path.model_id:
      name: model_id
      in: path
      description: The id of the model.
      schema:
        type: string
        description: The id of the model.
      required: true
    knn.search_models::query._source:
      name: _source
      in: query
      description: True or false to return the _source field or not, or a list of fields to return.
      style: form
      schema:
        type: array
        items:
          type: string
        description: True or false to return the _source field or not, or a list of fields to return.
      explode: true
    knn.search_models::query._source_excludes:
      name: _source_excludes
      in: query
      description: List of fields to exclude from the returned _source field.
      style: form
      schema:
        type: array
        items:
          type: string
        description: List of fields to exclude from the returned _source field.
      explode: true
    knn.search_models::query._source_includes:
      name: _source_includes
      in: query
      description: List of fields to extract and return from the _source field.
      style: form
      schema:
        type: array
        items:
          type: string
        description: List of fields to extract and return from the _source field.
      explode: true
    knn.search_models::query.allow_no_indices:
      name: allow_no_indices
      in: query
      description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified).
      schema:
        type: boolean
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified).
    knn.search_models::query.allow_partial_search_results:
      name: allow_partial_search_results
      in: query
      description: Indicate if an error should be returned if there is a partial search failure or timeout.
      schema:
        type: boolean
        default: true
        description: Indicate if an error should be returned if there is a partial search failure or timeout.
    knn.search_models::query.analyze_wildcard:
      name: analyze_wildcard
      in: query
      description: Specify whether wildcard and prefix queries should be analyzed.
      schema:
        type: boolean
        default: false
        description: Specify whether wildcard and prefix queries should be analyzed.
    knn.search_models::query.analyzer:
      name: analyzer
      in: query
      description: The analyzer to use for the query string.
      schema:
        type: string
        description: The analyzer to use for the query string.
    knn.search_models::query.batched_reduce_size:
      name: batched_reduce_size
      in: query
      description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
      schema:
        type: integer
        default: 512
        description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
        format: int32
    knn.search_models::query.ccs_minimize_roundtrips:
      name: ccs_minimize_roundtrips
      in: query
      description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution.
      schema:
        type: boolean
        default: true
        description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution.
    knn.search_models::query.default_operator:
      name: default_operator
      in: query
      description: The default operator for query string query (AND or OR).
      schema:
        $ref: '../schemas/knn._common.yaml#/components/schemas/DefaultOperator'
    knn.search_models::query.df:
      name: df
      in: query
      description: The field to use as default where no field prefix is given in the query string.
      schema:
        type: string
        description: The field to use as default where no field prefix is given in the query string.
    knn.search_models::query.docvalue_fields:
      name: docvalue_fields
      in: query
      description: Comma-separated list of fields to return as the docvalue representation of a field for each hit.
      style: form
      schema:
        type: array
        items:
          type: string
        description: Comma-separated list of fields to return as the docvalue representation of a field for each hit.
      explode: true
    knn.search_models::query.expand_wildcards:
      name: expand_wildcards
      in: query
      description: Whether to expand wildcard expression to concrete indices that are open, closed or both.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
    knn.search_models::query.explain:
      name: explain
      in: query
      description: Specify whether to return detailed information about score computation as part of a hit.
      schema:
        type: boolean
        description: Specify whether to return detailed information about score computation as part of a hit.
    knn.search_models::query.from:
      name: from
      in: query
      description: Starting offset.
      schema:
        type: integer
        default: 0
        description: Starting offset.
        format: int32
    knn.search_models::query.ignore_throttled:
      name: ignore_throttled
      in: query
      description: Whether specified concrete, expanded or aliased indices should be ignored when throttled.
      schema:
        type: boolean
        description: Whether specified concrete, expanded or aliased indices should be ignored when throttled.
    knn.search_models::query.ignore_unavailable:
      name: ignore_unavailable
      in: query
      description: Whether specified concrete indices should be ignored when unavailable (missing or closed).
      schema:
        type: boolean
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed).
    knn.search_models::query.lenient:
      name: lenient
      in: query
      description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored.
      schema:
        type: boolean
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored.
    knn.search_models::query.max_concurrent_shard_requests:
      name: max_concurrent_shard_requests
      in: query
      description: The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests.
      schema:
        type: integer
        default: 5
        description: The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests.
        format: int32
    knn.search_models::query.pre_filter_shard_size:
      name: pre_filter_shard_size
      in: query
      description: Threshold that enforces a pre-filter round-trip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter round-trip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.
      schema:
        type: integer
        description: Threshold that enforces a pre-filter round-trip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter round-trip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.
        format: int32
    knn.search_models::query.preference:
      name: preference
      in: query
      description: Specify the node or shard the operation should be performed on.
      schema:
        type: string
        default: random
        description: Specify the node or shard the operation should be performed on.
    knn.search_models::query.q:
      name: q
      in: query
      description: Query in the Lucene query string syntax.
      schema:
        type: string
        description: Query in the Lucene query string syntax.
    knn.search_models::query.request_cache:
      name: request_cache
      in: query
      description: Specify if request cache should be used for this request or not, defaults to index level setting.
      schema:
        type: boolean
        description: Specify if request cache should be used for this request or not, defaults to index level setting.
    knn.search_models::query.rest_total_hits_as_int:
      name: rest_total_hits_as_int
      in: query
      description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response.
      schema:
        type: boolean
        default: false
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response.
    knn.search_models::query.routing:
      name: routing
      in: query
      description: Comma-separated list of specific routing values.
      style: form
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      explode: true
    knn.search_models::query.scroll:
      name: scroll
      in: query
      description: Specify how long a consistent view of the index should be maintained for scrolled search.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
    knn.search_models::query.search_type:
      name: search_type
      in: query
      description: Search operation type.
      schema:
        $ref: '../schemas/knn._common.yaml#/components/schemas/SearchType'
    knn.search_models::query.seq_no_primary_term:
      name: seq_no_primary_term
      in: query
      description: Specify whether to return sequence number and primary term of the last modification of each hit.
      schema:
        type: boolean
        description: Specify whether to return sequence number and primary term of the last modification of each hit.
    knn.search_models::query.size:
      name: size
      in: query
      description: Number of hits to return.
      schema:
        type: integer
        default: 10
        description: Number of hits to return.
        format: int32
    knn.search_models::query.sort:
      name: sort
      in: query
      description: Comma-separated list of <field>:<direction> pairs.
      style: form
      schema:
        type: array
        items:
          type: string
        description: Comma-separated list of <field>:<direction> pairs.
      explode: true
    knn.search_models::query.stats:
      name: stats
      in: query
      description: Specific 'tag' of the request for logging and statistical purposes.
      style: form
      schema:
        type: array
        items:
          type: string
        description: Specific 'tag' of the request for logging and statistical purposes.
      explode: true
    knn.search_models::query.stored_fields:
      name: stored_fields
      in: query
      description: Comma-separated list of stored fields to return.
      style: form
      schema:
        type: array
        items:
          type: string
        description: Comma-separated list of stored fields to return.
      explode: true
    knn.search_models::query.suggest_field:
      name: suggest_field
      in: query
      description: Specify which field to use for suggestions.
      schema:
        type: string
        description: Specify which field to use for suggestions.
    knn.search_models::query.suggest_mode:
      name: suggest_mode
      in: query
      description: Specify suggest mode.
      schema:
        $ref: '../schemas/knn._common.yaml#/components/schemas/SuggestMode'
    knn.search_models::query.suggest_size:
      name: suggest_size
      in: query
      description: How many suggestions to return in response.
      schema:
        type: integer
        description: How many suggestions to return in response.
        format: int32
    knn.search_models::query.suggest_text:
      name: suggest_text
      in: query
      description: The source text for which the suggestions should be returned.
      schema:
        type: string
        description: The source text for which the suggestions should be returned.
    knn.search_models::query.terminate_after:
      name: terminate_after
      in: query
      description: The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
      schema:
        type: integer
        description: The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
        format: int32
    knn.search_models::query.timeout:
      name: timeout
      in: query
      description: Operation timeout.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
    knn.search_models::query.track_scores:
      name: track_scores
      in: query
      description: Whether to calculate and return scores even if they are not used for sorting.
      schema:
        type: boolean
        description: Whether to calculate and return scores even if they are not used for sorting.
    knn.search_models::query.track_total_hits:
      name: track_total_hits
      in: query
      description: Indicate if the number of documents that match the query should be tracked.
      schema:
        type: boolean
        description: Indicate if the number of documents that match the query should be tracked.
    knn.search_models::query.typed_keys:
      name: typed_keys
      in: query
      description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response.
      schema:
        type: boolean
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response.
    knn.search_models::query.version:
      name: version
      in: query
      description: Whether to return document version as part of a hit.
      schema:
        type: boolean
        description: Whether to return document version as part of a hit.
    knn.stats::path.node_id:
      name: node_id
      in: path
      description: Comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes.
      schema:
        type: array
        description: Comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes.
        items:
          type: string
      required: true
    knn.stats::path.stat:
      name: stat
      in: path
      description: Comma-separated list of stats to retrieve; use `_all` or empty string to retrieve all stats.
      schema:
        type: array
        description: Comma-separated list of stats to retrieve; use `_all` or empty string to retrieve all stats.
        items:
          type: string
          enum:
            - cache_capacity_reached
            - circuit_breaker_triggered
            - eviction_count
            - faiss_initialized
            - graph_index_errors
            - graph_index_requests
            - graph_memory_usage
            - graph_memory_usage_percentage
            - graph_query_errors
            - graph_query_requests
            - hit_count
            - indexing_from_model_degraded
            - indices_in_cache
            - knn_query_requests
            - load_exception_count
            - load_success_count
            - miss_count
            - model_index_status
            - nmslib_initialized
            - script_compilation_errors
            - script_compilations
            - script_query_errors
            - script_query_requests
            - total_load_time
            - training_errors
            - training_memory_usage
            - training_memory_usage_percentage
            - training_requests
      required: true
    knn.stats::query.timeout:
      name: timeout
      in: query
      description: Operation timeout.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
    knn.train_model::path.model_id:
      name: model_id
      in: path
      description: The id of the model.
      schema:
        type: string
        description: The id of the model.
      required: true
    knn.train_model::query.preference:
      name: preference
      in: query
      description: Preferred node to execute training.
      schema:
        type: string
        description: Preferred node to execute training.
    knn.warmup::path.index:
      name: index
      in: path
      description: Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.
      schema:
        type: array
        description: Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.
        items:
          type: string
      required: true
