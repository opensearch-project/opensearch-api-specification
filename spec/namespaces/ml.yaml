openapi: 3.1.0
info:
  title: OpenSearch ML API
  description: OpenSearch ML API.
  version: 1.0.0
paths:
  /_plugins/_ml/model_groups/_register:
    post:
      operationId: ml.register_model_group.0
      x-operation-group: ml.register_model_group
      description: Registers a model group.
      requestBody:
        $ref: '#/components/requestBodies/ml.register_model_group'
      responses:
        '200':
          $ref: '#/components/responses/ml.register_model_group@200'
  /_plugins/_ml/model_groups/{model_group_id}:
    get:
      operationId: ml.get_model_group.0
      x-operation-group: ml.get_model_group
      description: Retrieves a model group.
      parameters:
        - $ref: '#/components/parameters/ml.get_model_group::path.model_group_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.get_model_group@200'
    put:
      operationId: ml.update_model_group.0
      x-operation-group: ml.update_model_group
      x-version-added: '2.9'
      description: Updates a model group.
      parameters:
        - $ref: '#/components/parameters/ml.update_model_group::path.model_group_id'
      requestBody:
        $ref: '#/components/requestBodies/ml.update_model_group'
      responses:
        '200':
          $ref: '#/components/responses/ml.update_model_group@200'
    delete:
      operationId: ml.delete_model_group.0
      x-operation-group: ml.delete_model_group
      description: Deletes a model group.
      parameters:
        - $ref: '#/components/parameters/ml.delete_model_group::path.model_group_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_model_group@200'
  /_plugins/_ml/model_groups/_search:
    get:
      operationId: ml.search_model_group.0
      x-operation-group: ml.search_model_group
      x-version-added: '2.9'
      description: Searches for model groups.
      requestBody:
        $ref: '#/components/requestBodies/ml.search_model_group'
      responses:
        '200':
          $ref: '#/components/responses/ml.search_model_group@200'
    post:
      operationId: ml.search_model_group.1
      x-operation-group: ml.search_model_group
      x-version-added: '2.9'
      description: Searches for model groups.
      requestBody:
        $ref: '#/components/requestBodies/ml.search_model_group'
      responses:
        '200':
          $ref: '#/components/responses/ml.search_model_group@200'
  /_plugins/_ml/models/_register:
    post:
      operationId: ml.register_model.0
      x-operation-group: ml.register_model
      description: Registers a model.
      requestBody:
        $ref: '#/components/requestBodies/ml.register_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.register_model@200'
  /_plugins/_ml/models/{model_id}:
    delete:
      operationId: ml.delete_model.0
      x-operation-group: ml.delete_model
      description: Deletes a model.
      parameters:
        - $ref: '#/components/parameters/ml.delete_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_model@200'
  /_plugins/_ml/models/{model_id}/_deploy:
    post:
      operationId: ml.deploy_model.0
      x-operation-group: ml.deploy_model
      description: Deploys a model.
      parameters:
        - $ref: '#/components/parameters/ml.deploy_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.deploy_model@200'
  /_plugins/_ml/models/{model_id}/_undeploy:
    post:
      operationId: ml.undeploy_model.0
      x-operation-group: ml.undeploy_model
      description: Undeploys a model.
      parameters:
        - $ref: '#/components/parameters/ml.undeploy_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.undeploy_model@200'
  /_plugins/_ml/tasks/{task_id}:
    get:
      operationId: ml.get_task.0
      x-operation-group: ml.get_task
      description: Retrieves a task.
      parameters:
        - $ref: '#/components/parameters/ml.get_task::path.task_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.get_task@200'
    delete:
      operationId: ml.delete_task.0
      x-operation-group: ml.delete_task
      description: Deletes a task.
      parameters:
        - $ref: '#/components/parameters/ml.delete_task::path.task_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_task@200'
  /_plugins/_ml/models/_search:
    get:
      operationId: ml.search_models.0
      x-operation-group: ml.search_models
      description: Searches for models.
      requestBody:
        $ref: '#/components/requestBodies/ml.search_models'
      responses:
        '200':
          $ref: '#/components/responses/ml.search_models@200'
  /_plugins/_ml/_predict/{algorithm_name}/{model_id}:
    post:
      operationId: ml.predict.0
      x-operation-group: ml.predict
      description: Predicts new data with trained model.
      parameters:
        - $ref: '#/components/parameters/ml.predict::path.algorithm_name'
        - $ref: '#/components/parameters/ml.predict::path.model_id'
      requestBody:
        $ref: '#/components/requestBodies/ml.predict'
      responses:
        '200':
          $ref: '#/components/responses/ml.predict@200'
  /_plugins/_ml/_train/{algorithm_name}:
    post:
      operationId: ml.train.0
      x-operation-group: ml.train
      description: Trains a model synchronously.
      parameters:
        - $ref: '#/components/parameters/ml.train::path.algorithm_name'
      requestBody:
        $ref: '#/components/requestBodies/ml.train'
      responses:
        '200':
          $ref: '#/components/responses/ml.train@200'
  /_plugins/_ml/_train_predict/{algorithm_name}:
    post:
      operationId: ml.train_predict.0
      x-operation-group: ml.train_predict
      description: Trains a model and predicts against the same training dataset.
      parameters:
        - $ref: '#/components/parameters/ml.train_predict::path.algorithm_name'
      requestBody:
        $ref: '#/components/requestBodies/ml.train_predict'
      responses:
        '200':
          $ref: '#/components/responses/ml.train_predict@200'
  /_plugins/_ml/connectors/_create:
    post:
      operationId: ml.create_connector.0
      x-operation-group: ml.create_connector
      description: Creates a standalone connector.
      requestBody:
        $ref: '#/components/requestBodies/ml.create_connector'
      responses:
        '200':
          $ref: '#/components/responses/ml.create_connector@200'
  /_plugins/_ml/connectors/{connector_id}:
    get:
      operationId: ml.get_connector.0
      x-operation-group: ml.get_connector
      x-version-added: '2.11'
      description: Retrieves a standalone connector.
      parameters:
        - $ref: '#/components/parameters/ml.get_connector::path.connector_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.get_connector@200'
    put:
      operationId: ml.update_connector.0
      x-operation-group: ml.update_connector
      x-version-added: '2.12'
      description: Updates a standalone connector.
      parameters:
        - $ref: '#/components/parameters/ml.update_connector::path.connector_id'
      requestBody:
        $ref: '#/components/requestBodies/ml.update_connector'
      responses:
        '200':
          $ref: '#/components/responses/ml.update_connector@200'
    delete:
      operationId: ml.delete_connector.0
      x-operation-group: ml.delete_connector
      description: Deletes a standalone connector.
      parameters:
        - $ref: '#/components/parameters/ml.delete_connector::path.connector_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_connector@200'
  /_plugins/_ml/connectors/_search:
    get:
      operationId: ml.search_connectors.0
      x-operation-group: ml.search_connectors
      x-version-added: '2.11'
      description: Searches for standalone connectors.
      requestBody:
        $ref: '#/components/requestBodies/ml.search_connectors'
      responses:
        '200':
          $ref: '#/components/responses/ml.search_connectors@200'
    post:
      operationId: ml.search_connectors.1
      x-operation-group: ml.search_connectors
      x-version-added: '2.11'
      description: Searches for standalone connectors.
      requestBody:
        $ref: '#/components/requestBodies/ml.search_connectors'
      responses:
        '200':
          $ref: '#/components/responses/ml.search_connectors@200'
  /_plugins/_ml/agents/_register:
    post:
      operationId: ml.register_agents.0
      x-operation-group: ml.register_agents
      description: Register an agent.
      requestBody:
        $ref: '#/components/requestBodies/ml.register_agents'
      responses:
        '200':
          $ref: '#/components/responses/ml.register_agents@200'
  /_plugins/_ml/agents/{agent_id}:
    delete:
      operationId: ml.delete_agent.0
      x-operation-group: ml.delete_agent
      description: Delete an agent.
      parameters:
        - $ref: '#/components/parameters/ml.delete_agent::path.agent_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_agent@200'
components:
  requestBodies:
    ml.register_model_group:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The model group name.
              description:
                type: string
                description: The model group description.
              access_mode:
                type: string
                description: The model group access mode.
                enum: [private, public, restricted]
              backend_roles:
                type: array
                items:
                  type: string
                description: The backend roles.
              add_all_backend_roles:
                type: boolean
                description: The add all backend roles.
            required:
              - name
    ml.update_model_group:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The model group name.
              description:
                type: string
                description: The model group description.
              add_all_backend_roles:
                type: boolean
                description: Whether to include all backend roles.
              model_access_name:
                type: string
                description: The model access name
              backend_roles:
                type: array
                items:
                  type: string
                description: The backend roles.
              add_backend_roles:
                type: array
                items:
                  type: string
                description: The backend roles to add.
    ml.search_model_group:
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Query'
              size:
                type: integer
                format: int64
                description: The number of model groups to return.
              sort:
                type: array
                items:
                  $ref: '../schemas/ml._common.yaml#/components/schemas/Sort'
                description: The sort order.
    ml.register_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The model name.
              version:
                type: string
                description: The model version.
              model_format:
                type: string
                description: The portable format of the model file.
                enum: [ONNX, TORCH_SCRIPT]
              description:
                type: string
                description: The model description.
              model_group_id:
                type: string
                description: The ID of the model group to which to register the model.
            required:
              - model_format
              - name
              - version
    ml.search_models:
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                type: object
                $ref: '../schemas/ml._common.yaml#/components/schemas/Query'
              size:
                type: integer
                format: int64
                description: The number of models to return.
              sort:
                type: array
                items:
                  $ref: '../schemas/ml._common.yaml#/components/schemas/Sort'
                description: The sort order.
    ml.predict:
      content:
        application/json:
          schema:
            type: object
            properties:
              input_query:
                $ref: '../schemas/ml._common.yaml#/components/schemas/InputQuery'
              input_index:
                type: array
                items:
                  type: string
                description: The input index.
              text_docs:
                type: array
                items:
                  type: string
                description: The text documents.
              return_number:
                type: boolean
                description: Whether to return bytes in model output.
              target_response:
                type: array
                items:
                  type: string
                description: The target response.
    ml.train:
      content:
        application/json:
          schema:
            type: object
            properties:
              parameters:
                $ref: '../schemas/ml._common.yaml#/components/schemas/TrainParameters'
              input_query:
                $ref: '../schemas/ml._common.yaml#/components/schemas/InputQuery'
              input_index:
                type: array
                description: The input index.
                items:
                  type: string
    ml.train_predict:
      content:
        application/json:
          schema:
            type: object
            properties:
              parameters:
                $ref: '../schemas/ml._common.yaml#/components/schemas/TrainParameters'
              input_query:
                $ref: '../schemas/ml._common.yaml#/components/schemas/InputQuery'
              input_index:
                type: array
                description: The input index.
                items:
                  type: string
              input_data:
                $ref: '../schemas/ml._common.yaml#/components/schemas/PredictionResult'
    ml.create_connector:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              version:
                type: integer
              protocol:
                type: string
                enum:
                  - aws_sigv4
                  - http
              credential:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Credential'
              parameters:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Parameters'
              client_config:
                $ref: '../schemas/ml._common.yaml#/components/schemas/ClientConfig'
              actions:
                type: array
                items:
                  $ref: '../schemas/ml._common.yaml#/components/schemas/Action'
            required:
              - actions
              - credential
              - description
              - name
              - parameters
              - protocol
              - version
    ml.update_connector:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                $ref: '../schemas/_common.yaml#/components/schemas/Name'
              description:
                type: string
                description: The connector description.
              version:
                $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
              protocol:
                type: string
                description: The connector protocol.
                enum:
                  - aws_sigv4
                  - http
              parameters:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Parameters'
              credential:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Credential'
              actions:
                type: array
                items:
                  $ref: '../schemas/ml._common.yaml#/components/schemas/Action'
              backend_roles:
                type: array
                items:
                  type: string
                description: The backend roles.
              access_mode:
                type: string
                description: The model group access mode.
                enum: [private, public, restricted]
              parameters.skip_validating_missing_parameters:
                type: boolean
                description: Whether to skip validating missing parameters.
    ml.search_connectors:
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Query'
              size:
                type: integer
                description: The number of connectors to return.
              sort:
                type: array
                items:
                  type: string
                description: The sort order.
    ml.register_agents:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              description:
                type: string
              tools:
                type: array
                items:
                  $ref: '../schemas/ml._common.yaml#/components/schemas/ToolItems'
              parameters:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Parameters'
              app_type:
                type: string
              memory:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Memory'
              llm:
                $ref: '../schemas/ml._common.yaml#/components/schemas/LLM'
            required:
              - name
              - type
  responses:
    ml.register_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/ModelGroupRegistration'
    ml.get_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/ModelGroup'
    ml.update_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/UpdateModelGroupResponse'
    ml.search_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/SearchModelGroupsResponse'
    ml.delete_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.register_model@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              task_id:
                type: string
            required:
              - status
              - task_id
    ml.deploy_model@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              task_id:
                type: string
              task_type:
                type: string
            required:
              - status
              - task_id
    ml.undeploy_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/UndeployModelResponse'
    ml.delete_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.delete_task@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.get_task@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/Task'
    ml.search_models@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/SearchModelsResponse'
    ml.predict@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/PredictResponse'
    ml.train@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/TrainResponse'
    ml.train_predict@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/TrainPredictResponse'
    ml.create_connector@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              connector_id:
                type: string
    ml.get_connector@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/GetConnectorResponse'
    ml.update_connector@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.delete_connector@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.search_connectors@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/SearchConnectorsResponse'
    ml.register_agents@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              agent_id:
                type: string
    ml.delete_agent@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
  parameters:
    ml.get_model_group::path.model_group_id:
      name: model_group_id
      in: path
      required: true
      schema:
        type: string
    ml.update_model_group::path.model_group_id:
      name: model_group_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_model_group::path.model_group_id:
      name: model_group_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.deploy_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.undeploy_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_task::path.task_id:
      name: task_id
      in: path
      required: true
      schema:
        type: string
    ml.predict::path.algorithm_name:
      name: algorithm_name
      in: path
      required: true
      schema:
        type: string
    ml.predict::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.train::path.algorithm_name:
      name: algorithm_name
      in: path
      required: true
      schema:
        type: string
    ml.train_predict::path.algorithm_name:
      name: algorithm_name
      in: path
      required: true
      schema:
        type: string
    ml.get_connector::path.connector_id:
      name: connector_id
      in: path
      required: true
      schema:
        type: string
    ml.update_connector::path.connector_id:
      name: connector_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_connector::path.connector_id:
      name: connector_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_agent::path.agent_id:
      name: agent_id
      in: path
      required: true
      schema:
        type: string
    ml.get_task::path.task_id:
      name: task_id
      in: path
      required: true
      schema:
        type: string