openapi: 3.1.0
info:
  title: OpenSearch Snapshot API
  description: OpenSearch Snapshot API.
  version: 1.0.0
paths:
  /_snapshot:
    get:
      operationId: snapshot.get_repository.0
      x-operation-group: snapshot.get_repository
      x-version-added: '1.0'
      description: Returns information about a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/get-snapshot-repository/
      parameters:
        - $ref: '#/components/parameters/snapshot.get_repository::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.get_repository::query.local'
        - $ref: '#/components/parameters/snapshot.get_repository::query.master_timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.get_repository@200'
  /_snapshot/_status:
    get:
      operationId: snapshot.status.0
      x-operation-group: snapshot.status
      x-version-added: '1.0'
      description: Returns information about the status of a snapshot.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/get-snapshot-status/
      parameters:
        - $ref: '#/components/parameters/snapshot.status::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.status::query.ignore_unavailable'
        - $ref: '#/components/parameters/snapshot.status::query.master_timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.status@200'
  /_snapshot/{repository}:
    get:
      operationId: snapshot.get_repository.1
      x-operation-group: snapshot.get_repository
      x-version-added: '1.0'
      description: Returns information about a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/get-snapshot-repository/
      parameters:
        - $ref: '#/components/parameters/snapshot.get_repository::path.repository'
        - $ref: '#/components/parameters/snapshot.get_repository::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.get_repository::query.local'
        - $ref: '#/components/parameters/snapshot.get_repository::query.master_timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.get_repository@200'
    post:
      operationId: snapshot.create_repository.0
      x-operation-group: snapshot.create_repository
      x-version-added: '1.0'
      description: Creates a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/create-repository/
      parameters:
        - $ref: '#/components/parameters/snapshot.create_repository::path.repository'
        - $ref: '#/components/parameters/snapshot.create_repository::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.create_repository::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.create_repository::query.timeout'
        - $ref: '#/components/parameters/snapshot.create_repository::query.verify'
      requestBody:
        $ref: '#/components/requestBodies/snapshot.create_repository'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.create_repository@200'
    put:
      operationId: snapshot.create_repository.1
      x-operation-group: snapshot.create_repository
      x-version-added: '1.0'
      description: Creates a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/create-repository/
      parameters:
        - $ref: '#/components/parameters/snapshot.create_repository::path.repository'
        - $ref: '#/components/parameters/snapshot.create_repository::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.create_repository::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.create_repository::query.timeout'
        - $ref: '#/components/parameters/snapshot.create_repository::query.verify'
      requestBody:
        $ref: '#/components/requestBodies/snapshot.create_repository'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.create_repository@200'
    delete:
      operationId: snapshot.delete_repository.0
      x-operation-group: snapshot.delete_repository
      x-version-added: '1.0'
      description: Deletes a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/delete-snapshot-repository/
      parameters:
        - $ref: '#/components/parameters/snapshot.delete_repository::path.repository'
        - $ref: '#/components/parameters/snapshot.delete_repository::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.delete_repository::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.delete_repository::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.delete_repository@200'
  /_snapshot/{repository}/_cleanup:
    post:
      operationId: snapshot.cleanup_repository.0
      x-operation-group: snapshot.cleanup_repository
      x-version-added: '1.0'
      description: Removes stale data from repository.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/snapshot.cleanup_repository::path.repository'
        - $ref: '#/components/parameters/snapshot.cleanup_repository::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.cleanup_repository::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.cleanup_repository::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.cleanup_repository@200'
  /_snapshot/{repository}/_status:
    get:
      operationId: snapshot.status.1
      x-operation-group: snapshot.status
      x-version-added: '1.0'
      description: Returns information about the status of a snapshot.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/get-snapshot-status/
      parameters:
        - $ref: '#/components/parameters/snapshot.status::path.repository'
        - $ref: '#/components/parameters/snapshot.status::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.status::query.ignore_unavailable'
        - $ref: '#/components/parameters/snapshot.status::query.master_timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.status@200'
  /_snapshot/{repository}/_verify:
    post:
      operationId: snapshot.verify_repository.0
      x-operation-group: snapshot.verify_repository
      x-version-added: '1.0'
      description: Verifies a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/verify-snapshot-repository/
      parameters:
        - $ref: '#/components/parameters/snapshot.verify_repository::path.repository'
        - $ref: '#/components/parameters/snapshot.verify_repository::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.verify_repository::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.verify_repository::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.verify_repository@200'
  /_snapshot/{repository}/{snapshot}:
    get:
      operationId: snapshot.get.0
      x-operation-group: snapshot.get
      x-version-added: '1.0'
      description: Returns information about a snapshot.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/snapshot.get::path.repository'
        - $ref: '#/components/parameters/snapshot.get::path.snapshot'
        - $ref: '#/components/parameters/snapshot.get::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.get::query.ignore_unavailable'
        - $ref: '#/components/parameters/snapshot.get::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.get::query.verbose'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.get@200'
    post:
      operationId: snapshot.create.0
      x-operation-group: snapshot.create
      x-version-added: '1.0'
      description: Creates a snapshot in a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/create-snapshot/
      parameters:
        - $ref: '#/components/parameters/snapshot.create::path.repository'
        - $ref: '#/components/parameters/snapshot.create::path.snapshot'
        - $ref: '#/components/parameters/snapshot.create::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.create::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.create::query.wait_for_completion'
      requestBody:
        $ref: '#/components/requestBodies/snapshot.create'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.create@200'
    put:
      operationId: snapshot.create.1
      x-operation-group: snapshot.create
      x-version-added: '1.0'
      description: Creates a snapshot in a repository.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/create-snapshot/
      parameters:
        - $ref: '#/components/parameters/snapshot.create::path.repository'
        - $ref: '#/components/parameters/snapshot.create::path.snapshot'
        - $ref: '#/components/parameters/snapshot.create::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.create::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.create::query.wait_for_completion'
      requestBody:
        $ref: '#/components/requestBodies/snapshot.create'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.create@200'
    delete:
      operationId: snapshot.delete.0
      x-operation-group: snapshot.delete
      x-version-added: '1.0'
      description: Deletes a snapshot.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/delete-snapshot/
      parameters:
        - $ref: '#/components/parameters/snapshot.delete::path.repository'
        - $ref: '#/components/parameters/snapshot.delete::path.snapshot'
        - $ref: '#/components/parameters/snapshot.delete::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.delete::query.master_timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.delete@200'
  /_snapshot/{repository}/{snapshot}/_clone/{target_snapshot}:
    put:
      operationId: snapshot.clone.0
      x-operation-group: snapshot.clone
      x-version-added: '1.0'
      description: Clones indexes from one snapshot into another snapshot in the same repository.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/snapshot.clone::path.repository'
        - $ref: '#/components/parameters/snapshot.clone::path.snapshot'
        - $ref: '#/components/parameters/snapshot.clone::path.target_snapshot'
        - $ref: '#/components/parameters/snapshot.clone::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.clone::query.master_timeout'
      requestBody:
        $ref: '#/components/requestBodies/snapshot.clone'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.clone@200'
  /_snapshot/{repository}/{snapshot}/_restore:
    post:
      operationId: snapshot.restore.0
      x-operation-group: snapshot.restore
      x-version-added: '1.0'
      description: Restores a snapshot.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/restore-snapshot/
      parameters:
        - $ref: '#/components/parameters/snapshot.restore::path.repository'
        - $ref: '#/components/parameters/snapshot.restore::path.snapshot'
        - $ref: '#/components/parameters/snapshot.restore::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.restore::query.master_timeout'
        - $ref: '#/components/parameters/snapshot.restore::query.wait_for_completion'
      requestBody:
        $ref: '#/components/requestBodies/snapshot.restore'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.restore@200'
  /_snapshot/{repository}/{snapshot}/_status:
    get:
      operationId: snapshot.status.2
      x-operation-group: snapshot.status
      x-version-added: '1.0'
      description: Returns information about the status of a snapshot.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/snapshots/get-snapshot-status/
      parameters:
        - $ref: '#/components/parameters/snapshot.status::path.repository'
        - $ref: '#/components/parameters/snapshot.status::path.snapshot'
        - $ref: '#/components/parameters/snapshot.status::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/snapshot.status::query.ignore_unavailable'
        - $ref: '#/components/parameters/snapshot.status::query.master_timeout'
      responses:
        '200':
          $ref: '#/components/responses/snapshot.status@200'
components:
  requestBodies:
    snapshot.clone:
      content:
        application/json:
          schema:
            type: object
            properties:
              indices:
                type: string
            required:
              - indices
            description: The snapshot clone definition
      required: true
    snapshot.create:
      content:
        application/json:
          schema:
            type: object
            properties:
              ignore_unavailable:
                description: If `true`, the request ignores data streams and indexes in `indexes` that are missing or closed. If `false`, the request returns an error for any data stream or index that is missing or closed.
                type: boolean
              include_global_state:
                description: If `true`, the current cluster state is included in the snapshot. The cluster state includes persistent cluster settings, composable index templates, legacy index templates, ingest pipelines, and ILM policies. It also includes data stored in system indexes, such as Watches and task records (configurable with `feature_states`).
                type: boolean
              indices:
                $ref: '../schemas/_common.yaml#/components/schemas/Indices'
              feature_states:
                description: Feature states to include in the snapshot. Each feature state includes one or more system indexes containing related data. You can view a list of eligible features using the get features API. If `include_global_state` is `true`, all current feature states are included by default. If `include_global_state` is `false`, no feature states are included by default.
                type: array
                items:
                  type: string
              metadata:
                $ref: '../schemas/_common.yaml#/components/schemas/Metadata'
              partial:
                description: If `true`, allows restoring a partial snapshot of indexes with unavailable shards. Only shards that were successfully included in the snapshot will be restored. All missing shards will be recreated as empty. If `false`, the entire restore operation will fail if one or more indexes included in the snapshot do not have all primary shards available.
                type: boolean
            description: The snapshot definition
    snapshot.create_repository:
      content:
        application/json:
          schema:
            type: object
            properties:
              repository:
                $ref: '../schemas/snapshot._common.yaml#/components/schemas/Repository'
              type:
                type: string
              settings:
                $ref: '../schemas/snapshot._common.yaml#/components/schemas/RepositorySettings'
            required:
              - settings
              - type
            description: The repository definition
      required: true
    snapshot.restore:
      content:
        application/json:
          schema:
            type: object
            properties:
              ignore_index_settings:
                description: A comma-delimited list of index settings that you don't want to restore from a snapshot.
                type: array
                items:
                  type: string
              ignore_unavailable:
                type: boolean
                description: How to handle data streams or indexes that are missing or closed. If `false`, the request returns an error for any data stream or index that is missing or closed. If `true`, the request ignores data streams and indexes in indexes that are missing or closed. Defaults to `false`.
              include_aliases:
                type: boolean
                description: How to handle index aliases from the original snapshot. If `true`, index aliases from the original snapshot are restored. If `false`, aliases along with associated indexes are not restored. Defaults to `true`.
              include_global_state:
                type: boolean
                description: Whether to restore the current cluster state. If `false`, the cluster state is not restored. If true, the current cluster state is restored. Defaults to `false`.
              index_settings:
                description: A comma-delimited list of settings to add or change in all restored indexes. Use this parameter to override index settings during snapshot restoration. For data streams, these index settings are applied to the restored backing indexes.
                $ref: '../schemas/indices._common.yaml#/components/schemas/IndexSettings'
              indices:
                description: A comma-delimited list of data streams and indexes to restore from the snapshot. Multi-index syntax is supported. By default, a restore operation includes all data streams and indexes in the snapshot. If this argument is provided, the restore operation only includes the data streams and indexes that you specify.
                $ref: '../schemas/_common.yaml#/components/schemas/Indices'
              partial:
                type: boolean
                description: |-
                  How the restore operation will behave if indexes in the snapshot do not have all primary shards available.
                  If `false`, the entire restore operation fails if any indexes in the snapshot do not have all primary shards available.
                  If `true`, allows the restoration of a partial snapshot of indexes with unavailable shards. Only shards that were successfully included in the snapshot are restored. All missing shards are recreated as empty. By default, the entire restore operation fails if one or more indexes included in the snapshot do not have all primary shards available. To change this behavior, set `partial` to `true`.
                  Defaults to `false`.
              rename_pattern:
                type: string
                description: |-
                  The pattern to apply to the restored data streams and indexes. Data streams and indexes matching the rename pattern will be renamed according to the `rename_replacement` setting.
                  The rename pattern is applied as defined by the regular expression that supports referencing the original text.
                  The request fails if two or more data streams or indexes are renamed into the same name.
                  If you rename a restored data stream, its backing indexes are also renamed. For example, if you rename the logs data stream to `recovered-logs`, the backing index `.ds-logs-1` is renamed to `.ds-recovered-logs-1`.
                  If you rename a restored stream, ensure an index template matches the new stream name. If there are no matching index template names, the stream cannot roll over and new backing indexes are not created.
              rename_replacement:
                type: string
                description: The rename replacement string.
              rename_alias_pattern:
                x-version-added: '2.18'
                type: string
                description: |-
                  The pattern to apply to the restored aliases. Aliases matching the rename pattern will be renamed according to the `rename_alias_replacement` setting.
                  The rename pattern is applied as defined by the regular expression that supports referencing the original text.
                  If two or more aliases are renamed into the same name, these aliases will be merged into one.
              rename_alias_replacement:
                x-version-added: '2.18'
                type: string
                description: The rename replacement string for aliases.
              source_remote_store_repository:
                x-version-added: '2.10'
                type: string
                description: The name of the remote store repository of the source index being restored. If not provided, the Snapshot Restore API will use the repository that was registered when the snapshot was created.
              storage_type:
                x-version-added: '2.7'
                type: string
                description: |-
                  Where will be the authoritative store of the restored indexes' data.
                  A value of `local` indicates that all snapshot metadata and index data will be downloaded to local storage.
                  A value of `remote_snapshot` indicates that snapshot metadata will be downloaded to the cluster, but the remote repository will remain the authoritative store of the index data. Data will be downloaded and cached as necessary to service queries. At least one node in the cluster must be configured with the search role in order to restore a snapshot using the type `remote_snapshot`.
                  Defaults to `local`.
            description: Details of what to restore
  responses:
    snapshot.cleanup_repository@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              results:
                $ref: '../schemas/snapshot.cleanup_repository.yaml#/components/schemas/CleanupRepositoryResults'
            required:
              - results
    snapshot.clone@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/AcknowledgedResponseBase'
    snapshot.create@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              accepted:
                description: Returns `true` if the snapshot was accepted. Present when the request had `wait_for_completion` set to `false`.
                type: boolean
              snapshot:
                $ref: '../schemas/snapshot._common.yaml#/components/schemas/SnapshotInfo'
    snapshot.create_repository@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/AcknowledgedResponseBase'
    snapshot.delete@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/AcknowledgedResponseBase'
    snapshot.delete_repository@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/AcknowledgedResponseBase'
    snapshot.get@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              snapshots:
                type: array
                items:
                  $ref: '../schemas/snapshot._common.yaml#/components/schemas/SnapshotInfo'
            required:
              - snapshots
    snapshot.get_repository@200:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              $ref: '../schemas/snapshot._common.yaml#/components/schemas/Repository'
    snapshot.restore@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              accepted:
                description: Returns `true` if the restore was accepted. Present when the request had `wait_for_completion` set to `false`.
                type: boolean
              snapshot:
                $ref: '../schemas/snapshot.restore.yaml#/components/schemas/SnapshotRestore'
    snapshot.status@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              snapshots:
                type: array
                items:
                  $ref: '../schemas/snapshot._common.yaml#/components/schemas/SnapshotStatus'
            required:
              - snapshots
    snapshot.verify_repository@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              nodes:
                type: object
                additionalProperties:
                  $ref: '../schemas/snapshot.verify_repository.yaml#/components/schemas/CompactNodeInfo'
            required:
              - nodes
  parameters:
    snapshot.cleanup_repository::path.repository:
      in: path
      name: repository
      description: Snapshot repository to clean up.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.cleanup_repository::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.cleanup_repository::query.master_timeout:
      in: query
      name: master_timeout
      description: Period to wait for a connection to the cluster-manager node.
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.cleanup_repository::query.timeout:
      in: query
      name: timeout
      description: Period to wait for a response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    snapshot.clone::path.repository:
      in: path
      name: repository
      description: A repository name
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.clone::path.snapshot:
      in: path
      name: snapshot
      description: The name of the snapshot to clone from
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.clone::path.target_snapshot:
      in: path
      name: target_snapshot
      description: The name of the cloned snapshot to create
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.clone::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.clone::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.create::path.repository:
      in: path
      name: repository
      description: Repository for the snapshot.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.create::path.snapshot:
      in: path
      name: snapshot
      description: Name of the snapshot. Must be unique in the repository.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.create::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.create::query.master_timeout:
      in: query
      name: master_timeout
      description: Period to wait for a connection to the cluster-manager node. If no response is received before the timeout expires, the request fails and returns an error.
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.create::query.wait_for_completion:
      in: query
      name: wait_for_completion
      description: If `true`, the request returns a response when the snapshot is complete. If `false`, the request returns a response when the snapshot initializes.
      schema:
        type: boolean
        default: false
      style: form
    snapshot.create_repository::path.repository:
      in: path
      name: repository
      description: A repository name
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.create_repository::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.create_repository::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.create_repository::query.timeout:
      in: query
      name: timeout
      description: Explicit operation timeout
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    snapshot.create_repository::query.verify:
      in: query
      name: verify
      description: Whether to verify the repository after creation
      schema:
        type: boolean
      style: form
    snapshot.delete::path.repository:
      in: path
      name: repository
      description: A repository name
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.delete::path.snapshot:
      in: path
      name: snapshot
      description: A comma-separated list of snapshot names
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.delete::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.delete::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.delete_repository::path.repository:
      in: path
      name: repository
      description: Name of the snapshot repository to unregister. Wildcard (`*`) patterns are supported.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Names'
      style: simple
    snapshot.delete_repository::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.delete_repository::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.delete_repository::query.timeout:
      in: query
      name: timeout
      description: Explicit operation timeout
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    snapshot.get::path.repository:
      in: path
      name: repository
      description: Comma-separated list of snapshot repository names used to limit the request. Wildcard (*) expressions are supported.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.get::path.snapshot:
      in: path
      name: snapshot
      description: |-
        Comma-separated list of snapshot names to retrieve. Also accepts wildcards (`*`).
        - To get information about all snapshots in a registered repository, use a wildcard (`*`) or `_all`.
        - To get information about any snapshots that are currently running, use `_current`.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Names'
      style: simple
    snapshot.get::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.get::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `false`, the request returns an error for any snapshots that are unavailable.
      schema:
        type: boolean
        default: false
      style: form
    snapshot.get::query.master_timeout:
      in: query
      name: master_timeout
      description: Period to wait for a connection to the cluster-manager node. If no response is received before the timeout expires, the request fails and returns an error.
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.get::query.verbose:
      in: query
      name: verbose
      description: If `true`, returns additional information about each snapshot such as the version of OpenSearch which took the snapshot, the start and end times of the snapshot, and the number of shards snapshotted.
      schema:
        type: boolean
      style: form
    snapshot.get_repository::path.repository:
      in: path
      name: repository
      description: A comma-separated list of repository names
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Names'
      style: simple
    snapshot.get_repository::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.get_repository::query.local:
      in: query
      name: local
      description: Return local information, do not retrieve the state from cluster-manager node.
      schema:
        type: boolean
        default: false
      style: form
    snapshot.get_repository::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.restore::path.repository:
      in: path
      name: repository
      description: A repository name
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.restore::path.snapshot:
      in: path
      name: snapshot
      description: A snapshot name
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.restore::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.restore::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.restore::query.wait_for_completion:
      in: query
      name: wait_for_completion
      description: Should this request wait until the operation has completed before returning
      schema:
        type: boolean
        default: false
      style: form
    snapshot.status::path.repository:
      in: path
      name: repository
      description: A repository name
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.status::path.snapshot:
      in: path
      name: snapshot
      description: A comma-separated list of snapshot names
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Names'
      style: simple
    snapshot.status::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.status::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: Whether to ignore unavailable snapshots, defaults to `false` which means a SnapshotMissingException is thrown
      schema:
        type: boolean
        default: false
      style: form
    snapshot.status::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.verify_repository::path.repository:
      in: path
      name: repository
      description: A repository name
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    snapshot.verify_repository::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    snapshot.verify_repository::query.master_timeout:
      in: query
      name: master_timeout
      description: Explicit operation timeout for connection to cluster-manager node
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: '2.0'
      x-deprecation-message: To promote inclusive language, use `cluster_manager_timeout` instead.
    snapshot.verify_repository::query.timeout:
      in: query
      name: timeout
      description: Explicit operation timeout
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
