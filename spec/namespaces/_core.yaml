openapi: 3.1.0
info:
  title: OpenSearch _core API
  description: OpenSearch _core API
  version: 1.0.0
paths:
  /:
    get:
      operationId: info.0
      x-operation-group: info
      x-version-added: '1.0'
      description: Returns basic information about the cluster.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/info@200'
    head:
      operationId: ping.0
      x-operation-group: ping
      x-version-added: '1.0'
      description: Returns whether the cluster is running.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/ping@200'
  /_bulk:
    post:
      operationId: bulk.0
      x-operation-group: bulk
      x-version-added: '1.0'
      description: Allows to perform multiple index/update/delete operations in a single request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/bulk/
      parameters:
        - $ref: '#/components/parameters/bulk::query._source'
        - $ref: '#/components/parameters/bulk::query._source_excludes'
        - $ref: '#/components/parameters/bulk::query._source_includes'
        - $ref: '#/components/parameters/bulk::query.pipeline'
        - $ref: '#/components/parameters/bulk::query.refresh'
        - $ref: '#/components/parameters/bulk::query.require_alias'
        - $ref: '#/components/parameters/bulk::query.routing'
        - $ref: '#/components/parameters/bulk::query.timeout'
        - $ref: '#/components/parameters/bulk::query.type'
        - $ref: '#/components/parameters/bulk::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/bulk'
      responses:
        '200':
          $ref: '#/components/responses/bulk@200'
    put:
      operationId: bulk.1
      x-operation-group: bulk
      x-version-added: '1.0'
      description: Allows to perform multiple index/update/delete operations in a single request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/bulk/
      parameters:
        - $ref: '#/components/parameters/bulk::query._source'
        - $ref: '#/components/parameters/bulk::query._source_excludes'
        - $ref: '#/components/parameters/bulk::query._source_includes'
        - $ref: '#/components/parameters/bulk::query.pipeline'
        - $ref: '#/components/parameters/bulk::query.refresh'
        - $ref: '#/components/parameters/bulk::query.require_alias'
        - $ref: '#/components/parameters/bulk::query.routing'
        - $ref: '#/components/parameters/bulk::query.timeout'
        - $ref: '#/components/parameters/bulk::query.type'
        - $ref: '#/components/parameters/bulk::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/bulk'
      responses:
        '200':
          $ref: '#/components/responses/bulk@200'
  /_count:
    get:
      operationId: count.0
      x-operation-group: count
      x-version-added: '1.0'
      description: Returns number of documents matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/count/
      parameters:
        - $ref: '#/components/parameters/count::query.allow_no_indices'
        - $ref: '#/components/parameters/count::query.analyze_wildcard'
        - $ref: '#/components/parameters/count::query.analyzer'
        - $ref: '#/components/parameters/count::query.default_operator'
        - $ref: '#/components/parameters/count::query.df'
        - $ref: '#/components/parameters/count::query.expand_wildcards'
        - $ref: '#/components/parameters/count::query.ignore_throttled'
        - $ref: '#/components/parameters/count::query.ignore_unavailable'
        - $ref: '#/components/parameters/count::query.lenient'
        - $ref: '#/components/parameters/count::query.min_score'
        - $ref: '#/components/parameters/count::query.preference'
        - $ref: '#/components/parameters/count::query.q'
        - $ref: '#/components/parameters/count::query.routing'
        - $ref: '#/components/parameters/count::query.terminate_after'
      requestBody:
        $ref: '#/components/requestBodies/count'
      responses:
        '200':
          $ref: '#/components/responses/count@200'
    post:
      operationId: count.1
      x-operation-group: count
      x-version-added: '1.0'
      description: Returns number of documents matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/count/
      parameters:
        - $ref: '#/components/parameters/count::query.allow_no_indices'
        - $ref: '#/components/parameters/count::query.analyze_wildcard'
        - $ref: '#/components/parameters/count::query.analyzer'
        - $ref: '#/components/parameters/count::query.default_operator'
        - $ref: '#/components/parameters/count::query.df'
        - $ref: '#/components/parameters/count::query.expand_wildcards'
        - $ref: '#/components/parameters/count::query.ignore_throttled'
        - $ref: '#/components/parameters/count::query.ignore_unavailable'
        - $ref: '#/components/parameters/count::query.lenient'
        - $ref: '#/components/parameters/count::query.min_score'
        - $ref: '#/components/parameters/count::query.preference'
        - $ref: '#/components/parameters/count::query.q'
        - $ref: '#/components/parameters/count::query.routing'
        - $ref: '#/components/parameters/count::query.terminate_after'
      requestBody:
        $ref: '#/components/requestBodies/count'
      responses:
        '200':
          $ref: '#/components/responses/count@200'
  /_delete_by_query/{task_id}/_rethrottle:
    post:
      operationId: delete_by_query_rethrottle.0
      x-operation-group: delete_by_query_rethrottle
      x-version-added: '1.0'
      description: Changes the number of requests per second for a particular Delete By Query operation.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/delete_by_query_rethrottle::path.task_id'
        - $ref: '#/components/parameters/delete_by_query_rethrottle::query.requests_per_second'
      responses:
        '200':
          $ref: '#/components/responses/delete_by_query_rethrottle@200'
  /_field_caps:
    get:
      operationId: field_caps.0
      x-operation-group: field_caps
      x-version-added: '1.0'
      description: Returns the information about the capabilities of fields among multiple indices.
      externalDocs:
        url: https://opensearch.org/docs/latest/field-types/supported-field-types/alias/#using-aliases-in-field-capabilities-api-operations
      parameters:
        - $ref: '#/components/parameters/field_caps::query.allow_no_indices'
        - $ref: '#/components/parameters/field_caps::query.expand_wildcards'
        - $ref: '#/components/parameters/field_caps::query.fields'
        - $ref: '#/components/parameters/field_caps::query.ignore_unavailable'
        - $ref: '#/components/parameters/field_caps::query.include_unmapped'
      requestBody:
        $ref: '#/components/requestBodies/field_caps'
      responses:
        '200':
          $ref: '#/components/responses/field_caps@200'
    post:
      operationId: field_caps.1
      x-operation-group: field_caps
      x-version-added: '1.0'
      description: Returns the information about the capabilities of fields among multiple indices.
      externalDocs:
        url: https://opensearch.org/docs/latest/field-types/supported-field-types/alias/#using-aliases-in-field-capabilities-api-operations
      parameters:
        - $ref: '#/components/parameters/field_caps::query.allow_no_indices'
        - $ref: '#/components/parameters/field_caps::query.expand_wildcards'
        - $ref: '#/components/parameters/field_caps::query.fields'
        - $ref: '#/components/parameters/field_caps::query.ignore_unavailable'
        - $ref: '#/components/parameters/field_caps::query.include_unmapped'
      requestBody:
        $ref: '#/components/requestBodies/field_caps'
      responses:
        '200':
          $ref: '#/components/responses/field_caps@200'
  /_mget:
    get:
      operationId: mget.0
      x-operation-group: mget
      x-version-added: '1.0'
      description: Allows to get multiple documents in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/multi-get/
      parameters:
        - $ref: '#/components/parameters/mget::query._source'
        - $ref: '#/components/parameters/mget::query._source_excludes'
        - $ref: '#/components/parameters/mget::query._source_includes'
        - $ref: '#/components/parameters/mget::query.preference'
        - $ref: '#/components/parameters/mget::query.realtime'
        - $ref: '#/components/parameters/mget::query.refresh'
        - $ref: '#/components/parameters/mget::query.routing'
        - $ref: '#/components/parameters/mget::query.stored_fields'
      requestBody:
        $ref: '#/components/requestBodies/mget'
      responses:
        '200':
          $ref: '#/components/responses/mget@200'
    post:
      operationId: mget.1
      x-operation-group: mget
      x-version-added: '1.0'
      description: Allows to get multiple documents in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/multi-get/
      parameters:
        - $ref: '#/components/parameters/mget::query._source'
        - $ref: '#/components/parameters/mget::query._source_excludes'
        - $ref: '#/components/parameters/mget::query._source_includes'
        - $ref: '#/components/parameters/mget::query.preference'
        - $ref: '#/components/parameters/mget::query.realtime'
        - $ref: '#/components/parameters/mget::query.refresh'
        - $ref: '#/components/parameters/mget::query.routing'
        - $ref: '#/components/parameters/mget::query.stored_fields'
      requestBody:
        $ref: '#/components/requestBodies/mget'
      responses:
        '200':
          $ref: '#/components/responses/mget@200'
  /_msearch:
    get:
      operationId: msearch.0
      x-operation-group: msearch
      x-version-added: '1.0'
      description: Allows to execute several search operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/multi-search/
      parameters:
        - $ref: '#/components/parameters/msearch::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/msearch::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/msearch::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch::query.search_type'
        - $ref: '#/components/parameters/msearch::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch'
      responses:
        '200':
          $ref: '#/components/responses/msearch@200'
    post:
      operationId: msearch.1
      x-operation-group: msearch
      x-version-added: '1.0'
      description: Allows to execute several search operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/multi-search/
      parameters:
        - $ref: '#/components/parameters/msearch::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/msearch::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/msearch::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch::query.search_type'
        - $ref: '#/components/parameters/msearch::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch'
      responses:
        '200':
          $ref: '#/components/responses/msearch@200'
  /_msearch/template:
    get:
      operationId: msearch_template.0
      x-operation-group: msearch_template
      x-version-added: '1.0'
      description: Allows to execute several search template operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/msearch_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch_template::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch_template::query.search_type'
        - $ref: '#/components/parameters/msearch_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch_template'
      responses:
        '200':
          $ref: '#/components/responses/msearch_template@200'
    post:
      operationId: msearch_template.1
      x-operation-group: msearch_template
      x-version-added: '1.0'
      description: Allows to execute several search template operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/msearch_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch_template::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch_template::query.search_type'
        - $ref: '#/components/parameters/msearch_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch_template'
      responses:
        '200':
          $ref: '#/components/responses/msearch_template@200'
  /_mtermvectors:
    get:
      operationId: mtermvectors.0
      x-operation-group: mtermvectors
      x-version-added: '1.0'
      description: Returns multiple termvectors in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/mtermvectors::query.field_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.fields'
        - $ref: '#/components/parameters/mtermvectors::query.ids'
        - $ref: '#/components/parameters/mtermvectors::query.offsets'
        - $ref: '#/components/parameters/mtermvectors::query.payloads'
        - $ref: '#/components/parameters/mtermvectors::query.positions'
        - $ref: '#/components/parameters/mtermvectors::query.preference'
        - $ref: '#/components/parameters/mtermvectors::query.realtime'
        - $ref: '#/components/parameters/mtermvectors::query.routing'
        - $ref: '#/components/parameters/mtermvectors::query.term_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.version'
        - $ref: '#/components/parameters/mtermvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/mtermvectors'
      responses:
        '200':
          $ref: '#/components/responses/mtermvectors@200'
    post:
      operationId: mtermvectors.1
      x-operation-group: mtermvectors
      x-version-added: '1.0'
      description: Returns multiple termvectors in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/mtermvectors::query.field_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.fields'
        - $ref: '#/components/parameters/mtermvectors::query.ids'
        - $ref: '#/components/parameters/mtermvectors::query.offsets'
        - $ref: '#/components/parameters/mtermvectors::query.payloads'
        - $ref: '#/components/parameters/mtermvectors::query.positions'
        - $ref: '#/components/parameters/mtermvectors::query.preference'
        - $ref: '#/components/parameters/mtermvectors::query.realtime'
        - $ref: '#/components/parameters/mtermvectors::query.routing'
        - $ref: '#/components/parameters/mtermvectors::query.term_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.version'
        - $ref: '#/components/parameters/mtermvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/mtermvectors'
      responses:
        '200':
          $ref: '#/components/responses/mtermvectors@200'
  /_rank_eval:
    get:
      operationId: rank_eval.0
      x-operation-group: rank_eval
      x-version-added: '1.0'
      description: Allows to evaluate the quality of ranked search results over a set of typical search queries.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/rank-eval/
      parameters:
        - $ref: '#/components/parameters/rank_eval::query.allow_no_indices'
        - $ref: '#/components/parameters/rank_eval::query.expand_wildcards'
        - $ref: '#/components/parameters/rank_eval::query.ignore_unavailable'
        - $ref: '#/components/parameters/rank_eval::query.search_type'
      requestBody:
        $ref: '#/components/requestBodies/rank_eval'
      responses:
        '200':
          $ref: '#/components/responses/rank_eval@200'
    post:
      operationId: rank_eval.1
      x-operation-group: rank_eval
      x-version-added: '1.0'
      description: Allows to evaluate the quality of ranked search results over a set of typical search queries.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/rank-eval/
      parameters:
        - $ref: '#/components/parameters/rank_eval::query.allow_no_indices'
        - $ref: '#/components/parameters/rank_eval::query.expand_wildcards'
        - $ref: '#/components/parameters/rank_eval::query.ignore_unavailable'
        - $ref: '#/components/parameters/rank_eval::query.search_type'
      requestBody:
        $ref: '#/components/requestBodies/rank_eval'
      responses:
        '200':
          $ref: '#/components/responses/rank_eval@200'
  /_reindex:
    post:
      operationId: reindex.0
      x-operation-group: reindex
      x-version-added: '1.0'
      description: |-
        Allows to copy documents from one index to another, optionally filtering the source
        documents by a query, changing the destination index settings, or fetching the
        documents from a remote cluster.
      externalDocs:
        url: https://opensearch.org/docs/latest/im-plugin/reindex-data/
      parameters:
        - $ref: '#/components/parameters/reindex::query.max_docs'
        - $ref: '#/components/parameters/reindex::query.refresh'
        - $ref: '#/components/parameters/reindex::query.requests_per_second'
        - $ref: '#/components/parameters/reindex::query.scroll'
        - $ref: '#/components/parameters/reindex::query.slices'
        - $ref: '#/components/parameters/reindex::query.timeout'
        - $ref: '#/components/parameters/reindex::query.wait_for_active_shards'
        - $ref: '#/components/parameters/reindex::query.wait_for_completion'
      requestBody:
        $ref: '#/components/requestBodies/reindex'
      responses:
        '200':
          $ref: '#/components/responses/reindex@200'
  /_reindex/{task_id}/_rethrottle:
    post:
      operationId: reindex_rethrottle.0
      x-operation-group: reindex_rethrottle
      x-version-added: '1.0'
      description: Changes the number of requests per second for a particular Reindex operation.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/reindex_rethrottle::path.task_id'
        - $ref: '#/components/parameters/reindex_rethrottle::query.requests_per_second'
      responses:
        '200':
          $ref: '#/components/responses/reindex_rethrottle@200'
  /_render/template:
    get:
      operationId: render_search_template.0
      x-operation-group: render_search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/render_search_template'
      responses:
        '200':
          $ref: '#/components/responses/render_search_template@200'
    post:
      operationId: render_search_template.1
      x-operation-group: render_search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/render_search_template'
      responses:
        '200':
          $ref: '#/components/responses/render_search_template@200'
  /_render/template/{id}:
    get:
      operationId: render_search_template.2
      x-operation-group: render_search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/render_search_template::path.id'
      requestBody:
        $ref: '#/components/requestBodies/render_search_template'
      responses:
        '200':
          $ref: '#/components/responses/render_search_template@200'
    post:
      operationId: render_search_template.3
      x-operation-group: render_search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/render_search_template::path.id'
      requestBody:
        $ref: '#/components/requestBodies/render_search_template'
      responses:
        '200':
          $ref: '#/components/responses/render_search_template@200'
  /_script_context:
    get:
      operationId: get_script_context.0
      x-operation-group: get_script_context
      x-version-added: '1.0'
      description: Returns all script contexts.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/get-script-contexts/
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/get_script_context@200'
  /_script_language:
    get:
      operationId: get_script_languages.0
      x-operation-group: get_script_languages
      x-version-added: '1.0'
      description: Returns available script types, languages and contexts.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/get-script-language/
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/get_script_languages@200'
  /_scripts/painless/_execute:
    get:
      operationId: scripts_painless_execute.0
      x-operation-group: scripts_painless_execute
      x-version-added: '1.0'
      description: Allows an arbitrary script to be executed and a result to be returned.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/exec-script/
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/scripts_painless_execute'
      responses:
        '200':
          $ref: '#/components/responses/scripts_painless_execute@200'
    post:
      operationId: scripts_painless_execute.1
      x-operation-group: scripts_painless_execute
      x-version-added: '1.0'
      description: Allows an arbitrary script to be executed and a result to be returned.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/exec-script/
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/scripts_painless_execute'
      responses:
        '200':
          $ref: '#/components/responses/scripts_painless_execute@200'
  /_scripts/{id}:
    get:
      operationId: get_script.0
      x-operation-group: get_script
      x-version-added: '1.0'
      description: Returns a script.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/get-stored-script/
      parameters:
        - $ref: '#/components/parameters/get_script::path.id'
        - $ref: '#/components/parameters/get_script::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/get_script::query.master_timeout'
      responses:
        '200':
          $ref: '#/components/responses/get_script@200'
    post:
      operationId: put_script.0
      x-operation-group: put_script
      x-version-added: '1.0'
      description: Creates or updates a script.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/create-stored-script/
      parameters:
        - $ref: '#/components/parameters/put_script::path.id'
        - $ref: '#/components/parameters/put_script::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/put_script::query.master_timeout'
        - $ref: '#/components/parameters/put_script::query.timeout'
      requestBody:
        $ref: '#/components/requestBodies/put_script'
      responses:
        '200':
          $ref: '#/components/responses/put_script@200'
    put:
      operationId: put_script.1
      x-operation-group: put_script
      x-version-added: '1.0'
      description: Creates or updates a script.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/create-stored-script/
      parameters:
        - $ref: '#/components/parameters/put_script::path.id'
        - $ref: '#/components/parameters/put_script::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/put_script::query.master_timeout'
        - $ref: '#/components/parameters/put_script::query.timeout'
      requestBody:
        $ref: '#/components/requestBodies/put_script'
      responses:
        '200':
          $ref: '#/components/responses/put_script@200'
    delete:
      operationId: delete_script.0
      x-operation-group: delete_script
      x-version-added: '1.0'
      description: Deletes a script.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/delete-script/
      parameters:
        - $ref: '#/components/parameters/delete_script::path.id'
        - $ref: '#/components/parameters/delete_script::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/delete_script::query.master_timeout'
        - $ref: '#/components/parameters/delete_script::query.timeout'
      responses:
        '200':
          $ref: '#/components/responses/delete_script@200'
  /_scripts/{id}/{context}:
    post:
      operationId: put_script.2
      x-operation-group: put_script
      x-version-added: '1.0'
      description: Creates or updates a script.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/create-stored-script/
      parameters:
        - $ref: '#/components/parameters/put_script::path.context'
        - $ref: '#/components/parameters/put_script::path.id'
        - $ref: '#/components/parameters/put_script::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/put_script::query.master_timeout'
        - $ref: '#/components/parameters/put_script::query.timeout'
      requestBody:
        $ref: '#/components/requestBodies/put_script'
      responses:
        '200':
          $ref: '#/components/responses/put_script@200'
    put:
      operationId: put_script.3
      x-operation-group: put_script
      x-version-added: '1.0'
      description: Creates or updates a script.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/script-apis/create-stored-script/
      parameters:
        - $ref: '#/components/parameters/put_script::path.context'
        - $ref: '#/components/parameters/put_script::path.id'
        - $ref: '#/components/parameters/put_script::query.cluster_manager_timeout'
        - $ref: '#/components/parameters/put_script::query.master_timeout'
        - $ref: '#/components/parameters/put_script::query.timeout'
      requestBody:
        $ref: '#/components/requestBodies/put_script'
      responses:
        '200':
          $ref: '#/components/responses/put_script@200'
  /_search:
    get:
      operationId: search.0
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
        - $ref: '#/components/parameters/search::query._source'
        - $ref: '#/components/parameters/search::query._source_excludes'
        - $ref: '#/components/parameters/search::query._source_includes'
        - $ref: '#/components/parameters/search::query.allow_no_indices'
        - $ref: '#/components/parameters/search::query.allow_partial_search_results'
        - $ref: '#/components/parameters/search::query.analyze_wildcard'
        - $ref: '#/components/parameters/search::query.analyzer'
        - $ref: '#/components/parameters/search::query.batched_reduce_size'
        - $ref: '#/components/parameters/search::query.cancel_after_time_interval'
        - $ref: '#/components/parameters/search::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search::query.default_operator'
        - $ref: '#/components/parameters/search::query.df'
        - $ref: '#/components/parameters/search::query.docvalue_fields'
        - $ref: '#/components/parameters/search::query.expand_wildcards'
        - $ref: '#/components/parameters/search::query.explain'
        - $ref: '#/components/parameters/search::query.from'
        - $ref: '#/components/parameters/search::query.ignore_throttled'
        - $ref: '#/components/parameters/search::query.ignore_unavailable'
        - $ref: '#/components/parameters/search::query.include_named_queries_score'
        - $ref: '#/components/parameters/search::query.lenient'
        - $ref: '#/components/parameters/search::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/search::query.phase_took'
        - $ref: '#/components/parameters/search::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/search::query.preference'
        - $ref: '#/components/parameters/search::query.q'
        - $ref: '#/components/parameters/search::query.request_cache'
        - $ref: '#/components/parameters/search::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search::query.routing'
        - $ref: '#/components/parameters/search::query.scroll'
        - $ref: '#/components/parameters/search::query.search_pipeline'
        - $ref: '#/components/parameters/search::query.search_type'
        - $ref: '#/components/parameters/search::query.seq_no_primary_term'
        - $ref: '#/components/parameters/search::query.size'
        - $ref: '#/components/parameters/search::query.sort'
        - $ref: '#/components/parameters/search::query.stats'
        - $ref: '#/components/parameters/search::query.stored_fields'
        - $ref: '#/components/parameters/search::query.suggest_field'
        - $ref: '#/components/parameters/search::query.suggest_mode'
        - $ref: '#/components/parameters/search::query.suggest_size'
        - $ref: '#/components/parameters/search::query.suggest_text'
        - $ref: '#/components/parameters/search::query.terminate_after'
        - $ref: '#/components/parameters/search::query.timeout'
        - $ref: '#/components/parameters/search::query.track_scores'
        - $ref: '#/components/parameters/search::query.track_total_hits'
        - $ref: '#/components/parameters/search::query.typed_keys'
        - $ref: '#/components/parameters/search::query.version'
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        '200':
          $ref: '#/components/responses/search@200'
    post:
      operationId: search.1
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
        - $ref: '#/components/parameters/search::query._source'
        - $ref: '#/components/parameters/search::query._source_excludes'
        - $ref: '#/components/parameters/search::query._source_includes'
        - $ref: '#/components/parameters/search::query.allow_no_indices'
        - $ref: '#/components/parameters/search::query.allow_partial_search_results'
        - $ref: '#/components/parameters/search::query.analyze_wildcard'
        - $ref: '#/components/parameters/search::query.analyzer'
        - $ref: '#/components/parameters/search::query.batched_reduce_size'
        - $ref: '#/components/parameters/search::query.cancel_after_time_interval'
        - $ref: '#/components/parameters/search::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search::query.default_operator'
        - $ref: '#/components/parameters/search::query.df'
        - $ref: '#/components/parameters/search::query.docvalue_fields'
        - $ref: '#/components/parameters/search::query.expand_wildcards'
        - $ref: '#/components/parameters/search::query.explain'
        - $ref: '#/components/parameters/search::query.from'
        - $ref: '#/components/parameters/search::query.ignore_throttled'
        - $ref: '#/components/parameters/search::query.ignore_unavailable'
        - $ref: '#/components/parameters/search::query.include_named_queries_score'
        - $ref: '#/components/parameters/search::query.lenient'
        - $ref: '#/components/parameters/search::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/search::query.phase_took'
        - $ref: '#/components/parameters/search::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/search::query.preference'
        - $ref: '#/components/parameters/search::query.q'
        - $ref: '#/components/parameters/search::query.request_cache'
        - $ref: '#/components/parameters/search::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search::query.routing'
        - $ref: '#/components/parameters/search::query.scroll'
        - $ref: '#/components/parameters/search::query.search_pipeline'
        - $ref: '#/components/parameters/search::query.search_type'
        - $ref: '#/components/parameters/search::query.seq_no_primary_term'
        - $ref: '#/components/parameters/search::query.size'
        - $ref: '#/components/parameters/search::query.sort'
        - $ref: '#/components/parameters/search::query.stats'
        - $ref: '#/components/parameters/search::query.stored_fields'
        - $ref: '#/components/parameters/search::query.suggest_field'
        - $ref: '#/components/parameters/search::query.suggest_mode'
        - $ref: '#/components/parameters/search::query.suggest_size'
        - $ref: '#/components/parameters/search::query.suggest_text'
        - $ref: '#/components/parameters/search::query.terminate_after'
        - $ref: '#/components/parameters/search::query.timeout'
        - $ref: '#/components/parameters/search::query.track_scores'
        - $ref: '#/components/parameters/search::query.track_total_hits'
        - $ref: '#/components/parameters/search::query.typed_keys'
        - $ref: '#/components/parameters/search::query.version'
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        '200':
          $ref: '#/components/responses/search@200'
  /_search/point_in_time:
    delete:
      operationId: delete_pit.0
      x-operation-group: delete_pit
      x-version-added: '2.4'
      description: Deletes one or more point in time searches based on the IDs passed.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#delete-pits
      requestBody:
        $ref: '#/components/requestBodies/delete_pit'
      responses:
        '200':
          $ref: '#/components/responses/delete_pit@200'
  /_search/point_in_time/_all:
    get:
      operationId: get_all_pits.0
      x-operation-group: get_all_pits
      x-version-added: '2.4'
      description: Lists all active point in time searches.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#list-all-pits
      responses:
        '200':
          $ref: '#/components/responses/get_all_pits@200'
    delete:
      operationId: delete_all_pits.0
      x-operation-group: delete_all_pits
      x-version-added: '2.4'
      description: Deletes all active point in time searches.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#delete-pits
      responses:
        '200':
          $ref: '#/components/responses/delete_all_pits@200'
  /_search/scroll:
    get:
      operationId: scroll.0
      x-operation-group: scroll
      x-version-added: '1.0'
      description: Allows to retrieve a large numbers of results from a single search request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/scroll/#path-and-http-methods
      parameters:
        - $ref: '#/components/parameters/scroll::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/scroll::query.scroll'
        - $ref: '#/components/parameters/scroll::query.scroll_id'
      requestBody:
        $ref: '#/components/requestBodies/scroll'
      responses:
        '200':
          $ref: '#/components/responses/scroll@200'
    post:
      operationId: scroll.1
      x-operation-group: scroll
      x-version-added: '1.0'
      description: Allows to retrieve a large numbers of results from a single search request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/scroll/#path-and-http-methods
      parameters:
        - $ref: '#/components/parameters/scroll::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/scroll::query.scroll'
        - $ref: '#/components/parameters/scroll::query.scroll_id'
      requestBody:
        $ref: '#/components/requestBodies/scroll'
      responses:
        '200':
          $ref: '#/components/responses/scroll@200'
    delete:
      operationId: clear_scroll.0
      x-operation-group: clear_scroll
      x-version-added: '1.0'
      description: Explicitly clears the search context for a scroll.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/scroll/
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/clear_scroll'
      responses:
        '200':
          $ref: '#/components/responses/clear_scroll@200'
  /_search/scroll/{scroll_id}:
    get:
      operationId: scroll.2
      x-operation-group: scroll
      deprecated: true
      x-deprecation-message: A scroll id can be quite large and should be specified as part of the body
      x-version-added: '1.0'
      x-version-deprecated: '1.0'
      description: Allows to retrieve a large numbers of results from a single search request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/scroll/#path-and-http-methods
      parameters:
        - $ref: '#/components/parameters/scroll::path.scroll_id'
        - $ref: '#/components/parameters/scroll::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/scroll::query.scroll'
        - $ref: '#/components/parameters/scroll::query.scroll_id'
      requestBody:
        $ref: '#/components/requestBodies/scroll'
      responses:
        '200':
          $ref: '#/components/responses/scroll@200'
    post:
      operationId: scroll.3
      x-operation-group: scroll
      deprecated: true
      x-deprecation-message: A scroll id can be quite large and should be specified as part of the body
      x-version-added: '1.0'
      x-version-deprecated: '1.0'
      description: Allows to retrieve a large numbers of results from a single search request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/scroll/#path-and-http-methods
      parameters:
        - $ref: '#/components/parameters/scroll::path.scroll_id'
        - $ref: '#/components/parameters/scroll::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/scroll::query.scroll'
        - $ref: '#/components/parameters/scroll::query.scroll_id'
      requestBody:
        $ref: '#/components/requestBodies/scroll'
      responses:
        '200':
          $ref: '#/components/responses/scroll@200'
    delete:
      operationId: clear_scroll.1
      x-operation-group: clear_scroll
      deprecated: true
      x-deprecation-message: A scroll id can be quite large and should be specified as part of the body
      x-version-added: '1.0'
      x-version-deprecated: '1.0'
      description: Explicitly clears the search context for a scroll.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/scroll/
      parameters:
        - $ref: '#/components/parameters/clear_scroll::path.scroll_id'
      requestBody:
        $ref: '#/components/requestBodies/clear_scroll'
      responses:
        '200':
          $ref: '#/components/responses/clear_scroll@200'
  /_search/template:
    get:
      operationId: search_template.0
      x-operation-group: search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/search_template::query.allow_no_indices'
        - $ref: '#/components/parameters/search_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search_template::query.expand_wildcards'
        - $ref: '#/components/parameters/search_template::query.explain'
        - $ref: '#/components/parameters/search_template::query.ignore_throttled'
        - $ref: '#/components/parameters/search_template::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_template::query.preference'
        - $ref: '#/components/parameters/search_template::query.profile'
        - $ref: '#/components/parameters/search_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search_template::query.routing'
        - $ref: '#/components/parameters/search_template::query.scroll'
        - $ref: '#/components/parameters/search_template::query.search_type'
        - $ref: '#/components/parameters/search_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/search_template'
      responses:
        '200':
          $ref: '#/components/responses/search_template@200'
    post:
      operationId: search_template.1
      x-operation-group: search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/search_template::query.allow_no_indices'
        - $ref: '#/components/parameters/search_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search_template::query.expand_wildcards'
        - $ref: '#/components/parameters/search_template::query.explain'
        - $ref: '#/components/parameters/search_template::query.ignore_throttled'
        - $ref: '#/components/parameters/search_template::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_template::query.preference'
        - $ref: '#/components/parameters/search_template::query.profile'
        - $ref: '#/components/parameters/search_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search_template::query.routing'
        - $ref: '#/components/parameters/search_template::query.scroll'
        - $ref: '#/components/parameters/search_template::query.search_type'
        - $ref: '#/components/parameters/search_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/search_template'
      responses:
        '200':
          $ref: '#/components/responses/search_template@200'
  /_search_shards:
    get:
      operationId: search_shards.0
      x-operation-group: search_shards
      x-version-added: '1.0'
      description: Returns information about the indices and shards that a search request would be executed against.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/search_shards::query.allow_no_indices'
        - $ref: '#/components/parameters/search_shards::query.expand_wildcards'
        - $ref: '#/components/parameters/search_shards::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_shards::query.local'
        - $ref: '#/components/parameters/search_shards::query.preference'
        - $ref: '#/components/parameters/search_shards::query.routing'
      responses:
        '200':
          $ref: '#/components/responses/search_shards@200'
    post:
      operationId: search_shards.1
      x-operation-group: search_shards
      x-version-added: '1.0'
      description: Returns information about the indices and shards that a search request would be executed against.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/search_shards::query.allow_no_indices'
        - $ref: '#/components/parameters/search_shards::query.expand_wildcards'
        - $ref: '#/components/parameters/search_shards::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_shards::query.local'
        - $ref: '#/components/parameters/search_shards::query.preference'
        - $ref: '#/components/parameters/search_shards::query.routing'
      responses:
        '200':
          $ref: '#/components/responses/search_shards@200'
  /_update_by_query/{task_id}/_rethrottle:
    post:
      operationId: update_by_query_rethrottle.0
      x-operation-group: update_by_query_rethrottle
      x-version-added: '1.0'
      description: Changes the number of requests per second for a particular Update By Query operation.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/update_by_query_rethrottle::path.task_id'
        - $ref: '#/components/parameters/update_by_query_rethrottle::query.requests_per_second'
      responses:
        '200':
          $ref: '#/components/responses/update_by_query_rethrottle@200'
  /{index}/_bulk:
    post:
      operationId: bulk.2
      x-operation-group: bulk
      x-version-added: '1.0'
      description: Allows to perform multiple index/update/delete operations in a single request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/bulk/
      parameters:
        - $ref: '#/components/parameters/bulk::path.index'
        - $ref: '#/components/parameters/bulk::query._source'
        - $ref: '#/components/parameters/bulk::query._source_excludes'
        - $ref: '#/components/parameters/bulk::query._source_includes'
        - $ref: '#/components/parameters/bulk::query.pipeline'
        - $ref: '#/components/parameters/bulk::query.refresh'
        - $ref: '#/components/parameters/bulk::query.require_alias'
        - $ref: '#/components/parameters/bulk::query.routing'
        - $ref: '#/components/parameters/bulk::query.timeout'
        - $ref: '#/components/parameters/bulk::query.type'
        - $ref: '#/components/parameters/bulk::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/bulk'
      responses:
        '200':
          $ref: '#/components/responses/bulk@200'
    put:
      operationId: bulk.3
      x-operation-group: bulk
      x-version-added: '1.0'
      description: Allows to perform multiple index/update/delete operations in a single request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/bulk/
      parameters:
        - $ref: '#/components/parameters/bulk::path.index'
        - $ref: '#/components/parameters/bulk::query._source'
        - $ref: '#/components/parameters/bulk::query._source_excludes'
        - $ref: '#/components/parameters/bulk::query._source_includes'
        - $ref: '#/components/parameters/bulk::query.pipeline'
        - $ref: '#/components/parameters/bulk::query.refresh'
        - $ref: '#/components/parameters/bulk::query.require_alias'
        - $ref: '#/components/parameters/bulk::query.routing'
        - $ref: '#/components/parameters/bulk::query.timeout'
        - $ref: '#/components/parameters/bulk::query.type'
        - $ref: '#/components/parameters/bulk::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/bulk'
      responses:
        '200':
          $ref: '#/components/responses/bulk@200'
  /{index}/_count:
    get:
      operationId: count.2
      x-operation-group: count
      x-version-added: '1.0'
      description: Returns number of documents matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/count/
      parameters:
        - $ref: '#/components/parameters/count::path.index'
        - $ref: '#/components/parameters/count::query.allow_no_indices'
        - $ref: '#/components/parameters/count::query.analyze_wildcard'
        - $ref: '#/components/parameters/count::query.analyzer'
        - $ref: '#/components/parameters/count::query.default_operator'
        - $ref: '#/components/parameters/count::query.df'
        - $ref: '#/components/parameters/count::query.expand_wildcards'
        - $ref: '#/components/parameters/count::query.ignore_throttled'
        - $ref: '#/components/parameters/count::query.ignore_unavailable'
        - $ref: '#/components/parameters/count::query.lenient'
        - $ref: '#/components/parameters/count::query.min_score'
        - $ref: '#/components/parameters/count::query.preference'
        - $ref: '#/components/parameters/count::query.q'
        - $ref: '#/components/parameters/count::query.routing'
        - $ref: '#/components/parameters/count::query.terminate_after'
      requestBody:
        $ref: '#/components/requestBodies/count'
      responses:
        '200':
          $ref: '#/components/responses/count@200'
    post:
      operationId: count.3
      x-operation-group: count
      x-version-added: '1.0'
      description: Returns number of documents matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/count/
      parameters:
        - $ref: '#/components/parameters/count::path.index'
        - $ref: '#/components/parameters/count::query.allow_no_indices'
        - $ref: '#/components/parameters/count::query.analyze_wildcard'
        - $ref: '#/components/parameters/count::query.analyzer'
        - $ref: '#/components/parameters/count::query.default_operator'
        - $ref: '#/components/parameters/count::query.df'
        - $ref: '#/components/parameters/count::query.expand_wildcards'
        - $ref: '#/components/parameters/count::query.ignore_throttled'
        - $ref: '#/components/parameters/count::query.ignore_unavailable'
        - $ref: '#/components/parameters/count::query.lenient'
        - $ref: '#/components/parameters/count::query.min_score'
        - $ref: '#/components/parameters/count::query.preference'
        - $ref: '#/components/parameters/count::query.q'
        - $ref: '#/components/parameters/count::query.routing'
        - $ref: '#/components/parameters/count::query.terminate_after'
      requestBody:
        $ref: '#/components/requestBodies/count'
      responses:
        '200':
          $ref: '#/components/responses/count@200'
  /{index}/_create/{id}:
    post:
      operationId: create.0
      x-operation-group: create
      x-version-added: '1.0'
      description: |-
        Creates a new document in the index.

        Returns a 409 response when a document with a same ID already exists in the index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/index-document/
      parameters:
        - $ref: '#/components/parameters/create::path.id'
        - $ref: '#/components/parameters/create::path.index'
        - $ref: '#/components/parameters/create::query.pipeline'
        - $ref: '#/components/parameters/create::query.refresh'
        - $ref: '#/components/parameters/create::query.routing'
        - $ref: '#/components/parameters/create::query.timeout'
        - $ref: '#/components/parameters/create::query.version'
        - $ref: '#/components/parameters/create::query.version_type'
        - $ref: '#/components/parameters/create::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/create'
      responses:
        '200':
          $ref: '#/components/responses/create@200'
    put:
      operationId: create.1
      x-operation-group: create
      x-version-added: '1.0'
      description: |-
        Creates a new document in the index.

        Returns a 409 response when a document with a same ID already exists in the index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/index-document/
      parameters:
        - $ref: '#/components/parameters/create::path.id'
        - $ref: '#/components/parameters/create::path.index'
        - $ref: '#/components/parameters/create::query.pipeline'
        - $ref: '#/components/parameters/create::query.refresh'
        - $ref: '#/components/parameters/create::query.routing'
        - $ref: '#/components/parameters/create::query.timeout'
        - $ref: '#/components/parameters/create::query.version'
        - $ref: '#/components/parameters/create::query.version_type'
        - $ref: '#/components/parameters/create::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/create'
      responses:
        '200':
          $ref: '#/components/responses/create@200'
  /{index}/_delete_by_query:
    post:
      operationId: delete_by_query.0
      x-operation-group: delete_by_query
      x-version-added: '1.0'
      description: Deletes documents matching the provided query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/delete-by-query/
      parameters:
        - $ref: '#/components/parameters/delete_by_query::path.index'
        - $ref: '#/components/parameters/delete_by_query::query._source'
        - $ref: '#/components/parameters/delete_by_query::query._source_excludes'
        - $ref: '#/components/parameters/delete_by_query::query._source_includes'
        - $ref: '#/components/parameters/delete_by_query::query.allow_no_indices'
        - $ref: '#/components/parameters/delete_by_query::query.analyze_wildcard'
        - $ref: '#/components/parameters/delete_by_query::query.analyzer'
        - $ref: '#/components/parameters/delete_by_query::query.conflicts'
        - $ref: '#/components/parameters/delete_by_query::query.default_operator'
        - $ref: '#/components/parameters/delete_by_query::query.df'
        - $ref: '#/components/parameters/delete_by_query::query.expand_wildcards'
        - $ref: '#/components/parameters/delete_by_query::query.from'
        - $ref: '#/components/parameters/delete_by_query::query.ignore_unavailable'
        - $ref: '#/components/parameters/delete_by_query::query.lenient'
        - $ref: '#/components/parameters/delete_by_query::query.max_docs'
        - $ref: '#/components/parameters/delete_by_query::query.preference'
        - $ref: '#/components/parameters/delete_by_query::query.q'
        - $ref: '#/components/parameters/delete_by_query::query.refresh'
        - $ref: '#/components/parameters/delete_by_query::query.request_cache'
        - $ref: '#/components/parameters/delete_by_query::query.requests_per_second'
        - $ref: '#/components/parameters/delete_by_query::query.routing'
        - $ref: '#/components/parameters/delete_by_query::query.scroll'
        - $ref: '#/components/parameters/delete_by_query::query.scroll_size'
        - $ref: '#/components/parameters/delete_by_query::query.search_timeout'
        - $ref: '#/components/parameters/delete_by_query::query.search_type'
        - $ref: '#/components/parameters/delete_by_query::query.size'
        - $ref: '#/components/parameters/delete_by_query::query.slices'
        - $ref: '#/components/parameters/delete_by_query::query.sort'
        - $ref: '#/components/parameters/delete_by_query::query.stats'
        - $ref: '#/components/parameters/delete_by_query::query.terminate_after'
        - $ref: '#/components/parameters/delete_by_query::query.timeout'
        - $ref: '#/components/parameters/delete_by_query::query.version'
        - $ref: '#/components/parameters/delete_by_query::query.wait_for_active_shards'
        - $ref: '#/components/parameters/delete_by_query::query.wait_for_completion'
      requestBody:
        $ref: '#/components/requestBodies/delete_by_query'
      responses:
        '200':
          $ref: '#/components/responses/delete_by_query@200'
  /{index}/_doc:
    post:
      operationId: index.0
      x-operation-group: index
      x-version-added: '1.0'
      description: Creates or updates a document in an index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/index-document/
      parameters:
        - $ref: '#/components/parameters/index::path.index'
        - $ref: '#/components/parameters/index::query.if_primary_term'
        - $ref: '#/components/parameters/index::query.if_seq_no'
        - $ref: '#/components/parameters/index::query.op_type'
        - $ref: '#/components/parameters/index::query.pipeline'
        - $ref: '#/components/parameters/index::query.refresh'
        - $ref: '#/components/parameters/index::query.require_alias'
        - $ref: '#/components/parameters/index::query.routing'
        - $ref: '#/components/parameters/index::query.timeout'
        - $ref: '#/components/parameters/index::query.version'
        - $ref: '#/components/parameters/index::query.version_type'
        - $ref: '#/components/parameters/index::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/index'
      responses:
        '201':
          $ref: '#/components/responses/index@201'
        '200':
          $ref: '#/components/responses/index@200'
  /{index}/_doc/{id}:
    get:
      operationId: get.0
      x-operation-group: get
      x-version-added: '1.0'
      description: Returns a document.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      parameters:
        - $ref: '#/components/parameters/get::path.id'
        - $ref: '#/components/parameters/get::path.index'
        - $ref: '#/components/parameters/get::query._source'
        - $ref: '#/components/parameters/get::query._source_excludes'
        - $ref: '#/components/parameters/get::query._source_includes'
        - $ref: '#/components/parameters/get::query.preference'
        - $ref: '#/components/parameters/get::query.realtime'
        - $ref: '#/components/parameters/get::query.refresh'
        - $ref: '#/components/parameters/get::query.routing'
        - $ref: '#/components/parameters/get::query.stored_fields'
        - $ref: '#/components/parameters/get::query.version'
        - $ref: '#/components/parameters/get::query.version_type'
      responses:
        '200':
          $ref: '#/components/responses/get@200'
    head:
      operationId: exists.0
      x-operation-group: exists
      x-version-added: '1.0'
      description: Returns information about whether a document exists in an index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      parameters:
        - $ref: '#/components/parameters/exists::path.id'
        - $ref: '#/components/parameters/exists::path.index'
        - $ref: '#/components/parameters/exists::query._source'
        - $ref: '#/components/parameters/exists::query._source_excludes'
        - $ref: '#/components/parameters/exists::query._source_includes'
        - $ref: '#/components/parameters/exists::query.preference'
        - $ref: '#/components/parameters/exists::query.realtime'
        - $ref: '#/components/parameters/exists::query.refresh'
        - $ref: '#/components/parameters/exists::query.routing'
        - $ref: '#/components/parameters/exists::query.stored_fields'
        - $ref: '#/components/parameters/exists::query.version'
        - $ref: '#/components/parameters/exists::query.version_type'
      responses:
        '200':
          $ref: '#/components/responses/exists@200'
    post:
      operationId: index.1
      x-operation-group: index
      x-version-added: '1.0'
      description: Creates or updates a document in an index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/index-document/
      parameters:
        - $ref: '#/components/parameters/index::path.id'
        - $ref: '#/components/parameters/index::path.index'
        - $ref: '#/components/parameters/index::query.if_primary_term'
        - $ref: '#/components/parameters/index::query.if_seq_no'
        - $ref: '#/components/parameters/index::query.op_type'
        - $ref: '#/components/parameters/index::query.pipeline'
        - $ref: '#/components/parameters/index::query.refresh'
        - $ref: '#/components/parameters/index::query.require_alias'
        - $ref: '#/components/parameters/index::query.routing'
        - $ref: '#/components/parameters/index::query.timeout'
        - $ref: '#/components/parameters/index::query.version'
        - $ref: '#/components/parameters/index::query.version_type'
        - $ref: '#/components/parameters/index::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/index'
      responses:
        '201':
          $ref: '#/components/responses/index@201'
        '200':
          $ref: '#/components/responses/index@200'
    put:
      operationId: index.2
      x-operation-group: index
      x-version-added: '1.0'
      description: Creates or updates a document in an index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/index-document/
      parameters:
        - $ref: '#/components/parameters/index::path.id'
        - $ref: '#/components/parameters/index::path.index'
        - $ref: '#/components/parameters/index::query.if_primary_term'
        - $ref: '#/components/parameters/index::query.if_seq_no'
        - $ref: '#/components/parameters/index::query.op_type'
        - $ref: '#/components/parameters/index::query.pipeline'
        - $ref: '#/components/parameters/index::query.refresh'
        - $ref: '#/components/parameters/index::query.require_alias'
        - $ref: '#/components/parameters/index::query.routing'
        - $ref: '#/components/parameters/index::query.timeout'
        - $ref: '#/components/parameters/index::query.version'
        - $ref: '#/components/parameters/index::query.version_type'
        - $ref: '#/components/parameters/index::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/index'
      responses:
        '201':
          $ref: '#/components/responses/index@201'
        '200':
          $ref: '#/components/responses/index@200'
    delete:
      operationId: delete.0
      x-operation-group: delete
      x-version-added: '1.0'
      description: Removes a document from the index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/delete-document/
      parameters:
        - $ref: '#/components/parameters/delete::path.id'
        - $ref: '#/components/parameters/delete::path.index'
        - $ref: '#/components/parameters/delete::query.if_primary_term'
        - $ref: '#/components/parameters/delete::query.if_seq_no'
        - $ref: '#/components/parameters/delete::query.refresh'
        - $ref: '#/components/parameters/delete::query.routing'
        - $ref: '#/components/parameters/delete::query.timeout'
        - $ref: '#/components/parameters/delete::query.version'
        - $ref: '#/components/parameters/delete::query.version_type'
        - $ref: '#/components/parameters/delete::query.wait_for_active_shards'
      responses:
        '200':
          $ref: '#/components/responses/delete@200'
  /{index}/_explain/{id}:
    get:
      operationId: explain.0
      x-operation-group: explain
      x-version-added: '1.0'
      description: Returns information about why a specific matches (or doesn't match) a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/explain/
      parameters:
        - $ref: '#/components/parameters/explain::path.id'
        - $ref: '#/components/parameters/explain::path.index'
        - $ref: '#/components/parameters/explain::query._source'
        - $ref: '#/components/parameters/explain::query._source_excludes'
        - $ref: '#/components/parameters/explain::query._source_includes'
        - $ref: '#/components/parameters/explain::query.analyze_wildcard'
        - $ref: '#/components/parameters/explain::query.analyzer'
        - $ref: '#/components/parameters/explain::query.default_operator'
        - $ref: '#/components/parameters/explain::query.df'
        - $ref: '#/components/parameters/explain::query.lenient'
        - $ref: '#/components/parameters/explain::query.preference'
        - $ref: '#/components/parameters/explain::query.q'
        - $ref: '#/components/parameters/explain::query.routing'
        - $ref: '#/components/parameters/explain::query.stored_fields'
      requestBody:
        $ref: '#/components/requestBodies/explain'
      responses:
        '200':
          $ref: '#/components/responses/explain@200'
    post:
      operationId: explain.1
      x-operation-group: explain
      x-version-added: '1.0'
      description: Returns information about why a specific matches (or doesn't match) a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/explain/
      parameters:
        - $ref: '#/components/parameters/explain::path.id'
        - $ref: '#/components/parameters/explain::path.index'
        - $ref: '#/components/parameters/explain::query._source'
        - $ref: '#/components/parameters/explain::query._source_excludes'
        - $ref: '#/components/parameters/explain::query._source_includes'
        - $ref: '#/components/parameters/explain::query.analyze_wildcard'
        - $ref: '#/components/parameters/explain::query.analyzer'
        - $ref: '#/components/parameters/explain::query.default_operator'
        - $ref: '#/components/parameters/explain::query.df'
        - $ref: '#/components/parameters/explain::query.lenient'
        - $ref: '#/components/parameters/explain::query.preference'
        - $ref: '#/components/parameters/explain::query.q'
        - $ref: '#/components/parameters/explain::query.routing'
        - $ref: '#/components/parameters/explain::query.stored_fields'
      requestBody:
        $ref: '#/components/requestBodies/explain'
      responses:
        '200':
          $ref: '#/components/responses/explain@200'
  /{index}/_field_caps:
    get:
      operationId: field_caps.2
      x-operation-group: field_caps
      x-version-added: '1.0'
      description: Returns the information about the capabilities of fields among multiple indices.
      externalDocs:
        url: https://opensearch.org/docs/latest/field-types/supported-field-types/alias/#using-aliases-in-field-capabilities-api-operations
      parameters:
        - $ref: '#/components/parameters/field_caps::path.index'
        - $ref: '#/components/parameters/field_caps::query.allow_no_indices'
        - $ref: '#/components/parameters/field_caps::query.expand_wildcards'
        - $ref: '#/components/parameters/field_caps::query.fields'
        - $ref: '#/components/parameters/field_caps::query.ignore_unavailable'
        - $ref: '#/components/parameters/field_caps::query.include_unmapped'
      requestBody:
        $ref: '#/components/requestBodies/field_caps'
      responses:
        '200':
          $ref: '#/components/responses/field_caps@200'
    post:
      operationId: field_caps.3
      x-operation-group: field_caps
      x-version-added: '1.0'
      description: Returns the information about the capabilities of fields among multiple indices.
      externalDocs:
        url: https://opensearch.org/docs/latest/field-types/supported-field-types/alias/#using-aliases-in-field-capabilities-api-operations
      parameters:
        - $ref: '#/components/parameters/field_caps::path.index'
        - $ref: '#/components/parameters/field_caps::query.allow_no_indices'
        - $ref: '#/components/parameters/field_caps::query.expand_wildcards'
        - $ref: '#/components/parameters/field_caps::query.fields'
        - $ref: '#/components/parameters/field_caps::query.ignore_unavailable'
        - $ref: '#/components/parameters/field_caps::query.include_unmapped'
      requestBody:
        $ref: '#/components/requestBodies/field_caps'
      responses:
        '200':
          $ref: '#/components/responses/field_caps@200'
  /{index}/_mget:
    get:
      operationId: mget.2
      x-operation-group: mget
      x-version-added: '1.0'
      description: Allows to get multiple documents in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/multi-get/
      parameters:
        - $ref: '#/components/parameters/mget::path.index'
        - $ref: '#/components/parameters/mget::query._source'
        - $ref: '#/components/parameters/mget::query._source_excludes'
        - $ref: '#/components/parameters/mget::query._source_includes'
        - $ref: '#/components/parameters/mget::query.preference'
        - $ref: '#/components/parameters/mget::query.realtime'
        - $ref: '#/components/parameters/mget::query.refresh'
        - $ref: '#/components/parameters/mget::query.routing'
        - $ref: '#/components/parameters/mget::query.stored_fields'
      requestBody:
        $ref: '#/components/requestBodies/mget'
      responses:
        '200':
          $ref: '#/components/responses/mget@200'
    post:
      operationId: mget.3
      x-operation-group: mget
      x-version-added: '1.0'
      description: Allows to get multiple documents in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/multi-get/
      parameters:
        - $ref: '#/components/parameters/mget::path.index'
        - $ref: '#/components/parameters/mget::query._source'
        - $ref: '#/components/parameters/mget::query._source_excludes'
        - $ref: '#/components/parameters/mget::query._source_includes'
        - $ref: '#/components/parameters/mget::query.preference'
        - $ref: '#/components/parameters/mget::query.realtime'
        - $ref: '#/components/parameters/mget::query.refresh'
        - $ref: '#/components/parameters/mget::query.routing'
        - $ref: '#/components/parameters/mget::query.stored_fields'
      requestBody:
        $ref: '#/components/requestBodies/mget'
      responses:
        '200':
          $ref: '#/components/responses/mget@200'
  /{index}/_msearch:
    get:
      operationId: msearch.2
      x-operation-group: msearch
      x-version-added: '1.0'
      description: Allows to execute several search operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/multi-search/
      parameters:
        - $ref: '#/components/parameters/msearch::path.index'
        - $ref: '#/components/parameters/msearch::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/msearch::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/msearch::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch::query.search_type'
        - $ref: '#/components/parameters/msearch::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch'
      responses:
        '200':
          $ref: '#/components/responses/msearch@200'
    post:
      operationId: msearch.3
      x-operation-group: msearch
      x-version-added: '1.0'
      description: Allows to execute several search operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/multi-search/
      parameters:
        - $ref: '#/components/parameters/msearch::path.index'
        - $ref: '#/components/parameters/msearch::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/msearch::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/msearch::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch::query.search_type'
        - $ref: '#/components/parameters/msearch::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch'
      responses:
        '200':
          $ref: '#/components/responses/msearch@200'
  /{index}/_msearch/template:
    get:
      operationId: msearch_template.2
      x-operation-group: msearch_template
      x-version-added: '1.0'
      description: Allows to execute several search template operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/msearch_template::path.index'
        - $ref: '#/components/parameters/msearch_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch_template::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch_template::query.search_type'
        - $ref: '#/components/parameters/msearch_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch_template'
      responses:
        '200':
          $ref: '#/components/responses/msearch_template@200'
    post:
      operationId: msearch_template.3
      x-operation-group: msearch_template
      x-version-added: '1.0'
      description: Allows to execute several search template operations in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/msearch_template::path.index'
        - $ref: '#/components/parameters/msearch_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/msearch_template::query.max_concurrent_searches'
        - $ref: '#/components/parameters/msearch_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/msearch_template::query.search_type'
        - $ref: '#/components/parameters/msearch_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/msearch_template'
      responses:
        '200':
          $ref: '#/components/responses/msearch_template@200'
  /{index}/_mtermvectors:
    get:
      operationId: mtermvectors.2
      x-operation-group: mtermvectors
      x-version-added: '1.0'
      description: Returns multiple termvectors in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/mtermvectors::path.index'
        - $ref: '#/components/parameters/mtermvectors::query.field_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.fields'
        - $ref: '#/components/parameters/mtermvectors::query.ids'
        - $ref: '#/components/parameters/mtermvectors::query.offsets'
        - $ref: '#/components/parameters/mtermvectors::query.payloads'
        - $ref: '#/components/parameters/mtermvectors::query.positions'
        - $ref: '#/components/parameters/mtermvectors::query.preference'
        - $ref: '#/components/parameters/mtermvectors::query.realtime'
        - $ref: '#/components/parameters/mtermvectors::query.routing'
        - $ref: '#/components/parameters/mtermvectors::query.term_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.version'
        - $ref: '#/components/parameters/mtermvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/mtermvectors'
      responses:
        '200':
          $ref: '#/components/responses/mtermvectors@200'
    post:
      operationId: mtermvectors.3
      x-operation-group: mtermvectors
      x-version-added: '1.0'
      description: Returns multiple termvectors in one request.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/mtermvectors::path.index'
        - $ref: '#/components/parameters/mtermvectors::query.field_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.fields'
        - $ref: '#/components/parameters/mtermvectors::query.ids'
        - $ref: '#/components/parameters/mtermvectors::query.offsets'
        - $ref: '#/components/parameters/mtermvectors::query.payloads'
        - $ref: '#/components/parameters/mtermvectors::query.positions'
        - $ref: '#/components/parameters/mtermvectors::query.preference'
        - $ref: '#/components/parameters/mtermvectors::query.realtime'
        - $ref: '#/components/parameters/mtermvectors::query.routing'
        - $ref: '#/components/parameters/mtermvectors::query.term_statistics'
        - $ref: '#/components/parameters/mtermvectors::query.version'
        - $ref: '#/components/parameters/mtermvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/mtermvectors'
      responses:
        '200':
          $ref: '#/components/responses/mtermvectors@200'
  /{index}/_rank_eval:
    get:
      operationId: rank_eval.2
      x-operation-group: rank_eval
      x-version-added: '1.0'
      description: Allows to evaluate the quality of ranked search results over a set of typical search queries.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/rank-eval/
      parameters:
        - $ref: '#/components/parameters/rank_eval::path.index'
        - $ref: '#/components/parameters/rank_eval::query.allow_no_indices'
        - $ref: '#/components/parameters/rank_eval::query.expand_wildcards'
        - $ref: '#/components/parameters/rank_eval::query.ignore_unavailable'
        - $ref: '#/components/parameters/rank_eval::query.search_type'
      requestBody:
        $ref: '#/components/requestBodies/rank_eval'
      responses:
        '200':
          $ref: '#/components/responses/rank_eval@200'
    post:
      operationId: rank_eval.3
      x-operation-group: rank_eval
      x-version-added: '1.0'
      description: Allows to evaluate the quality of ranked search results over a set of typical search queries.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/rank-eval/
      parameters:
        - $ref: '#/components/parameters/rank_eval::path.index'
        - $ref: '#/components/parameters/rank_eval::query.allow_no_indices'
        - $ref: '#/components/parameters/rank_eval::query.expand_wildcards'
        - $ref: '#/components/parameters/rank_eval::query.ignore_unavailable'
        - $ref: '#/components/parameters/rank_eval::query.search_type'
      requestBody:
        $ref: '#/components/requestBodies/rank_eval'
      responses:
        '200':
          $ref: '#/components/responses/rank_eval@200'
  /{index}/_search:
    get:
      operationId: search.2
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
        - $ref: '#/components/parameters/search::path.index'
        - $ref: '#/components/parameters/search::query._source'
        - $ref: '#/components/parameters/search::query._source_excludes'
        - $ref: '#/components/parameters/search::query._source_includes'
        - $ref: '#/components/parameters/search::query.allow_no_indices'
        - $ref: '#/components/parameters/search::query.allow_partial_search_results'
        - $ref: '#/components/parameters/search::query.analyze_wildcard'
        - $ref: '#/components/parameters/search::query.analyzer'
        - $ref: '#/components/parameters/search::query.batched_reduce_size'
        - $ref: '#/components/parameters/search::query.cancel_after_time_interval'
        - $ref: '#/components/parameters/search::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search::query.default_operator'
        - $ref: '#/components/parameters/search::query.df'
        - $ref: '#/components/parameters/search::query.docvalue_fields'
        - $ref: '#/components/parameters/search::query.expand_wildcards'
        - $ref: '#/components/parameters/search::query.explain'
        - $ref: '#/components/parameters/search::query.from'
        - $ref: '#/components/parameters/search::query.ignore_throttled'
        - $ref: '#/components/parameters/search::query.ignore_unavailable'
        - $ref: '#/components/parameters/search::query.include_named_queries_score'
        - $ref: '#/components/parameters/search::query.lenient'
        - $ref: '#/components/parameters/search::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/search::query.phase_took'
        - $ref: '#/components/parameters/search::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/search::query.preference'
        - $ref: '#/components/parameters/search::query.q'
        - $ref: '#/components/parameters/search::query.request_cache'
        - $ref: '#/components/parameters/search::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search::query.routing'
        - $ref: '#/components/parameters/search::query.scroll'
        - $ref: '#/components/parameters/search::query.search_pipeline'
        - $ref: '#/components/parameters/search::query.search_type'
        - $ref: '#/components/parameters/search::query.seq_no_primary_term'
        - $ref: '#/components/parameters/search::query.size'
        - $ref: '#/components/parameters/search::query.sort'
        - $ref: '#/components/parameters/search::query.stats'
        - $ref: '#/components/parameters/search::query.stored_fields'
        - $ref: '#/components/parameters/search::query.suggest_field'
        - $ref: '#/components/parameters/search::query.suggest_mode'
        - $ref: '#/components/parameters/search::query.suggest_size'
        - $ref: '#/components/parameters/search::query.suggest_text'
        - $ref: '#/components/parameters/search::query.terminate_after'
        - $ref: '#/components/parameters/search::query.timeout'
        - $ref: '#/components/parameters/search::query.track_scores'
        - $ref: '#/components/parameters/search::query.track_total_hits'
        - $ref: '#/components/parameters/search::query.typed_keys'
        - $ref: '#/components/parameters/search::query.version'
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        '200':
          $ref: '#/components/responses/search@200'
    post:
      operationId: search.3
      x-operation-group: search
      x-version-added: '1.0'
      description: Returns results matching a query.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/search/
      parameters:
        - $ref: '#/components/parameters/search::path.index'
        - $ref: '#/components/parameters/search::query._source'
        - $ref: '#/components/parameters/search::query._source_excludes'
        - $ref: '#/components/parameters/search::query._source_includes'
        - $ref: '#/components/parameters/search::query.allow_no_indices'
        - $ref: '#/components/parameters/search::query.allow_partial_search_results'
        - $ref: '#/components/parameters/search::query.analyze_wildcard'
        - $ref: '#/components/parameters/search::query.analyzer'
        - $ref: '#/components/parameters/search::query.batched_reduce_size'
        - $ref: '#/components/parameters/search::query.cancel_after_time_interval'
        - $ref: '#/components/parameters/search::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search::query.default_operator'
        - $ref: '#/components/parameters/search::query.df'
        - $ref: '#/components/parameters/search::query.docvalue_fields'
        - $ref: '#/components/parameters/search::query.expand_wildcards'
        - $ref: '#/components/parameters/search::query.explain'
        - $ref: '#/components/parameters/search::query.from'
        - $ref: '#/components/parameters/search::query.ignore_throttled'
        - $ref: '#/components/parameters/search::query.ignore_unavailable'
        - $ref: '#/components/parameters/search::query.include_named_queries_score'
        - $ref: '#/components/parameters/search::query.lenient'
        - $ref: '#/components/parameters/search::query.max_concurrent_shard_requests'
        - $ref: '#/components/parameters/search::query.phase_took'
        - $ref: '#/components/parameters/search::query.pre_filter_shard_size'
        - $ref: '#/components/parameters/search::query.preference'
        - $ref: '#/components/parameters/search::query.q'
        - $ref: '#/components/parameters/search::query.request_cache'
        - $ref: '#/components/parameters/search::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search::query.routing'
        - $ref: '#/components/parameters/search::query.scroll'
        - $ref: '#/components/parameters/search::query.search_pipeline'
        - $ref: '#/components/parameters/search::query.search_type'
        - $ref: '#/components/parameters/search::query.seq_no_primary_term'
        - $ref: '#/components/parameters/search::query.size'
        - $ref: '#/components/parameters/search::query.sort'
        - $ref: '#/components/parameters/search::query.stats'
        - $ref: '#/components/parameters/search::query.stored_fields'
        - $ref: '#/components/parameters/search::query.suggest_field'
        - $ref: '#/components/parameters/search::query.suggest_mode'
        - $ref: '#/components/parameters/search::query.suggest_size'
        - $ref: '#/components/parameters/search::query.suggest_text'
        - $ref: '#/components/parameters/search::query.terminate_after'
        - $ref: '#/components/parameters/search::query.timeout'
        - $ref: '#/components/parameters/search::query.track_scores'
        - $ref: '#/components/parameters/search::query.track_total_hits'
        - $ref: '#/components/parameters/search::query.typed_keys'
        - $ref: '#/components/parameters/search::query.version'
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        '200':
          $ref: '#/components/responses/search@200'
  /{index}/_search/point_in_time:
    post:
      operationId: create_pit.0
      x-operation-group: create_pit
      x-version-added: '2.4'
      description: Creates point in time context.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#create-a-pit
      parameters:
        - $ref: '#/components/parameters/create_pit::path.index'
        - $ref: '#/components/parameters/create_pit::query.allow_partial_pit_creation'
        - $ref: '#/components/parameters/create_pit::query.expand_wildcards'
        - $ref: '#/components/parameters/create_pit::query.keep_alive'
        - $ref: '#/components/parameters/create_pit::query.preference'
        - $ref: '#/components/parameters/create_pit::query.routing'
      responses:
        '200':
          $ref: '#/components/responses/create_pit@200'
  /{index}/_search/template:
    get:
      operationId: search_template.2
      x-operation-group: search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/search_template::path.index'
        - $ref: '#/components/parameters/search_template::query.allow_no_indices'
        - $ref: '#/components/parameters/search_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search_template::query.expand_wildcards'
        - $ref: '#/components/parameters/search_template::query.explain'
        - $ref: '#/components/parameters/search_template::query.ignore_throttled'
        - $ref: '#/components/parameters/search_template::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_template::query.preference'
        - $ref: '#/components/parameters/search_template::query.profile'
        - $ref: '#/components/parameters/search_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search_template::query.routing'
        - $ref: '#/components/parameters/search_template::query.scroll'
        - $ref: '#/components/parameters/search_template::query.search_type'
        - $ref: '#/components/parameters/search_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/search_template'
      responses:
        '200':
          $ref: '#/components/responses/search_template@200'
    post:
      operationId: search_template.3
      x-operation-group: search_template
      x-version-added: '1.0'
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      parameters:
        - $ref: '#/components/parameters/search_template::path.index'
        - $ref: '#/components/parameters/search_template::query.allow_no_indices'
        - $ref: '#/components/parameters/search_template::query.ccs_minimize_roundtrips'
        - $ref: '#/components/parameters/search_template::query.expand_wildcards'
        - $ref: '#/components/parameters/search_template::query.explain'
        - $ref: '#/components/parameters/search_template::query.ignore_throttled'
        - $ref: '#/components/parameters/search_template::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_template::query.preference'
        - $ref: '#/components/parameters/search_template::query.profile'
        - $ref: '#/components/parameters/search_template::query.rest_total_hits_as_int'
        - $ref: '#/components/parameters/search_template::query.routing'
        - $ref: '#/components/parameters/search_template::query.scroll'
        - $ref: '#/components/parameters/search_template::query.search_type'
        - $ref: '#/components/parameters/search_template::query.typed_keys'
      requestBody:
        $ref: '#/components/requestBodies/search_template'
      responses:
        '200':
          $ref: '#/components/responses/search_template@200'
  /{index}/_search_shards:
    get:
      operationId: search_shards.2
      x-operation-group: search_shards
      x-version-added: '1.0'
      description: Returns information about the indices and shards that a search request would be executed against.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/search_shards::path.index'
        - $ref: '#/components/parameters/search_shards::query.allow_no_indices'
        - $ref: '#/components/parameters/search_shards::query.expand_wildcards'
        - $ref: '#/components/parameters/search_shards::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_shards::query.local'
        - $ref: '#/components/parameters/search_shards::query.preference'
        - $ref: '#/components/parameters/search_shards::query.routing'
      responses:
        '200':
          $ref: '#/components/responses/search_shards@200'
    post:
      operationId: search_shards.3
      x-operation-group: search_shards
      x-version-added: '1.0'
      description: Returns information about the indices and shards that a search request would be executed against.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/search_shards::path.index'
        - $ref: '#/components/parameters/search_shards::query.allow_no_indices'
        - $ref: '#/components/parameters/search_shards::query.expand_wildcards'
        - $ref: '#/components/parameters/search_shards::query.ignore_unavailable'
        - $ref: '#/components/parameters/search_shards::query.local'
        - $ref: '#/components/parameters/search_shards::query.preference'
        - $ref: '#/components/parameters/search_shards::query.routing'
      responses:
        '200':
          $ref: '#/components/responses/search_shards@200'
  /{index}/_source/{id}:
    get:
      operationId: get_source.0
      x-operation-group: get_source
      x-version-added: '1.0'
      description: Returns the source of a document.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      parameters:
        - $ref: '#/components/parameters/get_source::path.id'
        - $ref: '#/components/parameters/get_source::path.index'
        - $ref: '#/components/parameters/get_source::query._source'
        - $ref: '#/components/parameters/get_source::query._source_excludes'
        - $ref: '#/components/parameters/get_source::query._source_includes'
        - $ref: '#/components/parameters/get_source::query.preference'
        - $ref: '#/components/parameters/get_source::query.realtime'
        - $ref: '#/components/parameters/get_source::query.refresh'
        - $ref: '#/components/parameters/get_source::query.routing'
        - $ref: '#/components/parameters/get_source::query.version'
        - $ref: '#/components/parameters/get_source::query.version_type'
      responses:
        '200':
          $ref: '#/components/responses/get_source@200'
    head:
      operationId: exists_source.0
      x-operation-group: exists_source
      x-version-added: '1.0'
      description: Returns information about whether a document source exists in an index.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      parameters:
        - $ref: '#/components/parameters/exists_source::path.id'
        - $ref: '#/components/parameters/exists_source::path.index'
        - $ref: '#/components/parameters/exists_source::query._source'
        - $ref: '#/components/parameters/exists_source::query._source_excludes'
        - $ref: '#/components/parameters/exists_source::query._source_includes'
        - $ref: '#/components/parameters/exists_source::query.preference'
        - $ref: '#/components/parameters/exists_source::query.realtime'
        - $ref: '#/components/parameters/exists_source::query.refresh'
        - $ref: '#/components/parameters/exists_source::query.routing'
        - $ref: '#/components/parameters/exists_source::query.version'
        - $ref: '#/components/parameters/exists_source::query.version_type'
      responses:
        '200':
          $ref: '#/components/responses/exists_source@200'
  /{index}/_termvectors:
    get:
      operationId: termvectors.0
      x-operation-group: termvectors
      x-version-added: '1.0'
      description: Returns information and statistics about terms in the fields of a particular document.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/termvectors::path.index'
        - $ref: '#/components/parameters/termvectors::query.field_statistics'
        - $ref: '#/components/parameters/termvectors::query.fields'
        - $ref: '#/components/parameters/termvectors::query.offsets'
        - $ref: '#/components/parameters/termvectors::query.payloads'
        - $ref: '#/components/parameters/termvectors::query.positions'
        - $ref: '#/components/parameters/termvectors::query.preference'
        - $ref: '#/components/parameters/termvectors::query.realtime'
        - $ref: '#/components/parameters/termvectors::query.routing'
        - $ref: '#/components/parameters/termvectors::query.term_statistics'
        - $ref: '#/components/parameters/termvectors::query.version'
        - $ref: '#/components/parameters/termvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/termvectors'
      responses:
        '200':
          $ref: '#/components/responses/termvectors@200'
    post:
      operationId: termvectors.1
      x-operation-group: termvectors
      x-version-added: '1.0'
      description: Returns information and statistics about terms in the fields of a particular document.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/termvectors::path.index'
        - $ref: '#/components/parameters/termvectors::query.field_statistics'
        - $ref: '#/components/parameters/termvectors::query.fields'
        - $ref: '#/components/parameters/termvectors::query.offsets'
        - $ref: '#/components/parameters/termvectors::query.payloads'
        - $ref: '#/components/parameters/termvectors::query.positions'
        - $ref: '#/components/parameters/termvectors::query.preference'
        - $ref: '#/components/parameters/termvectors::query.realtime'
        - $ref: '#/components/parameters/termvectors::query.routing'
        - $ref: '#/components/parameters/termvectors::query.term_statistics'
        - $ref: '#/components/parameters/termvectors::query.version'
        - $ref: '#/components/parameters/termvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/termvectors'
      responses:
        '200':
          $ref: '#/components/responses/termvectors@200'
  /{index}/_termvectors/{id}:
    get:
      operationId: termvectors.2
      x-operation-group: termvectors
      x-version-added: '1.0'
      description: Returns information and statistics about terms in the fields of a particular document.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/termvectors::path.id'
        - $ref: '#/components/parameters/termvectors::path.index'
        - $ref: '#/components/parameters/termvectors::query.field_statistics'
        - $ref: '#/components/parameters/termvectors::query.fields'
        - $ref: '#/components/parameters/termvectors::query.offsets'
        - $ref: '#/components/parameters/termvectors::query.payloads'
        - $ref: '#/components/parameters/termvectors::query.positions'
        - $ref: '#/components/parameters/termvectors::query.preference'
        - $ref: '#/components/parameters/termvectors::query.realtime'
        - $ref: '#/components/parameters/termvectors::query.routing'
        - $ref: '#/components/parameters/termvectors::query.term_statistics'
        - $ref: '#/components/parameters/termvectors::query.version'
        - $ref: '#/components/parameters/termvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/termvectors'
      responses:
        '200':
          $ref: '#/components/responses/termvectors@200'
    post:
      operationId: termvectors.3
      x-operation-group: termvectors
      x-version-added: '1.0'
      description: Returns information and statistics about terms in the fields of a particular document.
      externalDocs:
        url: https://opensearch.org/docs/latest
      parameters:
        - $ref: '#/components/parameters/termvectors::path.id'
        - $ref: '#/components/parameters/termvectors::path.index'
        - $ref: '#/components/parameters/termvectors::query.field_statistics'
        - $ref: '#/components/parameters/termvectors::query.fields'
        - $ref: '#/components/parameters/termvectors::query.offsets'
        - $ref: '#/components/parameters/termvectors::query.payloads'
        - $ref: '#/components/parameters/termvectors::query.positions'
        - $ref: '#/components/parameters/termvectors::query.preference'
        - $ref: '#/components/parameters/termvectors::query.realtime'
        - $ref: '#/components/parameters/termvectors::query.routing'
        - $ref: '#/components/parameters/termvectors::query.term_statistics'
        - $ref: '#/components/parameters/termvectors::query.version'
        - $ref: '#/components/parameters/termvectors::query.version_type'
      requestBody:
        $ref: '#/components/requestBodies/termvectors'
      responses:
        '200':
          $ref: '#/components/responses/termvectors@200'
  /{index}/_update/{id}:
    post:
      operationId: update.0
      x-operation-group: update
      x-version-added: '1.0'
      description: Updates a document with a script or partial document.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/update-document/
      parameters:
        - $ref: '#/components/parameters/update::path.id'
        - $ref: '#/components/parameters/update::path.index'
        - $ref: '#/components/parameters/update::query._source'
        - $ref: '#/components/parameters/update::query._source_excludes'
        - $ref: '#/components/parameters/update::query._source_includes'
        - $ref: '#/components/parameters/update::query.if_primary_term'
        - $ref: '#/components/parameters/update::query.if_seq_no'
        - $ref: '#/components/parameters/update::query.lang'
        - $ref: '#/components/parameters/update::query.refresh'
        - $ref: '#/components/parameters/update::query.require_alias'
        - $ref: '#/components/parameters/update::query.retry_on_conflict'
        - $ref: '#/components/parameters/update::query.routing'
        - $ref: '#/components/parameters/update::query.timeout'
        - $ref: '#/components/parameters/update::query.wait_for_active_shards'
      requestBody:
        $ref: '#/components/requestBodies/update'
      responses:
        '200':
          $ref: '#/components/responses/update@200'
  /{index}/_update_by_query:
    post:
      operationId: update_by_query.0
      x-operation-group: update_by_query
      x-version-added: '1.0'
      description: |-
        Performs an update on every document in the index without changing the source,
        for example to pick up a mapping change.
      externalDocs:
        url: https://opensearch.org/docs/latest/api-reference/document-apis/update-by-query/
      parameters:
        - $ref: '#/components/parameters/update_by_query::path.index'
        - $ref: '#/components/parameters/update_by_query::query._source'
        - $ref: '#/components/parameters/update_by_query::query._source_excludes'
        - $ref: '#/components/parameters/update_by_query::query._source_includes'
        - $ref: '#/components/parameters/update_by_query::query.allow_no_indices'
        - $ref: '#/components/parameters/update_by_query::query.analyze_wildcard'
        - $ref: '#/components/parameters/update_by_query::query.analyzer'
        - $ref: '#/components/parameters/update_by_query::query.conflicts'
        - $ref: '#/components/parameters/update_by_query::query.default_operator'
        - $ref: '#/components/parameters/update_by_query::query.df'
        - $ref: '#/components/parameters/update_by_query::query.expand_wildcards'
        - $ref: '#/components/parameters/update_by_query::query.from'
        - $ref: '#/components/parameters/update_by_query::query.ignore_unavailable'
        - $ref: '#/components/parameters/update_by_query::query.lenient'
        - $ref: '#/components/parameters/update_by_query::query.max_docs'
        - $ref: '#/components/parameters/update_by_query::query.pipeline'
        - $ref: '#/components/parameters/update_by_query::query.preference'
        - $ref: '#/components/parameters/update_by_query::query.q'
        - $ref: '#/components/parameters/update_by_query::query.refresh'
        - $ref: '#/components/parameters/update_by_query::query.request_cache'
        - $ref: '#/components/parameters/update_by_query::query.requests_per_second'
        - $ref: '#/components/parameters/update_by_query::query.routing'
        - $ref: '#/components/parameters/update_by_query::query.scroll'
        - $ref: '#/components/parameters/update_by_query::query.scroll_size'
        - $ref: '#/components/parameters/update_by_query::query.search_timeout'
        - $ref: '#/components/parameters/update_by_query::query.search_type'
        - $ref: '#/components/parameters/update_by_query::query.size'
        - $ref: '#/components/parameters/update_by_query::query.slices'
        - $ref: '#/components/parameters/update_by_query::query.sort'
        - $ref: '#/components/parameters/update_by_query::query.stats'
        - $ref: '#/components/parameters/update_by_query::query.terminate_after'
        - $ref: '#/components/parameters/update_by_query::query.timeout'
        - $ref: '#/components/parameters/update_by_query::query.version'
        - $ref: '#/components/parameters/update_by_query::query.wait_for_active_shards'
        - $ref: '#/components/parameters/update_by_query::query.wait_for_completion'
      requestBody:
        $ref: '#/components/requestBodies/update_by_query'
      responses:
        '200':
          $ref: '#/components/responses/update_by_query@200'
components:
  requestBodies:
    bulk:
      content:
        application/x-ndjson:
          schema:
            type: array
            items:
              anyOf:
                - $ref: '../schemas/_core.bulk.yaml#/components/schemas/OperationContainer'
                - $ref: '../schemas/_core.bulk.yaml#/components/schemas/UpdateAction'
                - type: object
            description: The operation definition and data (action-data pairs), separated by newlines
      required: true
    clear_scroll:
      content:
        application/json:
          schema:
            type: object
            properties:
              scroll_id:
                $ref: '../schemas/_common.yaml#/components/schemas/ScrollIds'
            description: Comma-separated list of scroll IDs to clear if none was specified via the scroll_id parameter
    count:
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/QueryContainer'
            description: Query to restrict the results specified with the Query DSL (optional)
    create:
      content:
        application/json:
          schema:
            type: object
            description: The document
      required: true
    delete_by_query:
      content:
        application/json:
          schema:
            type: object
            properties:
              max_docs:
                description: The maximum number of documents to delete.
                type: number
              query:
                $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/QueryContainer'
              slice:
                $ref: '../schemas/_common.yaml#/components/schemas/SlicedScroll'
            description: The search definition using the Query DSL
      required: true
    delete_pit:
      content:
        application/json:
          schema:
            type: object
            description: The point-in-time ids to be deleted
            properties:
              pit_id:
                type: array
                items:
                  type: string
            required:
              - pit_id
    explain:
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/QueryContainer'
            description: The query definition using the Query DSL
    field_caps:
      content:
        application/json:
          schema:
            type: object
            properties:
              fields:
                $ref: '../schemas/_common.yaml#/components/schemas/Fields'
              index_filter:
                $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/QueryContainer'
              runtime_mappings:
                $ref: '../schemas/_common.mapping.yaml#/components/schemas/RuntimeFields'
            description: An index filter specified with the Query DSL
    index:
      content:
        application/json:
          schema:
            type: object
            description: The document
      required: true
    mget:
      content:
        application/json:
          schema:
            type: object
            properties:
              docs:
                description: The documents you want to retrieve. Required if no index is specified in the request URI.
                type: array
                items:
                  $ref: '../schemas/_core.mget.yaml#/components/schemas/Operation'
              ids:
                $ref: '../schemas/_common.yaml#/components/schemas/Ids'
            description: Document identifiers; can be either `docs` (containing full document information) or `ids` (when index is provided in the URL.
      required: true
    msearch:
      content:
        application/x-ndjson:
          schema:
            type: array
            items:
              $ref: '../schemas/_core.msearch.yaml#/components/schemas/RequestItem'
            description: The request definitions (metadata-search request definition pairs), separated by newlines
      required: true
    msearch_template:
      content:
        application/x-ndjson:
          schema:
            type: array
            items:
              $ref: '../schemas/_core.msearch_template.yaml#/components/schemas/RequestItem'
            description: The request definitions (metadata-search request definition pairs), separated by newlines
      required: true
    mtermvectors:
      content:
        application/json:
          schema:
            type: object
            properties:
              docs:
                description: Array of existing or artificial documents.
                type: array
                items:
                  $ref: '../schemas/_core.mtermvectors.yaml#/components/schemas/Operation'
              ids:
                description: Simplified syntax to specify documents by their ID if they're in the same index.
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/Id'
            description: Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.
    put_script:
      content:
        application/json:
          schema:
            type: object
            properties:
              script:
                $ref: '../schemas/_common.yaml#/components/schemas/StoredScript'
            required:
              - script
            description: The document
      required: true
    rank_eval:
      content:
        application/json:
          schema:
            type: object
            properties:
              requests:
                description: A set of typical search requests, together with their provided ratings.
                type: array
                items:
                  $ref: '../schemas/_core.rank_eval.yaml#/components/schemas/RankEvalRequestItem'
              metric:
                $ref: '../schemas/_core.rank_eval.yaml#/components/schemas/RankEvalMetric'
            required:
              - requests
            description: The ranking evaluation search definition, including search requests, document ratings and ranking metric definition.
      required: true
    reindex:
      content:
        application/json:
          schema:
            type: object
            properties:
              conflicts:
                $ref: '../schemas/_common.yaml#/components/schemas/Conflicts'
              dest:
                $ref: '../schemas/_core.reindex.yaml#/components/schemas/Destination'
              max_docs:
                description: The maximum number of documents to reindex.
                type: number
              script:
                $ref: '../schemas/_common.yaml#/components/schemas/Script'
              size:
                type: number
              source:
                $ref: '../schemas/_core.reindex.yaml#/components/schemas/Source'
            required:
              - dest
              - source
            description: The search definition using the Query DSL and the prototype for the index request.
      required: true
    render_search_template:
      content:
        application/json:
          schema:
            type: object
            properties:
              file:
                type: string
              params:
                description: |-
                  Key-value pairs used to replace Mustache variables in the template.
                  The key is the variable name.
                  The value is the variable value.
                type: object
                additionalProperties:
                  type: object
              source:
                description: |-
                  An inline search template.
                  Supports the same parameters as the search API's request body.
                  These parameters also support Mustache variables.
                  If no `id` or `<templated-id>` is specified, this parameter is required.
                type: string
            description: The search definition template and its params
    scripts_painless_execute:
      content:
        application/json:
          schema:
            type: object
            properties:
              context:
                description: The context that the script should run in.
                type: string
              context_setup:
                $ref: '../schemas/_core.scripts_painless_execute.yaml#/components/schemas/PainlessContextSetup'
              script:
                $ref: '../schemas/_common.yaml#/components/schemas/InlineScript'
            description: The script to execute
    scroll:
      content:
        application/json:
          schema:
            type: object
            properties:
              scroll:
                $ref: '../schemas/_common.yaml#/components/schemas/Duration'
              scroll_id:
                $ref: '../schemas/_common.yaml#/components/schemas/ScrollId'
            required:
              - scroll_id
            description: The scroll ID if not passed by URL or query parameter.
    search:
      content:
        application/json:
          schema:
            type: object
            properties:
              aggregations:
                description: Defines the aggregations that are run as part of the search request.
                type: object
                additionalProperties:
                  $ref: '../schemas/_common.aggregations.yaml#/components/schemas/AggregationContainer'
              collapse:
                $ref: '../schemas/_core.search.yaml#/components/schemas/FieldCollapse'
              explain:
                description: If true, returns detailed information about score computation as part of a hit.
                type: boolean
              ext:
                description: Configuration of search extensions defined by OpenSearch plugins.
                type: object
                additionalProperties:
                  type: object
              from:
                description: |-
                  Starting document offset.
                  Needs to be non-negative.
                  By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.
                  To page through more hits, use the `search_after` parameter.
                type: number
              highlight:
                $ref: '../schemas/_core.search.yaml#/components/schemas/Highlight'
              track_total_hits:
                $ref: '../schemas/_core.search.yaml#/components/schemas/TrackHits'
              indices_boost:
                description: Boosts the _score of documents from specified indices.
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: number
              docvalue_fields:
                description: |-
                  Array of wildcard (`*`) patterns.
                  The request returns doc values for field names matching these patterns in the `hits.fields` property of the response.
                type: array
                items:
                  $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/FieldAndFormat'
              knn:
                description: Defines the approximate kNN search to run.
                oneOf:
                  - $ref: '../schemas/_common.yaml#/components/schemas/KnnQuery'
                  - type: array
                    items:
                      $ref: '../schemas/_common.yaml#/components/schemas/KnnQuery'
              rank:
                $ref: '../schemas/_common.yaml#/components/schemas/RankContainer'
              min_score:
                description: |-
                  Minimum `_score` for matching documents.
                  Documents with a lower `_score` are not included in the search results.
                type: number
              post_filter:
                $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/QueryContainer'
              profile:
                description: |-
                  Set to `true` to return detailed timing information about the execution of individual components in a search request.
                  NOTE: This is a debugging tool and adds significant overhead to search execution.
                type: boolean
              query:
                $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/QueryContainer'
              rescore:
                description: Can be used to improve precision by reordering just the top (for example 100 - 500) documents returned by the `query` and `post_filter` phases.
                oneOf:
                  - $ref: '../schemas/_core.search.yaml#/components/schemas/Rescore'
                  - type: array
                    items:
                      $ref: '../schemas/_core.search.yaml#/components/schemas/Rescore'
              script_fields:
                description: Retrieve a script evaluation (based on different fields) for each hit.
                type: object
                additionalProperties:
                  $ref: '../schemas/_common.yaml#/components/schemas/ScriptField'
              search_after:
                $ref: '../schemas/_common.yaml#/components/schemas/SortResults'
              size:
                description: |-
                  The number of hits to return.
                  By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.
                  To page through more hits, use the `search_after` parameter.
                type: number
              slice:
                $ref: '../schemas/_common.yaml#/components/schemas/SlicedScroll'
              sort:
                $ref: '../schemas/_common.yaml#/components/schemas/Sort'
              _source:
                $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfig'
              fields:
                description: |-
                  Array of wildcard (`*`) patterns.
                  The request returns values for field names matching these patterns in the `hits.fields` property of the response.
                type: array
                items:
                  $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/FieldAndFormat'
              suggest:
                $ref: '../schemas/_core.search.yaml#/components/schemas/Suggester'
              terminate_after:
                description: |-
                  Maximum number of documents to collect for each shard.
                  If a query reaches this limit, OpenSearch terminates the query early.
                  OpenSearch collects documents before sorting.
                  Use with caution.
                  OpenSearch applies this parameter to each shard handling the request.
                  When possible, let OpenSearch perform early termination automatically.
                  Avoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.
                  If set to `0` (default), the query does not terminate early.
                type: number
              timeout:
                description: |-
                  Specifies the period of time to wait for a response from each shard.
                  If no response is received before the timeout expires, the request fails and returns an error.
                  Defaults to no timeout.
                type: string
              track_scores:
                description: If true, calculate and return document scores, even if the scores are not used for sorting.
                type: boolean
              version:
                description: If true, returns document version as part of a hit.
                type: boolean
              seq_no_primary_term:
                description: If `true`, returns sequence number and primary term of the last modification of each hit.
                type: boolean
              stored_fields:
                $ref: '../schemas/_common.yaml#/components/schemas/Fields'
              pit:
                $ref: '../schemas/_core.search.yaml#/components/schemas/PointInTimeReference'
              runtime_mappings:
                $ref: '../schemas/_common.mapping.yaml#/components/schemas/RuntimeFields'
              stats:
                description: |-
                  Stats groups to associate with the search.
                  Each group maintains a statistics aggregation for its associated searches.
                  You can retrieve these stats using the indices stats API.
                type: array
                items:
                  type: string
            description: The search definition using the Query DSL
    search_template:
      content:
        application/json:
          schema:
            type: object
            properties:
              explain:
                description: If `true`, returns detailed information about score calculation as part of each hit.
                type: boolean
              id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
              params:
                description: |-
                  Key-value pairs used to replace Mustache variables in the template.
                  The key is the variable name.
                  The value is the variable value.
                type: object
                additionalProperties:
                  type: object
              profile:
                description: If `true`, the query execution is profiled.
                type: boolean
              source:
                description: |-
                  An inline search template. Supports the same parameters as the search API's
                  request body. Also supports Mustache variables. If no id is specified, this
                  parameter is required.
                type: string
            description: The search definition template and its params
      required: true
    termvectors:
      content:
        application/json:
          schema:
            type: object
            properties:
              doc:
                description: An artificial document (a document not present in the index) for which you want to retrieve term vectors.
                type: object
              filter:
                $ref: '../schemas/_core.termvectors.yaml#/components/schemas/Filter'
              per_field_analyzer:
                description: Overrides the default per-field analyzer.
                type: object
                additionalProperties:
                  type: string
            description: Define parameters and or supply a document to get termvectors for. See documentation.
    update:
      content:
        application/json:
          schema:
            type: object
            properties:
              detect_noop:
                description: |-
                  Set to false to disable setting 'result' in the response
                  to 'noop' if no change to the document occurred.
                type: boolean
              doc:
                description: A partial update to an existing document.
                type: object
              doc_as_upsert:
                description: Set to true to use the contents of 'doc' as the value of 'upsert'
                type: boolean
              script:
                $ref: '../schemas/_common.yaml#/components/schemas/Script'
              scripted_upsert:
                description: Set to true to execute the script whether or not the document exists.
                type: boolean
              _source:
                $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfig'
              upsert:
                description: |-
                  If the document does not already exist, the contents of 'upsert' are inserted as a
                  new document. If the document exists, the 'script' is executed.
                type: object
            description: The request definition requires either `script` or partial `doc`
      required: true
    update_by_query:
      content:
        application/json:
          schema:
            type: object
            properties:
              max_docs:
                description: The maximum number of documents to update.
                type: number
              query:
                $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/QueryContainer'
              script:
                $ref: '../schemas/_common.yaml#/components/schemas/Script'
              slice:
                $ref: '../schemas/_common.yaml#/components/schemas/SlicedScroll'
              conflicts:
                $ref: '../schemas/_common.yaml#/components/schemas/Conflicts'
            description: The search definition using the Query DSL
  responses:
    bulk@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: boolean
              items:
                type: array
                items:
                  type: object
                  additionalProperties:
                    $ref: '../schemas/_core.bulk.yaml#/components/schemas/ResponseItem'
                  minProperties: 1
                  maxProperties: 1
              took:
                type: number
              ingest_took:
                type: number
            required:
              - errors
              - items
              - took
    clear_scroll@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              succeeded:
                type: boolean
              num_freed:
                type: number
            required:
              - num_freed
              - succeeded
    count@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: number
              _shards:
                $ref: '../schemas/_common.yaml#/components/schemas/ShardStatistics'
            required:
              - _shards
              - count
    create@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    create_pit@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              pit_id:
                type: string
              _shards:
                $ref: '../schemas/_core._common.yaml#/components/schemas/ShardStatistics'
              creation_time:
                type: integer
                format: int64
    delete@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    delete_all_pits@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              pits:
                type: array
                items:
                  $ref: '../schemas/_core._common.yaml#/components/schemas/PitsDetailsDeleteAll'
    delete_by_query@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              batches:
                type: number
              deleted:
                type: number
              failures:
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/BulkIndexByScrollFailure'
              noops:
                type: number
              requests_per_second:
                type: number
              retries:
                $ref: '../schemas/_common.yaml#/components/schemas/Retries'
              slice_id:
                type: number
              task:
                $ref: '../schemas/_common.yaml#/components/schemas/TaskId'
              throttled:
                $ref: '../schemas/_common.yaml#/components/schemas/Duration'
              throttled_millis:
                $ref: '../schemas/_common.yaml#/components/schemas/DurationValueUnitMillis'
              throttled_until:
                $ref: '../schemas/_common.yaml#/components/schemas/Duration'
              throttled_until_millis:
                $ref: '../schemas/_common.yaml#/components/schemas/DurationValueUnitMillis'
              timed_out:
                type: boolean
              took:
                $ref: '../schemas/_common.yaml#/components/schemas/DurationValueUnitMillis'
              total:
                type: number
              version_conflicts:
                type: number
    delete_by_query_rethrottle@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/tasks._common.yaml#/components/schemas/TaskListResponseBase'
    delete_pit@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              pits:
                type: array
                items:
                  $ref: '../schemas/_core._common.yaml#/components/schemas/DeletedPit'
    delete_script@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/AcknowledgedResponseBase'
    exists@200:
      description: ''
      content:
        application/json: {}
    exists_source@200:
      description: ''
      content:
        application/json: {}
    explain@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              _index:
                $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
              _id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
              matched:
                type: boolean
              explanation:
                $ref: '../schemas/_core.explain.yaml#/components/schemas/ExplanationDetail'
              get:
                $ref: '../schemas/_common.yaml#/components/schemas/InlineGet'
            required:
              - _id
              - _index
              - matched
    field_caps@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              indices:
                $ref: '../schemas/_common.yaml#/components/schemas/Indices'
              fields:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '../schemas/_core.field_caps.yaml#/components/schemas/FieldCapability'
            required:
              - fields
              - indices
    get@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_core.get.yaml#/components/schemas/GetResult'
    get_all_pits@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              pits:
                type: array
                items:
                  $ref: '../schemas/_core._common.yaml#/components/schemas/PitDetail'
    get_script@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              _id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
              found:
                type: boolean
              script:
                $ref: '../schemas/_common.yaml#/components/schemas/StoredScript'
            required:
              - _id
              - found
    get_script_context@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              contexts:
                type: array
                items:
                  $ref: '../schemas/_core.get_script_context.yaml#/components/schemas/Context'
            required:
              - contexts
    get_script_languages@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              language_contexts:
                type: array
                items:
                  $ref: '../schemas/_core.get_script_languages.yaml#/components/schemas/LanguageContext'
              types_allowed:
                type: array
                items:
                  type: string
            required:
              - language_contexts
              - types_allowed
    get_source@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
    index@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    index@201:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    info@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              cluster_name:
                $ref: '../schemas/_common.yaml#/components/schemas/Name'
              cluster_uuid:
                $ref: '../schemas/_common.yaml#/components/schemas/Uuid'
              name:
                $ref: '../schemas/_common.yaml#/components/schemas/Name'
              tagline:
                type: string
              version:
                $ref: '../schemas/_common.yaml#/components/schemas/OpenSearchVersionInfo'
            required:
              - cluster_name
              - cluster_uuid
              - name
              - tagline
              - version
    mget@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              docs:
                type: array
                items:
                  $ref: '../schemas/_core.mget.yaml#/components/schemas/ResponseItem'
            required:
              - docs
    msearch@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_core.msearch.yaml#/components/schemas/MultiSearchResult'
    msearch_template@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_core.msearch.yaml#/components/schemas/MultiSearchResult'
    mtermvectors@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              docs:
                type: array
                items:
                  $ref: '../schemas/_core.mtermvectors.yaml#/components/schemas/TermVectorsResult'
            required:
              - docs
    ping@200:
      description: ''
      content:
        application/json: {}
    put_script@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/AcknowledgedResponseBase'
    rank_eval@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              metric_score:
                description: The overall evaluation quality calculated by the defined metric
                type: number
              details:
                description: The details section contains one entry for every query in the original requests section, keyed by the search request id
                type: object
                additionalProperties:
                  $ref: '../schemas/_core.rank_eval.yaml#/components/schemas/RankEvalMetricDetail'
              failures:
                type: object
                additionalProperties:
                  type: object
            required:
              - details
              - failures
              - metric_score
    reindex@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              batches:
                type: number
              created:
                type: number
              deleted:
                type: number
              failures:
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/BulkIndexByScrollFailure'
              noops:
                type: number
              retries:
                $ref: '../schemas/_common.yaml#/components/schemas/Retries'
              requests_per_second:
                type: number
              slice_id:
                type: number
              task:
                $ref: '../schemas/_common.yaml#/components/schemas/TaskId'
              throttled_millis:
                $ref: '../schemas/_common.yaml#/components/schemas/EpochTimeUnitMillis'
              throttled_until_millis:
                $ref: '../schemas/_common.yaml#/components/schemas/EpochTimeUnitMillis'
              timed_out:
                type: boolean
              took:
                $ref: '../schemas/_common.yaml#/components/schemas/DurationValueUnitMillis'
              total:
                type: number
              updated:
                type: number
              version_conflicts:
                type: number
    reindex_rethrottle@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              nodes:
                type: object
                additionalProperties:
                  $ref: '../schemas/_core.reindex_rethrottle.yaml#/components/schemas/ReindexNode'
            required:
              - nodes
    render_search_template@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              template_output:
                type: object
                additionalProperties:
                  type: object
            required:
              - template_output
    scripts_painless_execute@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
            required:
              - result
    scroll@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_core.search.yaml#/components/schemas/ResponseBody'
    search@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_core.search.yaml#/components/schemas/ResponseBody'
    search_shards@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              nodes:
                type: object
                additionalProperties:
                  $ref: '../schemas/_common.yaml#/components/schemas/NodeAttributes'
              shards:
                type: array
                items:
                  type: array
                  items:
                    $ref: '../schemas/_common.yaml#/components/schemas/NodeShard'
              indices:
                type: object
                additionalProperties:
                  $ref: '../schemas/_core.search_shards.yaml#/components/schemas/ShardStoreIndex'
            required:
              - indices
              - nodes
              - shards
    search_template@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              took:
                type: number
              timed_out:
                type: boolean
              _shards:
                $ref: '../schemas/_common.yaml#/components/schemas/ShardStatistics'
              hits:
                $ref: '../schemas/_core.search.yaml#/components/schemas/HitsMetadata'
              aggregations:
                type: object
                additionalProperties:
                  $ref: '../schemas/_common.aggregations.yaml#/components/schemas/Aggregate'
              _clusters:
                $ref: '../schemas/_common.yaml#/components/schemas/ClusterStatistics'
              fields:
                type: object
                additionalProperties:
                  type: object
              max_score:
                type: number
              num_reduce_phases:
                type: number
              profile:
                $ref: '../schemas/_core.search.yaml#/components/schemas/Profile'
              pit_id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
              _scroll_id:
                $ref: '../schemas/_common.yaml#/components/schemas/ScrollId'
              suggest:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '../schemas/_core.search.yaml#/components/schemas/Suggest'
              terminated_early:
                type: boolean
            required:
              - _shards
              - hits
              - timed_out
              - took
    termvectors@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              found:
                type: boolean
              _id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
              _index:
                $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
              term_vectors:
                type: object
                additionalProperties:
                  $ref: '../schemas/_core.termvectors.yaml#/components/schemas/TermVector'
              took:
                type: number
              _version:
                $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
            required:
              - _id
              - _index
              - _version
              - found
              - took
    update@200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '../schemas/_core.update.yaml#/components/schemas/UpdateWriteResponseBase'
    update_by_query@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              batches:
                type: number
              failures:
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/BulkIndexByScrollFailure'
              noops:
                type: number
              deleted:
                type: number
              requests_per_second:
                type: number
              retries:
                $ref: '../schemas/_common.yaml#/components/schemas/Retries'
              task:
                $ref: '../schemas/_common.yaml#/components/schemas/TaskId'
              timed_out:
                type: boolean
              took:
                $ref: '../schemas/_common.yaml#/components/schemas/DurationValueUnitMillis'
              total:
                type: number
              updated:
                type: number
              version_conflicts:
                type: number
              throttled:
                $ref: '../schemas/_common.yaml#/components/schemas/Duration'
              throttled_millis:
                $ref: '../schemas/_common.yaml#/components/schemas/DurationValueUnitMillis'
              throttled_until:
                $ref: '../schemas/_common.yaml#/components/schemas/Duration'
              throttled_until_millis:
                $ref: '../schemas/_common.yaml#/components/schemas/DurationValueUnitMillis'
    update_by_query_rethrottle@200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              nodes:
                type: object
                additionalProperties:
                  $ref: '../schemas/_core.update_by_query_rethrottle.yaml#/components/schemas/UpdateByQueryRethrottleNode'
            required:
              - nodes
  parameters:
    bulk::path.index:
      in: path
      name: index
      description: Name of the data stream, index, or index alias to perform bulk actions on.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    bulk::query._source:
      in: query
      name: _source
      description: '`true` or `false` to return the `_source` field or not, or a list of fields to return.'
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    bulk::query._source_excludes:
      in: query
      name: _source_excludes
      description: A comma-separated list of source fields to exclude from the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    bulk::query._source_includes:
      in: query
      name: _source_includes
      description: A comma-separated list of source fields to include in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    bulk::query.pipeline:
      in: query
      name: pipeline
      description: |-
        ID of the pipeline to use to preprocess incoming documents.
        If the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.
        If a final pipeline is configured it will always run, regardless of the value of this parameter.
      schema:
        type: string
      style: form
    bulk::query.refresh:
      in: query
      name: refresh
      description: |-
        If `true`, OpenSearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.
        Valid values: `true`, `false`, `wait_for`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Refresh'
      style: form
    bulk::query.require_alias:
      in: query
      name: require_alias
      description: If `true`, the request's actions must target an index alias.
      schema:
        type: boolean
        default: false
      style: form
    bulk::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    bulk::query.timeout:
      in: query
      name: timeout
      description: 'Period each action waits for the following operations: automatic index creation, dynamic mapping updates, waiting for active shards.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    bulk::query.type:
      name: type
      in: query
      description: Default document type for items which don't provide one.
      schema:
        type: string
        description: Default document type for items which don't provide one.
    bulk::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operation.
        Set to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    clear_scroll::path.scroll_id:
      in: path
      name: scroll_id
      description: |-
        Comma-separated list of scroll IDs to clear.
        To clear all scroll IDs, use `_all`.
      required: true
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ScrollIds'
      style: simple
    count::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases to search.
        Supports wildcards (`*`).
        To search all data streams and indices, omit this parameter or use `*` or `_all`.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    count::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: |-
        If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.
        This behavior applies even if the request targets other open indices.
      schema:
        type: boolean
      style: form
    count::query.analyze_wildcard:
      in: query
      name: analyze_wildcard
      description: |-
        If `true`, wildcard and prefix queries are analyzed.
        This parameter can only be used when the `q` query string parameter is specified.
      schema:
        type: boolean
        default: false
      style: form
    count::query.analyzer:
      in: query
      name: analyzer
      description: |-
        Analyzer to use for the query string.
        This parameter can only be used when the `q` query string parameter is specified.
      schema:
        type: string
      style: form
    count::query.default_operator:
      in: query
      name: default_operator
      description: |-
        The default operator for query string query: `AND` or `OR`.
        This parameter can only be used when the `q` query string parameter is specified.
      schema:
        $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/Operator'
      style: form
    count::query.df:
      in: query
      name: df
      description: |-
        Field to use as default where no field prefix is given in the query string.
        This parameter can only be used when the `q` query string parameter is specified.
      schema:
        type: string
      style: form
    count::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: |-
        Type of index that wildcard patterns can match.
        If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.
        Supports comma-separated values, such as `open,hidden`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    count::query.ignore_throttled:
      in: query
      name: ignore_throttled
      description: If `true`, concrete, expanded or aliased indices are ignored when frozen.
      schema:
        type: boolean
      style: form
    count::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `false`, the request returns an error if it targets a missing or closed index.
      schema:
        type: boolean
      style: form
    count::query.lenient:
      in: query
      name: lenient
      description: If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.
      schema:
        type: boolean
      style: form
    count::query.min_score:
      in: query
      name: min_score
      description: Sets the minimum `_score` value that documents must have to be included in the result.
      schema:
        type: number
      style: form
    count::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    count::query.q:
      in: query
      name: q
      description: Query in the Lucene query string syntax.
      schema:
        type: string
      style: form
    count::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    count::query.terminate_after:
      in: query
      name: terminate_after
      description: |-
        Maximum number of documents to collect for each shard.
        If a query reaches this limit, OpenSearch terminates the query early.
        OpenSearch collects documents before sorting.
      schema:
        type: number
      style: form
    create::path.id:
      in: path
      name: id
      description: Unique identifier for the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    create::path.index:
      in: path
      name: index
      description: |-
        Name of the data stream or index to target.
        If the target doesn't exist and matches the name or wildcard (`*`) pattern of an index template with a `data_stream` definition, this request creates the data stream.
        If the target doesn't exist and doesn't match a data stream template, this request creates the index.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    create::query.pipeline:
      in: query
      name: pipeline
      description: |-
        ID of the pipeline to use to preprocess incoming documents.
        If the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.
        If a final pipeline is configured it will always run, regardless of the value of this parameter.
      schema:
        type: string
      style: form
    create::query.refresh:
      in: query
      name: refresh
      description: |-
        If `true`, OpenSearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.
        Valid values: `true`, `false`, `wait_for`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Refresh'
      style: form
    create::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    create::query.timeout:
      in: query
      name: timeout
      description: 'Period the request waits for the following operations: automatic index creation, dynamic mapping updates, waiting for active shards.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    create::query.version:
      in: query
      name: version
      description: |-
        Explicit version number for concurrency control.
        The specified version must match the current version of the document for the request to succeed.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    create::query.version_type:
      in: query
      name: version_type
      description: 'Specific version type: `external`, `external_gte`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    create::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operation.
        Set to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    create_pit::path.index:
      name: index
      in: path
      description: Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.
      schema:
        type: array
        description: Comma-separated list of indices; use `_all` or empty string to perform the operation on all indices.
        items:
          type: string
      required: true
    create_pit::query.allow_partial_pit_creation:
      name: allow_partial_pit_creation
      in: query
      description: Allow if point in time can be created with partial failures.
      schema:
        type: boolean
        description: Allow if point in time can be created with partial failures.
    create_pit::query.expand_wildcards:
      name: expand_wildcards
      in: query
      description: Whether to expand wildcard expression to concrete indices that are open, closed or both.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
    create_pit::query.keep_alive:
      name: keep_alive
      in: query
      description: Specify the keep alive for point in time.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
    create_pit::query.preference:
      name: preference
      in: query
      description: Specify the node or shard the operation should be performed on.
      schema:
        type: string
        default: random
        description: Specify the node or shard the operation should be performed on.
    create_pit::query.routing:
      name: routing
      in: query
      description: Comma-separated list of specific routing values.
      style: form
      schema:
        type: array
        items:
          type: string
        description: Comma-separated list of specific routing values.
      explode: true
    delete::path.id:
      in: path
      name: id
      description: Unique identifier for the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    delete::path.index:
      in: path
      name: index
      description: Name of the target index.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    delete::query.if_primary_term:
      in: query
      name: if_primary_term
      description: Only perform the operation if the document has this primary term.
      schema:
        type: number
      style: form
    delete::query.if_seq_no:
      in: query
      name: if_seq_no
      description: Only perform the operation if the document has this sequence number.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SequenceNumber'
      style: form
    delete::query.refresh:
      in: query
      name: refresh
      description: |-
        If `true`, OpenSearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.
        Valid values: `true`, `false`, `wait_for`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Refresh'
      style: form
    delete::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    delete::query.timeout:
      in: query
      name: timeout
      description: Period to wait for active shards.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    delete::query.version:
      in: query
      name: version
      description: |-
        Explicit version number for concurrency control.
        The specified version must match the current version of the document for the request to succeed.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    delete::query.version_type:
      in: query
      name: version_type
      description: 'Specific version type: `external`, `external_gte`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    delete::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operation.
        Set to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    delete_by_query::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases to search.
        Supports wildcards (`*`).
        To search all data streams or indices, omit this parameter or use `*` or `_all`.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    delete_by_query::query._source:
      name: _source
      in: query
      description: True or false to return the _source field or not, or a list of fields to return.
      style: form
      schema:
        type: array
        items:
          type: string
        description: True or false to return the _source field or not, or a list of fields to return.
      explode: true
    delete_by_query::query._source_excludes:
      name: _source_excludes
      in: query
      description: List of fields to exclude from the returned _source field.
      style: form
      schema:
        type: array
        items:
          type: string
        description: List of fields to exclude from the returned _source field.
      explode: true
    delete_by_query::query._source_includes:
      name: _source_includes
      in: query
      description: List of fields to extract and return from the _source field.
      style: form
      schema:
        type: array
        items:
          type: string
        description: List of fields to extract and return from the _source field.
      explode: true
    delete_by_query::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: |-
        If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.
        This behavior applies even if the request targets other open indices.
        For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.
      schema:
        type: boolean
      style: form
    delete_by_query::query.analyze_wildcard:
      in: query
      name: analyze_wildcard
      description: If `true`, wildcard and prefix queries are analyzed.
      schema:
        type: boolean
        default: false
      style: form
    delete_by_query::query.analyzer:
      in: query
      name: analyzer
      description: Analyzer to use for the query string.
      schema:
        type: string
      style: form
    delete_by_query::query.conflicts:
      in: query
      name: conflicts
      description: 'What to do if delete by query hits version conflicts: `abort` or `proceed`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Conflicts'
      style: form
    delete_by_query::query.default_operator:
      in: query
      name: default_operator
      description: 'The default operator for query string query: `AND` or `OR`.'
      schema:
        $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/Operator'
      style: form
    delete_by_query::query.df:
      in: query
      name: df
      description: Field to use as default where no field prefix is given in the query string.
      schema:
        type: string
      style: form
    delete_by_query::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: |-
        Type of index that wildcard patterns can match.
        If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.
        Supports comma-separated values, such as `open,hidden`. Valid values are: `all`, `open`, `closed`, `hidden`, `none`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    delete_by_query::query.from:
      in: query
      name: from
      description: Starting offset.
      schema:
        type: number
        default: 0
      style: form
    delete_by_query::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `false`, the request returns an error if it targets a missing or closed index.
      schema:
        type: boolean
      style: form
    delete_by_query::query.lenient:
      in: query
      name: lenient
      description: If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.
      schema:
        type: boolean
      style: form
    delete_by_query::query.max_docs:
      in: query
      name: max_docs
      description: |-
        Maximum number of documents to process.
        Defaults to all documents.
      schema:
        type: number
      style: form
    delete_by_query::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    delete_by_query::query.q:
      in: query
      name: q
      description: Query in the Lucene query string syntax.
      schema:
        type: string
      style: form
    delete_by_query::query.refresh:
      in: query
      name: refresh
      description: If `true`, OpenSearch refreshes all shards involved in the delete by query after the request completes.
      schema:
        type: boolean
      style: form
    delete_by_query::query.request_cache:
      in: query
      name: request_cache
      description: |-
        If `true`, the request cache is used for this request.
        Defaults to the index-level setting.
      schema:
        type: boolean
      style: form
    delete_by_query::query.requests_per_second:
      in: query
      name: requests_per_second
      description: The throttle for this request in sub-requests per second.
      schema:
        type: number
        default: 0
      style: form
    delete_by_query::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    delete_by_query::query.scroll:
      in: query
      name: scroll
      description: Period to retain the search context for scrolling.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    delete_by_query::query.scroll_size:
      in: query
      name: scroll_size
      description: Size of the scroll request that powers the operation.
      schema:
        type: number
        default: 100
      style: form
    delete_by_query::query.search_timeout:
      in: query
      name: search_timeout
      description: |-
        Explicit timeout for each search request.
        Defaults to no timeout.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    delete_by_query::query.search_type:
      in: query
      name: search_type
      description: |-
        The type of the search operation.
        Available options: `query_then_fetch`, `dfs_query_then_fetch`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SearchType'
      style: form
    delete_by_query::query.size:
      name: size
      in: query
      description: Deprecated, please use `max_docs` instead.
      schema:
        type: integer
        description: Deprecated, please use `max_docs` instead.
        format: int32
    delete_by_query::query.slices:
      in: query
      name: slices
      description: The number of slices this task should be divided into.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Slices'
      style: form
      x-default: '1'
    delete_by_query::query.sort:
      in: query
      name: sort
      description: A comma-separated list of <field>:<direction> pairs.
      schema:
        type: array
        items:
          type: string
      style: form
    delete_by_query::query.stats:
      in: query
      name: stats
      description: Specific `tag` of the request for logging and statistical purposes.
      schema:
        type: array
        items:
          type: string
      style: form
    delete_by_query::query.terminate_after:
      in: query
      name: terminate_after
      description: |-
        Maximum number of documents to collect for each shard.
        If a query reaches this limit, OpenSearch terminates the query early.
        OpenSearch collects documents before sorting.
        Use with caution.
        OpenSearch applies this parameter to each shard handling the request.
        When possible, let OpenSearch perform early termination automatically.
        Avoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.
      schema:
        type: number
      style: form
    delete_by_query::query.timeout:
      in: query
      name: timeout
      description: Period each deletion request waits for active shards.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-default: 1m
    delete_by_query::query.version:
      in: query
      name: version
      description: If `true`, returns the document version as part of a hit.
      schema:
        type: boolean
      style: form
    delete_by_query::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operation.
        Set to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    delete_by_query::query.wait_for_completion:
      in: query
      name: wait_for_completion
      description: If `true`, the request blocks until the operation is complete.
      schema:
        type: boolean
        default: true
      style: form
    delete_by_query_rethrottle::path.task_id:
      in: path
      name: task_id
      description: The ID for the task.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/TaskId'
      style: simple
    delete_by_query_rethrottle::query.requests_per_second:
      in: query
      name: requests_per_second
      description: The throttle for this request in sub-requests per second.
      schema:
        type: number
      style: form
    delete_script::path.id:
      in: path
      name: id
      description: Identifier for the stored script or search template.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    delete_script::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    delete_script::query.master_timeout:
      in: query
      name: master_timeout
      description: |-
        Period to wait for a connection to the master node.
        If no response is received before the timeout expires, the request fails and returns an error.
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: 2.0.0
      x-deprecation-message: To promote inclusive language, use 'cluster_manager_timeout' instead.
    delete_script::query.timeout:
      in: query
      name: timeout
      description: |-
        Period to wait for a response.
        If no response is received before the timeout expires, the request fails and returns an error.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    exists::path.id:
      in: path
      name: id
      description: Identifier of the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    exists::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases.
        Supports wildcards (`*`).
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    exists::query._source:
      in: query
      name: _source
      description: '`true` or `false` to return the `_source` field or not, or a list of fields to return.'
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    exists::query._source_excludes:
      in: query
      name: _source_excludes
      description: A comma-separated list of source fields to exclude in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    exists::query._source_includes:
      in: query
      name: _source_includes
      description: A comma-separated list of source fields to include in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    exists::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    exists::query.realtime:
      in: query
      name: realtime
      description: If `true`, the request is real-time as opposed to near-real-time.
      schema:
        type: boolean
      style: form
    exists::query.refresh:
      in: query
      name: refresh
      description: If `true`, OpenSearch refreshes all shards involved in the delete by query after the request completes.
      schema:
        type: boolean
      style: form
    exists::query.routing:
      in: query
      name: routing
      description: Target the specified primary shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    exists::query.stored_fields:
      in: query
      name: stored_fields
      description: |-
        List of stored fields to return as part of a hit.
        If no fields are specified, no stored fields are included in the response.
        If this field is specified, the `_source` parameter defaults to false.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    exists::query.version:
      in: query
      name: version
      description: |-
        Explicit version number for concurrency control.
        The specified version must match the current version of the document for the request to succeed.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    exists::query.version_type:
      in: query
      name: version_type
      description: 'Specific version type: `external`, `external_gte`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    exists_source::path.id:
      in: path
      name: id
      description: Identifier of the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    exists_source::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases.
        Supports wildcards (`*`).
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    exists_source::query._source:
      in: query
      name: _source
      description: '`true` or `false` to return the `_source` field or not, or a list of fields to return.'
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    exists_source::query._source_excludes:
      in: query
      name: _source_excludes
      description: A comma-separated list of source fields to exclude in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    exists_source::query._source_includes:
      in: query
      name: _source_includes
      description: A comma-separated list of source fields to include in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    exists_source::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    exists_source::query.realtime:
      in: query
      name: realtime
      description: If true, the request is real-time as opposed to near-real-time.
      schema:
        type: boolean
      style: form
    exists_source::query.refresh:
      in: query
      name: refresh
      description: If `true`, OpenSearch refreshes all shards involved in the delete by query after the request completes.
      schema:
        type: boolean
      style: form
    exists_source::query.routing:
      in: query
      name: routing
      description: Target the specified primary shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    exists_source::query.version:
      in: query
      name: version
      description: |-
        Explicit version number for concurrency control.
        The specified version must match the current version of the document for the request to succeed.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    exists_source::query.version_type:
      in: query
      name: version_type
      description: 'Specific version type: `external`, `external_gte`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    explain::path.id:
      in: path
      name: id
      description: Defines the document ID.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    explain::path.index:
      in: path
      name: index
      description: |-
        Index names used to limit the request.
        Only a single index name can be provided to this parameter.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    explain::query._source:
      in: query
      name: _source
      description: True or false to return the `_source` field or not, or a list of fields to return.
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    explain::query._source_excludes:
      in: query
      name: _source_excludes
      description: A comma-separated list of source fields to exclude from the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    explain::query._source_includes:
      in: query
      name: _source_includes
      description: A comma-separated list of source fields to include in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    explain::query.analyze_wildcard:
      in: query
      name: analyze_wildcard
      description: If `true`, wildcard and prefix queries are analyzed.
      schema:
        type: boolean
        default: false
      style: form
    explain::query.analyzer:
      in: query
      name: analyzer
      description: |-
        Analyzer to use for the query string.
        This parameter can only be used when the `q` query string parameter is specified.
      schema:
        type: string
      style: form
    explain::query.default_operator:
      in: query
      name: default_operator
      description: 'The default operator for query string query: `AND` or `OR`.'
      schema:
        $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/Operator'
      style: form
    explain::query.df:
      in: query
      name: df
      description: Field to use as default where no field prefix is given in the query string.
      schema:
        type: string
        default: _all
      style: form
    explain::query.lenient:
      in: query
      name: lenient
      description: If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.
      schema:
        type: boolean
      style: form
    explain::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    explain::query.q:
      in: query
      name: q
      description: Query in the Lucene query string syntax.
      schema:
        type: string
      style: form
    explain::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    explain::query.stored_fields:
      in: query
      name: stored_fields
      description: A comma-separated list of stored fields to return in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    field_caps::path.index:
      in: path
      name: index
      description: Comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (*). To target all data streams and indices, omit this parameter or use * or _all.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    field_caps::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: |-
        If false, the request returns an error if any wildcard expression, index alias,
        or `_all` value targets only missing or closed indices. This behavior applies even if the request targets other open indices. For example, a request
        targeting `foo*,bar*` returns an error if an index starts with foo but no index starts with bar.
      schema:
        type: boolean
      style: form
    field_caps::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: Type of index that wildcard patterns can match. If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams. Supports comma-separated values, such as `open,hidden`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    field_caps::query.fields:
      in: query
      name: fields
      description: Comma-separated list of fields to retrieve capabilities for. Wildcard (`*`) expressions are supported.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    field_caps::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `true`, missing or closed indices are not included in the response.
      schema:
        type: boolean
      style: form
    field_caps::query.include_unmapped:
      in: query
      name: include_unmapped
      description: If true, unmapped fields are included in the response.
      schema:
        type: boolean
        default: false
      style: form
    get::path.id:
      in: path
      name: id
      description: Unique identifier of the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    get::path.index:
      in: path
      name: index
      description: Name of the index that contains the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    get::query._source:
      in: query
      name: _source
      description: True or false to return the _source field or not, or a list of fields to return.
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    get::query._source_excludes:
      in: query
      name: _source_excludes
      description: A comma-separated list of source fields to exclude in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    get::query._source_includes:
      in: query
      name: _source_includes
      description: A comma-separated list of source fields to include in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    get::query.preference:
      in: query
      name: preference
      description: Specifies the node or shard the operation should be performed on. Random by default.
      schema:
        type: string
        default: random
      style: form
    get::query.realtime:
      in: query
      name: realtime
      description: If `true`, the request is real-time as opposed to near-real-time.
      schema:
        type: boolean
      style: form
    get::query.refresh:
      in: query
      name: refresh
      description: If true, OpenSearch refreshes the affected shards to make this operation visible to search. If false, do nothing with refreshes.
      schema:
        type: boolean
      style: form
    get::query.routing:
      in: query
      name: routing
      description: Target the specified primary shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    get::query.stored_fields:
      in: query
      name: stored_fields
      description: |-
        List of stored fields to return as part of a hit.
        If no fields are specified, no stored fields are included in the response.
        If this field is specified, the `_source` parameter defaults to false.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    get::query.version:
      in: query
      name: version
      description: Explicit version number for concurrency control. The specified version must match the current version of the document for the request to succeed.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    get::query.version_type:
      in: query
      name: version_type
      description: 'Specific version type: internal, external, external_gte.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    get_script::path.id:
      in: path
      name: id
      description: Identifier for the stored script or search template.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    get_script::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    get_script::query.master_timeout:
      in: query
      name: master_timeout
      description: Specify timeout for connection to master
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: 2.0.0
      x-deprecation-message: To promote inclusive language, use 'cluster_manager_timeout' instead.
    get_source::path.id:
      in: path
      name: id
      description: Unique identifier of the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    get_source::path.index:
      in: path
      name: index
      description: Name of the index that contains the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    get_source::query._source:
      in: query
      name: _source
      description: True or false to return the _source field or not, or a list of fields to return.
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    get_source::query._source_excludes:
      in: query
      name: _source_excludes
      description: A comma-separated list of source fields to exclude in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    get_source::query._source_includes:
      in: query
      name: _source_includes
      description: A comma-separated list of source fields to include in the response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    get_source::query.preference:
      in: query
      name: preference
      description: Specifies the node or shard the operation should be performed on. Random by default.
      schema:
        type: string
        default: random
      style: form
    get_source::query.realtime:
      in: query
      name: realtime
      description: Boolean) If true, the request is real-time as opposed to near-real-time.
      schema:
        type: boolean
      style: form
    get_source::query.refresh:
      in: query
      name: refresh
      description: If true, OpenSearch refreshes the affected shards to make this operation visible to search. If false, do nothing with refreshes.
      schema:
        type: boolean
      style: form
    get_source::query.routing:
      in: query
      name: routing
      description: Target the specified primary shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    get_source::query.version:
      in: query
      name: version
      description: Explicit version number for concurrency control. The specified version must match the current version of the document for the request to succeed.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    get_source::query.version_type:
      in: query
      name: version_type
      description: 'Specific version type: internal, external, external_gte.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    index::path.id:
      in: path
      name: id
      description: Unique identifier for the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    index::path.index:
      in: path
      name: index
      description: Name of the data stream or index to target.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    index::query.if_primary_term:
      in: query
      name: if_primary_term
      description: Only perform the operation if the document has this primary term.
      schema:
        type: number
      style: form
    index::query.if_seq_no:
      in: query
      name: if_seq_no
      description: Only perform the operation if the document has this sequence number.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SequenceNumber'
      style: form
    index::query.op_type:
      in: query
      name: op_type
      description: |-
        Set to create to only index the document if it does not already exist (put if absent).
        If a document with the specified `_id` already exists, the indexing operation will fail.
        Same as using the `<index>/_create` endpoint.
        Valid values: `index`, `create`.
        If document id is specified, it defaults to `index`.
        Otherwise, it defaults to `create`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/OpType'
      style: form
    index::query.pipeline:
      in: query
      name: pipeline
      description: |-
        ID of the pipeline to use to preprocess incoming documents.
        If the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.
        If a final pipeline is configured it will always run, regardless of the value of this parameter.
      schema:
        type: string
      style: form
    index::query.refresh:
      in: query
      name: refresh
      description: |-
        If `true`, OpenSearch refreshes the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` do nothing with refreshes.
        Valid values: `true`, `false`, `wait_for`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Refresh'
      style: form
    index::query.require_alias:
      in: query
      name: require_alias
      description: If `true`, the destination must be an index alias.
      schema:
        type: boolean
        default: false
      style: form
    index::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    index::query.timeout:
      in: query
      name: timeout
      description: 'Period the request waits for the following operations: automatic index creation, dynamic mapping updates, waiting for active shards.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    index::query.version:
      in: query
      name: version
      description: |-
        Explicit version number for concurrency control.
        The specified version must match the current version of the document for the request to succeed.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    index::query.version_type:
      in: query
      name: version_type
      description: 'Specific version type: `external`, `external_gte`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    index::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operation.
        Set to all or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    mget::path.index:
      in: path
      name: index
      description: Name of the index to retrieve documents from when `ids` are specified, or when a document in the `docs` array does not specify an index.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    mget::query._source:
      in: query
      name: _source
      description: True or false to return the `_source` field or not, or a list of fields to return.
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    mget::query._source_excludes:
      in: query
      name: _source_excludes
      description: |-
        A comma-separated list of source fields to exclude from the response.
        You can also use this parameter to exclude fields from the subset specified in `_source_includes` query parameter.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    mget::query._source_includes:
      in: query
      name: _source_includes
      description: |-
        A comma-separated list of source fields to include in the response.
        If this parameter is specified, only these source fields are returned. You can exclude fields from this subset using the `_source_excludes` query parameter.
        If the `_source` parameter is `false`, this parameter is ignored.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    mget::query.preference:
      in: query
      name: preference
      description: Specifies the node or shard the operation should be performed on. Random by default.
      schema:
        type: string
        default: random
      style: form
    mget::query.realtime:
      in: query
      name: realtime
      description: If `true`, the request is real-time as opposed to near-real-time.
      schema:
        type: boolean
      style: form
    mget::query.refresh:
      in: query
      name: refresh
      description: If `true`, the request refreshes relevant shards before retrieving documents.
      schema:
        type: boolean
      style: form
    mget::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    mget::query.stored_fields:
      in: query
      name: stored_fields
      description: If `true`, retrieves the document fields stored in the index rather than the document `_source`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    msearch::path.index:
      in: path
      name: index
      description: Comma-separated list of data streams, indices, and index aliases to search.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    msearch::query.ccs_minimize_roundtrips:
      in: query
      name: ccs_minimize_roundtrips
      description: If true, network roundtrips between the coordinating node and remote clusters are minimized for cross-cluster search requests.
      schema:
        type: boolean
        default: true
      style: form
    msearch::query.max_concurrent_searches:
      in: query
      name: max_concurrent_searches
      description: Maximum number of concurrent searches the multi search API can execute.
      schema:
        type: number
      style: form
    msearch::query.max_concurrent_shard_requests:
      in: query
      name: max_concurrent_shard_requests
      description: Maximum number of concurrent shard requests that each sub-search request executes per node.
      schema:
        type: number
        default: 5
      style: form
    msearch::query.pre_filter_shard_size:
      in: query
      name: pre_filter_shard_size
      description: Defines a threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method i.e., if date filters are mandatory to match but the shard bounds and the query are disjoint.
      schema:
        type: number
      style: form
    msearch::query.rest_total_hits_as_int:
      in: query
      name: rest_total_hits_as_int
      description: If true, hits.total are returned as an integer in the response. Defaults to false, which returns an object.
      schema:
        type: boolean
        default: false
      style: form
    msearch::query.search_type:
      in: query
      name: search_type
      description: Indicates whether global term and document frequencies should be used when scoring returned documents.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SearchType'
      style: form
    msearch::query.typed_keys:
      in: query
      name: typed_keys
      description: Specifies whether aggregation and suggester names should be prefixed by their respective types in the response.
      schema:
        type: boolean
      style: form
    msearch_template::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases to search.
        Supports wildcards (`*`).
        To search all data streams and indices, omit this parameter or use `*`.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    msearch_template::query.ccs_minimize_roundtrips:
      in: query
      name: ccs_minimize_roundtrips
      description: If `true`, network round-trips are minimized for cross-cluster search requests.
      schema:
        type: boolean
        default: true
      style: form
    msearch_template::query.max_concurrent_searches:
      in: query
      name: max_concurrent_searches
      description: Maximum number of concurrent searches the API can run.
      schema:
        type: number
      style: form
    msearch_template::query.rest_total_hits_as_int:
      in: query
      name: rest_total_hits_as_int
      description: |-
        If `true`, the response returns `hits.total` as an integer.
        If `false`, it returns `hits.total` as an object.
      schema:
        type: boolean
        default: false
      style: form
    msearch_template::query.search_type:
      in: query
      name: search_type
      description: |-
        The type of the search operation.
        Available options: `query_then_fetch`, `dfs_query_then_fetch`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SearchType'
      style: form
    msearch_template::query.typed_keys:
      in: query
      name: typed_keys
      description: If `true`, the response prefixes aggregation and suggester names with their respective types.
      schema:
        type: boolean
      style: form
    mtermvectors::path.index:
      in: path
      name: index
      description: Name of the index that contains the documents.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    mtermvectors::query.field_statistics:
      in: query
      name: field_statistics
      description: If `true`, the response includes the document count, sum of document frequencies, and sum of total term frequencies.
      schema:
        type: boolean
        default: true
      style: form
    mtermvectors::query.fields:
      in: query
      name: fields
      description: |-
        Comma-separated list or wildcard expressions of fields to include in the statistics.
        Used as the default list unless a specific field list is provided in the `completion_fields` or `fielddata_fields` parameters.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    mtermvectors::query.ids:
      in: query
      name: ids
      description: A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
      schema:
        type: array
        items:
          $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: form
    mtermvectors::query.offsets:
      in: query
      name: offsets
      description: If `true`, the response includes term offsets.
      schema:
        type: boolean
        default: true
      style: form
    mtermvectors::query.payloads:
      in: query
      name: payloads
      description: If `true`, the response includes term payloads.
      schema:
        type: boolean
        default: true
      style: form
    mtermvectors::query.positions:
      in: query
      name: positions
      description: If `true`, the response includes term positions.
      schema:
        type: boolean
        default: true
      style: form
    mtermvectors::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    mtermvectors::query.realtime:
      in: query
      name: realtime
      description: If true, the request is real-time as opposed to near-real-time.
      schema:
        type: boolean
        default: true
      style: form
    mtermvectors::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    mtermvectors::query.term_statistics:
      in: query
      name: term_statistics
      description: If true, the response includes term frequency and document frequency.
      schema:
        type: boolean
        default: false
      style: form
    mtermvectors::query.version:
      in: query
      name: version
      description: If `true`, returns the document version as part of a hit.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    mtermvectors::query.version_type:
      in: query
      name: version_type
      description: Specific version type.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    put_script::path.context:
      in: path
      name: context
      description: |-
        Context in which the script or search template should run.
        To prevent errors, the API immediately compiles the script or template in this context.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Name'
      style: simple
    put_script::path.id:
      in: path
      name: id
      description: |-
        Identifier for the stored script or search template.
        Must be unique within the cluster.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    put_script::query.cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      description: Operation timeout for connection to cluster-manager node.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      x-version-added: '2.0'
    put_script::query.master_timeout:
      in: query
      name: master_timeout
      description: |-
        Period to wait for a connection to the master node.
        If no response is received before the timeout expires, the request fails and returns an error.
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-version-deprecated: 2.0.0
      x-deprecation-message: To promote inclusive language, use 'cluster_manager_timeout' instead.
    put_script::query.timeout:
      in: query
      name: timeout
      description: |-
        Period to wait for a response.
        If no response is received before the timeout expires, the request fails and returns an error.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    rank_eval::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and index aliases used to limit the request. Wildcard (`*`) expressions are supported.
        To target all data streams and indices in a cluster, omit this parameter or use `_all` or `*`.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    rank_eval::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices. This behavior applies even if the request targets other open indices. For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.
      schema:
        type: boolean
      style: form
    rank_eval::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: Whether to expand wildcard expression to concrete indices that are open, closed or both.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    rank_eval::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `true`, missing or closed indices are not included in the response.
      schema:
        type: boolean
      style: form
    rank_eval::query.search_type:
      in: query
      name: search_type
      description: Search operation type
      schema:
        type: string
      style: form
    reindex::query.max_docs:
      name: max_docs
      in: query
      description: Maximum number of documents to process. By default, all documents.
      schema:
        type: integer
        description: Maximum number of documents to process. By default, all documents.
        format: int32
    reindex::query.refresh:
      in: query
      name: refresh
      description: If `true`, the request refreshes affected shards to make this operation visible to search.
      schema:
        type: boolean
      style: form
    reindex::query.requests_per_second:
      in: query
      name: requests_per_second
      description: |-
        The throttle for this request in sub-requests per second.
        Defaults to no throttle.
      schema:
        type: number
        default: 0
      style: form
    reindex::query.scroll:
      in: query
      name: scroll
      description: Specifies how long a consistent view of the index should be maintained for scrolled search.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    reindex::query.slices:
      in: query
      name: slices
      description: |-
        The number of slices this task should be divided into.
        Defaults to 1 slice, meaning the task isn't sliced into subtasks.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Slices'
      style: form
      x-default: '1'
    reindex::query.timeout:
      in: query
      name: timeout
      description: Period each indexing waits for automatic index creation, dynamic mapping updates, and waiting for active shards.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-default: 1m
    reindex::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operation.
        Set to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    reindex::query.wait_for_completion:
      in: query
      name: wait_for_completion
      description: If `true`, the request blocks until the operation is complete.
      schema:
        type: boolean
        default: true
      style: form
    reindex_rethrottle::path.task_id:
      in: path
      name: task_id
      description: Identifier for the task.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    reindex_rethrottle::query.requests_per_second:
      in: query
      name: requests_per_second
      description: The throttle for this request in sub-requests per second.
      schema:
        type: number
      style: form
    render_search_template::path.id:
      in: path
      name: id
      description: |-
        ID of the search template to render.
        If no `source` is specified, this or the `id` request body parameter is required.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    scroll::path.scroll_id:
      in: path
      name: scroll_id
      description: The scroll ID
      required: true
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ScrollId'
      style: simple
    scroll::query.rest_total_hits_as_int:
      in: query
      name: rest_total_hits_as_int
      description: If true, the API response's hit.total property is returned as an integer. If false, the API response's hit.total property is returned as an object.
      schema:
        type: boolean
        default: false
      style: form
    scroll::query.scroll:
      in: query
      name: scroll
      description: Period to retain the search context for scrolling.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    scroll::query.scroll_id:
      in: query
      name: scroll_id
      description: The scroll ID for scrolled search
      deprecated: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ScrollId'
      style: form
    search::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases to search.
        Supports wildcards (`*`).
        To search all data streams and indices, omit this parameter or use `*` or `_all`.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    search::query._source:
      in: query
      name: _source
      description: |-
        Indicates which source fields are returned for matching documents.
        These fields are returned in the `hits._source` property of the search response.
        Valid values are:
        `true` to return the entire document source;
        `false` to not return the document source;
        `<string>` to return the source fields that are specified as a comma-separated list (supports wildcard (`*`) patterns).
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    search::query._source_excludes:
      in: query
      name: _source_excludes
      description: |-
        A comma-separated list of source fields to exclude from the response.
        You can also use this parameter to exclude fields from the subset specified in `_source_includes` query parameter.
        If the `_source` parameter is `false`, this parameter is ignored.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    search::query._source_includes:
      in: query
      name: _source_includes
      description: |-
        A comma-separated list of source fields to include in the response.
        If this parameter is specified, only these source fields are returned.
        You can exclude fields from this subset using the `_source_excludes` query parameter.
        If the `_source` parameter is `false`, this parameter is ignored.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    search::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: |-
        If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.
        This behavior applies even if the request targets other open indices.
        For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.
      schema:
        type: boolean
      style: form
    search::query.allow_partial_search_results:
      in: query
      name: allow_partial_search_results
      description: If true, returns partial results if there are shard request timeouts or shard failures. If false, returns an error with no partial results.
      schema:
        type: boolean
        default: true
      style: form
    search::query.analyze_wildcard:
      in: query
      name: analyze_wildcard
      description: |-
        If true, wildcard and prefix queries are analyzed.
        This parameter can only be used when the q query string parameter is specified.
      schema:
        type: boolean
        default: false
      style: form
    search::query.analyzer:
      in: query
      name: analyzer
      description: |-
        Analyzer to use for the query string.
        This parameter can only be used when the q query string parameter is specified.
      schema:
        type: string
      style: form
    search::query.batched_reduce_size:
      in: query
      name: batched_reduce_size
      description: |-
        The number of shard results that should be reduced at once on the coordinating node.
        This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
      schema:
        type: number
        default: 512
      style: form
    search::query.ccs_minimize_roundtrips:
      in: query
      name: ccs_minimize_roundtrips
      description: If true, network round-trips between the coordinating node and the remote clusters are minimized when executing cross-cluster search (CCS) requests.
      schema:
        type: boolean
        default: true
      style: form
    search::query.default_operator:
      in: query
      name: default_operator
      description: |-
        The default operator for query string query: AND or OR.
        This parameter can only be used when the `q` query string parameter is specified.
      schema:
        $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/Operator'
      style: form
    search::query.df:
      in: query
      name: df
      description: |-
        Field to use as default where no field prefix is given in the query string.
        This parameter can only be used when the q query string parameter is specified.
      schema:
        type: string
      style: form
    search::query.docvalue_fields:
      in: query
      name: docvalue_fields
      description: A comma-separated list of fields to return as the docvalue representation for each hit.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    search::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: |-
        Type of index that wildcard patterns can match.
        If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.
        Supports comma-separated values, such as `open,hidden`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    search::query.explain:
      in: query
      name: explain
      description: If `true`, returns detailed information about score computation as part of a hit.
      schema:
        type: boolean
      style: form
    search::query.from:
      in: query
      name: from
      description: |-
        Starting document offset.
        Needs to be non-negative.
        By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.
        To page through more hits, use the `search_after` parameter.
      schema:
        type: number
        default: 0
      style: form
    search::query.ignore_throttled:
      in: query
      name: ignore_throttled
      description: If `true`, concrete, expanded or aliased indices will be ignored when frozen.
      schema:
        type: boolean
      style: form
    search::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `false`, the request returns an error if it targets a missing or closed index.
      schema:
        type: boolean
      style: form
    search::query.include_named_queries_score:
      name: include_named_queries_score
      in: query
      description: Indicates whether hit.matched_queries should be rendered as a map that includes the name of the matched query associated with its score (true) or as an array containing the name of the matched queries (false)
      schema:
        type: boolean
        default: false
        description: Indicates whether hit.matched_queries should be rendered as a map that includes the name of the matched query associated with its score (true) or as an array containing the name of the matched queries (false)
    search::query.lenient:
      in: query
      name: lenient
      description: |-
        If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.
        This parameter can only be used when the `q` query string parameter is specified.
      schema:
        type: boolean
      style: form
    search::query.max_concurrent_shard_requests:
      in: query
      name: max_concurrent_shard_requests
      description: |-
        Defines the number of concurrent shard requests per node this search executes concurrently.
        This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests.
      schema:
        type: number
        default: 5
      style: form
    search::query.pre_filter_shard_size:
      in: query
      name: pre_filter_shard_size
      description: |-
        Defines a threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold.
        This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method (if date filters are mandatory to match but the shard bounds and the query are disjoint).
        When unspecified, the pre-filter phase is executed if any of these conditions is met:
        the request targets more than 128 shards;
        the request targets one or more read-only index;
        the primary sort of the query targets an indexed field.
      schema:
        type: number
      style: form
    search::query.preference:
      in: query
      name: preference
      description: |-
        Nodes and shards used for the search.
        By default, OpenSearch selects from eligible nodes and shards using adaptive replica selection, accounting for allocation awareness. Valid values are:
        `_only_local` to run the search only on shards on the local node;
        `_local` to, if possible, run the search on shards on the local node, or if not, select shards using the default method;
        `_only_nodes:<node-id>,<node-id>` to run the search on only the specified nodes IDs, where, if suitable shards exist on more than one selected node, use shards on those nodes using the default method, or if none of the specified nodes are available, select shards from any available node using the default method;
        `_prefer_nodes:<node-id>,<node-id>` to if possible, run the search on the specified nodes IDs, or if not, select shards using the default method;
        `_shards:<shard>,<shard>` to run the search only on the specified shards;
        `<custom-string>` (any string that does not start with `_`) to route searches with the same `<custom-string>` to the same shards in the same order.
      schema:
        type: string
        default: random
      style: form
    search::query.q:
      in: query
      name: q
      description: |-
        Query in the Lucene query string syntax using query parameter search.
        Query parameter searches do not support the full OpenSearch Query DSL but are handy for testing.
      schema:
        type: string
      style: form
    search::query.request_cache:
      in: query
      name: request_cache
      description: |-
        If `true`, the caching of search results is enabled for requests where `size` is `0`.
        Defaults to index level settings.
      schema:
        type: boolean
      style: form
    search::query.rest_total_hits_as_int:
      in: query
      name: rest_total_hits_as_int
      description: Indicates whether `hits.total` should be rendered as an integer or an object in the rest search response.
      schema:
        type: boolean
        default: false
      style: form
    search::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    search::query.cancel_after_time_interval:
      in: query
      name: cancel_after_time_interval
      description: |-
        The time after which the search request will be canceled.
        Request-level parameter takes precedence over `cancel_after_time_interval` cluster setting.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    search::query.scroll:
      in: query
      name: scroll
      description: |-
        Period to retain the search context for scrolling. See Scroll search results.
        By default, this value cannot exceed `1d` (24 hours).
        You can change this limit using the `search.max_keep_alive` cluster-level setting.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    search::query.search_pipeline:
      name: search_pipeline
      in: query
      description: Customizable sequence of processing stages applied to search queries.
      schema:
        type: string
        description: Customizable sequence of processing stages applied to search queries.
    search::query.search_type:
      in: query
      name: search_type
      description: How distributed term frequencies are calculated for relevance scoring.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SearchType'
      style: form
    search::query.seq_no_primary_term:
      in: query
      name: seq_no_primary_term
      description: If `true`, returns sequence number and primary term of the last modification of each hit.
      schema:
        type: boolean
      style: form
    search::query.size:
      in: query
      name: size
      description: |-
        Defines the number of hits to return.
        By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.
        To page through more hits, use the `search_after` parameter.
      schema:
        type: number
        default: 10
      style: form
    search::query.sort:
      in: query
      name: sort
      description: A comma-separated list of <field>:<direction> pairs.
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      style: form
    search::query.stats:
      in: query
      name: stats
      description: Specific `tag` of the request for logging and statistical purposes.
      schema:
        type: array
        items:
          type: string
      style: form
    search::query.stored_fields:
      in: query
      name: stored_fields
      description: |-
        A comma-separated list of stored fields to return as part of a hit.
        If no fields are specified, no stored fields are included in the response.
        If this field is specified, the `_source` parameter defaults to `false`.
        You can pass `_source: true` to return both source fields and stored fields in the search response.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    search::query.suggest_field:
      in: query
      name: suggest_field
      description: Specifies which field to use for suggestions.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Field'
      style: form
    search::query.suggest_mode:
      in: query
      name: suggest_mode
      description: |-
        Specifies the suggest mode.
        This parameter can only be used when the `suggest_field` and `suggest_text` query string parameters are specified.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SuggestMode'
      style: form
    search::query.suggest_size:
      in: query
      name: suggest_size
      description: |-
        Number of suggestions to return.
        This parameter can only be used when the `suggest_field` and `suggest_text` query string parameters are specified.
      schema:
        type: number
      style: form
    search::query.suggest_text:
      in: query
      name: suggest_text
      description: |-
        The source text for which the suggestions should be returned.
        This parameter can only be used when the `suggest_field` and `suggest_text` query string parameters are specified.
      schema:
        type: string
      style: form
    search::query.terminate_after:
      in: query
      name: terminate_after
      description: |-
        Maximum number of documents to collect for each shard.
        If a query reaches this limit, OpenSearch terminates the query early.
        OpenSearch collects documents before sorting.
        Use with caution.
        OpenSearch applies this parameter to each shard handling the request.
        When possible, let OpenSearch perform early termination automatically.
        Avoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.
        If set to `0` (default), the query does not terminate early.
      schema:
        type: number
      style: form
    search::query.timeout:
      in: query
      name: timeout
      description: |-
        Specifies the period of time to wait for a response from each shard.
        If no response is received before the timeout expires, the request fails and returns an error.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    search::query.track_scores:
      in: query
      name: track_scores
      description: If `true`, calculate and return document scores, even if the scores are not used for sorting.
      schema:
        type: boolean
      style: form
    search::query.track_total_hits:
      in: query
      name: track_total_hits
      description: |-
        Number of hits matching the query to count accurately.
        If `true`, the exact number of hits is returned at the cost of some performance.
        If `false`, the response does not include the total number of hits matching the query.
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/TrackHits'
      style: form
    search::query.typed_keys:
      in: query
      name: typed_keys
      description: If `true`, aggregation and suggester names are be prefixed by their respective types in the response.
      schema:
        type: boolean
      style: form
    search::query.version:
      in: query
      name: version
      description: If `true`, returns document version as part of a hit.
      schema:
        type: boolean
      style: form
    search::query.phase_took:
      name: phase_took
      in: query
      description: Indicates whether to return phase-level `took` time values in the response.
      schema:
        type: boolean
        default: false
      style: form
    search_shards::path.index:
      in: path
      name: index
      description: Returns the indices and shards that a search request would be executed against.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    search_shards::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: |-
        If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.
        This behavior applies even if the request targets other open indices.
        For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.
      schema:
        type: boolean
      style: form
    search_shards::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: |-
        Type of index that wildcard patterns can match.
        If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.
        Supports comma-separated values, such as `open,hidden`.
        Valid values are: `all`, `open`, `closed`, `hidden`, `none`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    search_shards::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `false`, the request returns an error if it targets a missing or closed index.
      schema:
        type: boolean
      style: form
    search_shards::query.local:
      in: query
      name: local
      description: If `true`, the request retrieves information from the local node only.
      schema:
        type: boolean
        default: false
      style: form
    search_shards::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    search_shards::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    search_template::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices,
        and aliases to search. Supports wildcards (*).
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    search_template::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: |-
        If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.
        This behavior applies even if the request targets other open indices.
        For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.
      schema:
        type: boolean
      style: form
    search_template::query.ccs_minimize_roundtrips:
      in: query
      name: ccs_minimize_roundtrips
      description: If `true`, network round-trips are minimized for cross-cluster search requests.
      schema:
        type: boolean
        default: true
      style: form
    search_template::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: |-
        Type of index that wildcard patterns can match.
        If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.
        Supports comma-separated values, such as `open,hidden`.
        Valid values are: `all`, `open`, `closed`, `hidden`, `none`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    search_template::query.explain:
      in: query
      name: explain
      description: If `true`, the response includes additional details about score computation as part of a hit.
      schema:
        type: boolean
      style: form
    search_template::query.ignore_throttled:
      in: query
      name: ignore_throttled
      description: If `true`, specified concrete, expanded, or aliased indices are not included in the response when throttled.
      schema:
        type: boolean
      style: form
    search_template::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `false`, the request returns an error if it targets a missing or closed index.
      schema:
        type: boolean
      style: form
    search_template::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    search_template::query.profile:
      in: query
      name: profile
      description: If `true`, the query execution is profiled.
      schema:
        type: boolean
      style: form
    search_template::query.rest_total_hits_as_int:
      in: query
      name: rest_total_hits_as_int
      description: If true, hits.total are rendered as an integer in the response.
      schema:
        type: boolean
        default: false
      style: form
    search_template::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    search_template::query.scroll:
      in: query
      name: scroll
      description: |-
        Specifies how long a consistent view of the index
        should be maintained for scrolled search.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    search_template::query.search_type:
      in: query
      name: search_type
      description: The type of the search operation.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SearchType'
      style: form
    search_template::query.typed_keys:
      in: query
      name: typed_keys
      description: If `true`, the response prefixes aggregation and suggester names with their respective types.
      schema:
        type: boolean
      style: form
    termvectors::path.id:
      in: path
      name: id
      description: Unique identifier of the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    termvectors::path.index:
      in: path
      name: index
      description: Name of the index that contains the document.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    termvectors::query.field_statistics:
      in: query
      name: field_statistics
      description: If `true`, the response includes the document count, sum of document frequencies, and sum of total term frequencies.
      schema:
        type: boolean
        default: true
      style: form
    termvectors::query.fields:
      in: query
      name: fields
      description: |-
        Comma-separated list or wildcard expressions of fields to include in the statistics.
        Used as the default list unless a specific field list is provided in the `completion_fields` or `fielddata_fields` parameters.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    termvectors::query.offsets:
      in: query
      name: offsets
      description: If `true`, the response includes term offsets.
      schema:
        type: boolean
        default: true
      style: form
    termvectors::query.payloads:
      in: query
      name: payloads
      description: If `true`, the response includes term payloads.
      schema:
        type: boolean
        default: true
      style: form
    termvectors::query.positions:
      in: query
      name: positions
      description: If `true`, the response includes term positions.
      schema:
        type: boolean
        default: true
      style: form
    termvectors::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    termvectors::query.realtime:
      in: query
      name: realtime
      description: If true, the request is real-time as opposed to near-real-time.
      schema:
        type: boolean
        default: true
      style: form
    termvectors::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    termvectors::query.term_statistics:
      in: query
      name: term_statistics
      description: If `true`, the response includes term frequency and document frequency.
      schema:
        type: boolean
        default: false
      style: form
    termvectors::query.version:
      in: query
      name: version
      description: If `true`, returns the document version as part of a hit.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionNumber'
      style: form
    termvectors::query.version_type:
      in: query
      name: version_type
      description: Specific version type.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/VersionType'
      style: form
    update::path.id:
      in: path
      name: id
      description: Document ID
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    update::path.index:
      in: path
      name: index
      description: The name of the index
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/IndexName'
      style: simple
    update::query._source:
      in: query
      name: _source
      description: |-
        Set to false to disable source retrieval. You can also specify a comma-separated
        list of the fields you want to retrieve.
      schema:
        $ref: '../schemas/_core.search.yaml#/components/schemas/SourceConfigParam'
      style: form
    update::query._source_excludes:
      in: query
      name: _source_excludes
      description: Specify the source fields you want to exclude.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    update::query._source_includes:
      in: query
      name: _source_includes
      description: Specify the source fields you want to retrieve.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Fields'
      style: form
    update::query.if_primary_term:
      in: query
      name: if_primary_term
      description: Only perform the operation if the document has this primary term.
      schema:
        type: number
      style: form
    update::query.if_seq_no:
      in: query
      name: if_seq_no
      description: Only perform the operation if the document has this sequence number.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SequenceNumber'
      style: form
    update::query.lang:
      in: query
      name: lang
      description: The script language.
      schema:
        type: string
        default: painless
      style: form
    update::query.refresh:
      in: query
      name: refresh
      description: |-
        If 'true', OpenSearch refreshes the affected shards to make this operation
        visible to search, if 'wait_for' then wait for a refresh to make this operation
        visible to search, if 'false' do nothing with refreshes.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Refresh'
      style: form
    update::query.require_alias:
      in: query
      name: require_alias
      description: If true, the destination must be an index alias.
      schema:
        type: boolean
        default: false
      style: form
    update::query.retry_on_conflict:
      in: query
      name: retry_on_conflict
      description: Specify how many times should the operation be retried when a conflict occurs.
      schema:
        type: number
        default: 0
      style: form
    update::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    update::query.timeout:
      in: query
      name: timeout
      description: |-
        Period to wait for dynamic mapping updates and active shards.
        This guarantees OpenSearch waits for at least the timeout before failing.
        The actual wait time could be longer, particularly when multiple waits occur.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    update::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operations.
        Set to 'all' or any positive integer up to the total number of shards in the index
        (number_of_replicas+1). Defaults to 1 meaning the primary shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    update_by_query::path.index:
      in: path
      name: index
      description: |-
        Comma-separated list of data streams, indices, and aliases to search.
        Supports wildcards (`*`).
        To search all data streams or indices, omit this parameter or use `*` or `_all`.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Indices'
      style: simple
    update_by_query::query._source:
      name: _source
      in: query
      description: True or false to return the _source field or not, or a list of fields to return.
      style: form
      schema:
        type: array
        items:
          type: string
        description: True or false to return the _source field or not, or a list of fields to return.
      explode: true
    update_by_query::query._source_excludes:
      name: _source_excludes
      in: query
      description: List of fields to exclude from the returned _source field.
      style: form
      schema:
        type: array
        items:
          type: string
        description: List of fields to exclude from the returned _source field.
      explode: true
    update_by_query::query._source_includes:
      name: _source_includes
      in: query
      description: List of fields to extract and return from the _source field.
      style: form
      schema:
        type: array
        items:
          type: string
        description: List of fields to extract and return from the _source field.
      explode: true
    update_by_query::query.allow_no_indices:
      in: query
      name: allow_no_indices
      description: |-
        If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.
        This behavior applies even if the request targets other open indices.
        For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.
      schema:
        type: boolean
      style: form
    update_by_query::query.analyze_wildcard:
      in: query
      name: analyze_wildcard
      description: If `true`, wildcard and prefix queries are analyzed.
      schema:
        type: boolean
        default: false
      style: form
    update_by_query::query.analyzer:
      in: query
      name: analyzer
      description: Analyzer to use for the query string.
      schema:
        type: string
      style: form
    update_by_query::query.conflicts:
      in: query
      name: conflicts
      description: 'What to do if update by query hits version conflicts: `abort` or `proceed`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Conflicts'
      style: form
    update_by_query::query.default_operator:
      in: query
      name: default_operator
      description: 'The default operator for query string query: `AND` or `OR`.'
      schema:
        $ref: '../schemas/_common.query_dsl.yaml#/components/schemas/Operator'
      style: form
    update_by_query::query.df:
      in: query
      name: df
      description: Field to use as default where no field prefix is given in the query string.
      schema:
        type: string
      style: form
    update_by_query::query.expand_wildcards:
      in: query
      name: expand_wildcards
      description: |-
        Type of index that wildcard patterns can match.
        If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.
        Supports comma-separated values, such as `open,hidden`.
        Valid values are: `all`, `open`, `closed`, `hidden`, `none`.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/ExpandWildcards'
      style: form
    update_by_query::query.from:
      in: query
      name: from
      description: Starting offset.
      schema:
        type: number
        default: 0
      style: form
    update_by_query::query.ignore_unavailable:
      in: query
      name: ignore_unavailable
      description: If `false`, the request returns an error if it targets a missing or closed index.
      schema:
        type: boolean
      style: form
    update_by_query::query.lenient:
      in: query
      name: lenient
      description: If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.
      schema:
        type: boolean
      style: form
    update_by_query::query.max_docs:
      in: query
      name: max_docs
      description: |-
        Maximum number of documents to process.
        Defaults to all documents.
      schema:
        type: number
      style: form
    update_by_query::query.pipeline:
      in: query
      name: pipeline
      description: |-
        ID of the pipeline to use to preprocess incoming documents.
        If the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request.
        If a final pipeline is configured it will always run, regardless of the value of this parameter.
      schema:
        type: string
      style: form
    update_by_query::query.preference:
      in: query
      name: preference
      description: |-
        Specifies the node or shard the operation should be performed on.
        Random by default.
      schema:
        type: string
        default: random
      style: form
    update_by_query::query.q:
      name: q
      in: query
      description: Query in the Lucene query string syntax.
      schema:
        type: string
        description: Query in the Lucene query string syntax.
    update_by_query::query.refresh:
      in: query
      name: refresh
      description: If `true`, OpenSearch refreshes affected shards to make the operation visible to search.
      schema:
        type: boolean
      style: form
    update_by_query::query.request_cache:
      in: query
      name: request_cache
      description: If `true`, the request cache is used for this request.
      schema:
        type: boolean
      style: form
    update_by_query::query.requests_per_second:
      in: query
      name: requests_per_second
      description: The throttle for this request in sub-requests per second.
      schema:
        type: number
        default: 0
      style: form
    update_by_query::query.routing:
      in: query
      name: routing
      description: Custom value used to route operations to a specific shard.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Routing'
      style: form
    update_by_query::query.scroll:
      in: query
      name: scroll
      description: Period to retain the search context for scrolling.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    update_by_query::query.scroll_size:
      in: query
      name: scroll_size
      description: Size of the scroll request that powers the operation.
      schema:
        type: number
        default: 100
      style: form
    update_by_query::query.search_timeout:
      in: query
      name: search_timeout
      description: Explicit timeout for each search request.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
    update_by_query::query.search_type:
      in: query
      name: search_type
      description: 'The type of the search operation. Available options: `query_then_fetch`, `dfs_query_then_fetch`.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/SearchType'
      style: form
    update_by_query::query.size:
      name: size
      in: query
      description: Deprecated, please use `max_docs` instead.
      schema:
        type: integer
        description: Deprecated, please use `max_docs` instead.
        format: int32
    update_by_query::query.slices:
      in: query
      name: slices
      description: The number of slices this task should be divided into.
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Slices'
      style: form
      x-default: '1'
    update_by_query::query.sort:
      in: query
      name: sort
      description: A comma-separated list of <field>:<direction> pairs.
      schema:
        type: array
        items:
          type: string
      style: form
    update_by_query::query.stats:
      in: query
      name: stats
      description: Specific `tag` of the request for logging and statistical purposes.
      schema:
        type: array
        items:
          type: string
      style: form
    update_by_query::query.terminate_after:
      in: query
      name: terminate_after
      description: |-
        Maximum number of documents to collect for each shard.
        If a query reaches this limit, OpenSearch terminates the query early.
        OpenSearch collects documents before sorting.
        Use with caution.
        OpenSearch applies this parameter to each shard handling the request.
        When possible, let OpenSearch perform early termination automatically.
        Avoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.
      schema:
        type: number
      style: form
    update_by_query::query.timeout:
      in: query
      name: timeout
      description: 'Period each update request waits for the following operations: dynamic mapping updates, waiting for active shards.'
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Duration'
      style: form
      x-default: 1m
    update_by_query::query.version:
      in: query
      name: version
      description: If `true`, returns the document version as part of a hit.
      schema:
        type: boolean
      style: form
    update_by_query::query.wait_for_active_shards:
      in: query
      name: wait_for_active_shards
      description: |-
        The number of shard copies that must be active before proceeding with the operation.
        Set to `all` or any positive integer up to the total number of shards in the index (`number_of_replicas+1`).
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/WaitForActiveShards'
      style: form
      x-default: '1'
    update_by_query::query.wait_for_completion:
      in: query
      name: wait_for_completion
      description: If `true`, the request blocks until the operation is complete.
      schema:
        type: boolean
        default: true
      style: form
    update_by_query_rethrottle::path.task_id:
      in: path
      name: task_id
      description: The ID for the task.
      required: true
      schema:
        $ref: '../schemas/_common.yaml#/components/schemas/Id'
      style: simple
    update_by_query_rethrottle::query.requests_per_second:
      in: query
      name: requests_per_second
      description: The throttle for this request in sub-requests per second.
      schema:
        type: number
      style: form
