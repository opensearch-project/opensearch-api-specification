openapi: 3.1.0
info:
  title: Schemas of `cluster.reroute` Category
  description: Schemas of `cluster.reroute` category.
  version: 1.0.0
paths: {}
components:
  schemas:
    Command:
      type: object
      properties:
        cancel:
          description: |-
            Cancel allocation of a shard (or recovery). Accepts `index` and `shard` for index
            name and shard number, and `node` for the node to cancel the shard allocation
            on. This can be used to force resynchronization of existing replicas from the
            primary shard by cancelling them and allowing them to be reinitialized
            through the standard recovery process. By default only replica shard
            allocations can be cancelled. If it is necessary to cancel the allocation of
            a primary shard then the `allow_primary` flag must also be included in the
            request.
          $ref: '#/components/schemas/CommandCancelAction'
        move:
          description: |-
            Move a started shard from one node to another node. Accepts `index` and `shard`
            for index name and shard number, `from_node` for the node to move the shard
            from, and `to_node` for the node to move the shard to.
          $ref: '#/components/schemas/CommandMoveAction'
        allocate_replica:
          description: |-
            Allocate an unassigned replica shard to a node. Accepts `index` and `shard` for
            index name and shard number, and `node` to allocate the shard to. Takes
            allocation deciders into account.
          $ref: '#/components/schemas/CommandAllocateReplicaAction'
        allocate_stale_primary:
          description: |-
            Allocate a primary shard to a node that holds a stale copy. Accepts `index`
            and `shard` for index name and shard number, and `node` to allocate the shard to.
            Using this command may lead to data loss for the provided shard id. If a node
            which has the good copy of the data rejoins the cluster later on, that data
            will be deleted or overwritten with the data of the stale copy that was
            forcefully allocated with this command. To ensure that these implications are
            well-understood, this command requires the flag `accept_data_loss` to be
            explicitly set to true.
          $ref: '#/components/schemas/CommandAllocatePrimaryAction'
        allocate_empty_primary:
          description: |-
            Allocate an empty primary shard to a node. Accepts `index` and `shard` for
            index name and shard number, and `node` to allocate the shard to. Using this
            command leads to a complete loss of all data that was indexed into this
            shard, if it was previously started. If a node which has a copy of the data
            rejoins the cluster later on, that data will be deleted. To ensure that these
            implications are well-understood, this command requires the flag
            `accept_data_loss` to be explicitly set to true.
          $ref: '#/components/schemas/CommandAllocatePrimaryAction'
    CommandCancelAction:
      type: object
      properties:
        index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        shard:
          type: integer
          format: int32
        node:
          type: string
        allow_primary:
          type: boolean
      required:
        - index
        - node
        - shard
    CommandMoveAction:
      type: object
      properties:
        index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        shard:
          type: integer
          format: int32
        from_node:
          description: The node to move the shard from
          type: string
        to_node:
          description: The node to move the shard to
          type: string
      required:
        - from_node
        - index
        - shard
        - to_node
    CommandAllocateReplicaAction:
      type: object
      properties:
        index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        shard:
          type: integer
          format: int32
        node:
          type: string
      required:
        - index
        - node
        - shard
    CommandAllocatePrimaryAction:
      type: object
      properties:
        index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        shard:
          type: integer
          format: int32
        node:
          type: string
        accept_data_loss:
          description: If a node which has a copy of the data rejoins the cluster later on, that data will be deleted. To ensure that these implications are well-understood, this command requires the flag `accept_data_loss` to be explicitly set to `true`.
          type: boolean
      required:
        - accept_data_loss
        - index
        - node
        - shard
    Metric:
      oneOf:
        - type: string
          const: _all
          description: Returns all available metrics.
        - type: string
          const: blocks
          description: Returns information about cluster-level blocks.
        - type: string
          const: cluster_manager_node
          description: Returns information about the current cluster manager node.
        - type: string
          const: master_node
          description: The alias for `cluster_manager_node`. Deprecated, but maintained for backwards compatibility.
        - type: string
          const: metadata
          description: Returns the cluster state metadata.
        - type: string
          const: nodes
          description: Returns information about nodes in the cluster.
        - type: string
          const: routing_nodes
          description: Returns the node-level shard allocations.
        - type: string
          const: routing_table
          description: Returns index-level shard allocations.
        - type: string
          const: version
          description: Returns the cluster state version.
    RerouteExplanation:
      type: object
      properties:
        command:
          type: string
        decisions:
          type: array
          items:
            $ref: '#/components/schemas/RerouteDecision'
        parameters:
          $ref: '#/components/schemas/RerouteParameters'
      required:
        - command
        - decisions
        - parameters
    RerouteDecision:
      type: object
      properties:
        decider:
          type: string
        decision:
          type: string
        explanation:
          type: string
      required:
        - decider
        - decision
        - explanation
    RerouteParameters:
      type: object
      properties:
        allow_primary:
          type: boolean
        index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        node:
          $ref: '_common.yaml#/components/schemas/NodeName'
        shard:
          type: integer
          format: int32
        from_node:
          $ref: '_common.yaml#/components/schemas/NodeName'
        to_node:
          $ref: '_common.yaml#/components/schemas/NodeName'
      required:
        - allow_primary
        - index
        - node
        - shard
