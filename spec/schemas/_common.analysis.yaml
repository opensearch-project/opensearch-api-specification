openapi: 3.1.0
info:
  title: Schemas of _common.analysis category
  description: Schemas of _common.analysis category
  version: 1.0.0
paths: {}
components:
  schemas:
    Analyzer:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/CustomAnalyzer'
        - $ref: '#/components/schemas/FingerprintAnalyzer'
        - $ref: '#/components/schemas/KeywordAnalyzer'
        - $ref: '#/components/schemas/LanguageAnalyzer'
        - $ref: '#/components/schemas/NoriAnalyzer'
        - $ref: '#/components/schemas/PatternAnalyzer'
        - $ref: '#/components/schemas/SimpleAnalyzer'
        - $ref: '#/components/schemas/StandardAnalyzer'
        - $ref: '#/components/schemas/StopAnalyzer'
        - $ref: '#/components/schemas/WhitespaceAnalyzer'
        - $ref: '#/components/schemas/IcuAnalyzer'
        - $ref: '#/components/schemas/KuromojiAnalyzer'
        - $ref: '#/components/schemas/SnowballAnalyzer'
        - $ref: '#/components/schemas/DutchAnalyzer'
    CustomAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - custom
        char_filter:
          type: array
          items:
            type: string
        filter:
          type: array
          items:
            type: string
        position_increment_gap:
          type: number
        position_offset_gap:
          type: number
        tokenizer:
          type: string
      required:
        - type
        - tokenizer
    FingerprintAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - fingerprint
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        max_output_size:
          type: number
        preserve_original:
          type: boolean
        separator:
          type: string
        stopwords:
          $ref: '#/components/schemas/StopWords'
        stopwords_path:
          type: string
      required:
        - type
        - max_output_size
        - preserve_original
        - separator
    StopWords:
      description: >-
        Language value, such as _arabic_ or _thai_. Defaults to _english_.

        Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words.

        Also accepts an array of stop words.
      oneOf:
        - type: string
        - type: array
          items:
            type: string
    KeywordAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - keyword
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
      required:
        - type
    LanguageAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - language
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        language:
          $ref: '#/components/schemas/Language'
        stem_exclusion:
          type: array
          items:
            type: string
        stopwords:
          $ref: '#/components/schemas/StopWords'
        stopwords_path:
          type: string
      required:
        - type
        - language
        - stem_exclusion
    Language:
      type: string
      enum:
        - Arabic
        - Armenian
        - Basque
        - Brazilian
        - Bulgarian
        - Catalan
        - Chinese
        - Cjk
        - Czech
        - Danish
        - Dutch
        - English
        - Estonian
        - Finnish
        - French
        - Galician
        - German
        - Greek
        - Hindi
        - Hungarian
        - Indonesian
        - Irish
        - Italian
        - Latvian
        - Norwegian
        - Persian
        - Portuguese
        - Romanian
        - Russian
        - Sorani
        - Spanish
        - Swedish
        - Turkish
        - Thai
    NoriAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - nori
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        decompound_mode:
          $ref: '#/components/schemas/NoriDecompoundMode'
        stoptags:
          type: array
          items:
            type: string
        user_dictionary:
          type: string
      required:
        - type
    NoriDecompoundMode:
      type: string
      enum:
        - discard
        - none
        - mixed
    PatternAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - pattern
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        flags:
          type: string
        lowercase:
          type: boolean
        pattern:
          type: string
        stopwords:
          $ref: '#/components/schemas/StopWords'
      required:
        - type
        - pattern
    SimpleAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - simple
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
      required:
        - type
    StandardAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - standard
        max_token_length:
          type: number
        stopwords:
          $ref: '#/components/schemas/StopWords'
      required:
        - type
    StopAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - stop
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        stopwords:
          $ref: '#/components/schemas/StopWords'
        stopwords_path:
          type: string
      required:
        - type
    WhitespaceAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - whitespace
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
      required:
        - type
    IcuAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - icu_analyzer
        method:
          $ref: '#/components/schemas/IcuNormalizationType'
        mode:
          $ref: '#/components/schemas/IcuNormalizationMode'
      required:
        - type
        - method
        - mode
    IcuNormalizationType:
      type: string
      enum:
        - nfc
        - nfkc
        - nfkc_cf
    IcuNormalizationMode:
      type: string
      enum:
        - decompose
        - compose
    KuromojiAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - kuromoji
        mode:
          $ref: '#/components/schemas/KuromojiTokenizationMode'
        user_dictionary:
          type: string
      required:
        - type
        - mode
    KuromojiTokenizationMode:
      type: string
      enum:
        - normal
        - search
        - extended
    SnowballAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - snowball
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        language:
          $ref: '#/components/schemas/SnowballLanguage'
        stopwords:
          $ref: '#/components/schemas/StopWords'
      required:
        - type
        - language
    SnowballLanguage:
      type: string
      enum:
        - Armenian
        - Basque
        - Catalan
        - Danish
        - Dutch
        - English
        - Finnish
        - French
        - German
        - German2
        - Hungarian
        - Italian
        - Kp
        - Lovins
        - Norwegian
        - Porter
        - Portuguese
        - Romanian
        - Russian
        - Spanish
        - Swedish
        - Turkish
    DutchAnalyzer:
      type: object
      properties:
        type:
          type: string
          enum:
            - dutch
        stopwords:
          $ref: '#/components/schemas/StopWords'
      required:
        - type
    CharFilter:
      oneOf:
        - type: string
        - $ref: '#/components/schemas/CharFilterDefinition'
    CharFilterDefinition:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/HtmlStripCharFilter'
        - $ref: '#/components/schemas/MappingCharFilter'
        - $ref: '#/components/schemas/PatternReplaceCharFilter'
        - $ref: '#/components/schemas/IcuNormalizationCharFilter'
        - $ref: '#/components/schemas/KuromojiIterationMarkCharFilter'
    HtmlStripCharFilter:
      allOf:
        - $ref: '#/components/schemas/CharFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - html_strip
          required:
            - type
    CharFilterBase:
      type: object
      properties:
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
    MappingCharFilter:
      allOf:
        - $ref: '#/components/schemas/CharFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - mapping
            mappings:
              type: array
              items:
                type: string
            mappings_path:
              type: string
          required:
            - type
    PatternReplaceCharFilter:
      allOf:
        - $ref: '#/components/schemas/CharFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - pattern_replace
            flags:
              type: string
            pattern:
              type: string
            replacement:
              type: string
          required:
            - type
            - pattern
    IcuNormalizationCharFilter:
      allOf:
        - $ref: '#/components/schemas/CharFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - icu_normalizer
            mode:
              $ref: '#/components/schemas/IcuNormalizationMode'
            name:
              $ref: '#/components/schemas/IcuNormalizationType'
          required:
            - type
    KuromojiIterationMarkCharFilter:
      allOf:
        - $ref: '#/components/schemas/CharFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - kuromoji_iteration_mark
            normalize_kana:
              type: boolean
            normalize_kanji:
              type: boolean
          required:
            - type
            - normalize_kana
            - normalize_kanji
    TokenFilter:
      oneOf:
        - type: string
        - $ref: '#/components/schemas/TokenFilterDefinition'
    TokenFilterDefinition:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/AsciiFoldingTokenFilter'
        - $ref: '#/components/schemas/CommonGramsTokenFilter'
        - $ref: '#/components/schemas/ConditionTokenFilter'
        - $ref: '#/components/schemas/DelimitedPayloadTokenFilter'
        - $ref: '#/components/schemas/EdgeNGramTokenFilter'
        - $ref: '#/components/schemas/ElisionTokenFilter'
        - $ref: '#/components/schemas/FingerprintTokenFilter'
        - $ref: '#/components/schemas/HunspellTokenFilter'
        - $ref: '#/components/schemas/HyphenationDecompounderTokenFilter'
        - $ref: '#/components/schemas/KeepTypesTokenFilter'
        - $ref: '#/components/schemas/KeepWordsTokenFilter'
        - $ref: '#/components/schemas/KeywordMarkerTokenFilter'
        - $ref: '#/components/schemas/KStemTokenFilter'
        - $ref: '#/components/schemas/LengthTokenFilter'
        - $ref: '#/components/schemas/LimitTokenCountTokenFilter'
        - $ref: '#/components/schemas/LowercaseTokenFilter'
        - $ref: '#/components/schemas/MultiplexerTokenFilter'
        - $ref: '#/components/schemas/NGramTokenFilter'
        - $ref: '#/components/schemas/NoriPartOfSpeechTokenFilter'
        - $ref: '#/components/schemas/PatternCaptureTokenFilter'
        - $ref: '#/components/schemas/PatternReplaceTokenFilter'
        - $ref: '#/components/schemas/PorterStemTokenFilter'
        - $ref: '#/components/schemas/PredicateTokenFilter'
        - $ref: '#/components/schemas/RemoveDuplicatesTokenFilter'
        - $ref: '#/components/schemas/ReverseTokenFilter'
        - $ref: '#/components/schemas/ShingleTokenFilter'
        - $ref: '#/components/schemas/SnowballTokenFilter'
        - $ref: '#/components/schemas/StemmerOverrideTokenFilter'
        - $ref: '#/components/schemas/StemmerTokenFilter'
        - $ref: '#/components/schemas/StopTokenFilter'
        - $ref: '#/components/schemas/SynonymGraphTokenFilter'
        - $ref: '#/components/schemas/SynonymTokenFilter'
        - $ref: '#/components/schemas/TrimTokenFilter'
        - $ref: '#/components/schemas/TruncateTokenFilter'
        - $ref: '#/components/schemas/UniqueTokenFilter'
        - $ref: '#/components/schemas/UppercaseTokenFilter'
        - $ref: '#/components/schemas/WordDelimiterGraphTokenFilter'
        - $ref: '#/components/schemas/WordDelimiterTokenFilter'
        - $ref: '#/components/schemas/KuromojiStemmerTokenFilter'
        - $ref: '#/components/schemas/KuromojiReadingFormTokenFilter'
        - $ref: '#/components/schemas/KuromojiPartOfSpeechTokenFilter'
        - $ref: '#/components/schemas/IcuTokenizer'
        - $ref: '#/components/schemas/IcuCollationTokenFilter'
        - $ref: '#/components/schemas/IcuFoldingTokenFilter'
        - $ref: '#/components/schemas/IcuNormalizationTokenFilter'
        - $ref: '#/components/schemas/IcuTransformTokenFilter'
        - $ref: '#/components/schemas/PhoneticTokenFilter'
        - $ref: '#/components/schemas/DictionaryDecompounderTokenFilter'
    AsciiFoldingTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - asciifolding
            preserve_original:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
          required:
            - type
    TokenFilterBase:
      type: object
      properties:
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
    CommonGramsTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - common_grams
            common_words:
              type: array
              items:
                type: string
            common_words_path:
              type: string
            ignore_case:
              type: boolean
            query_mode:
              type: boolean
          required:
            - type
    ConditionTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - condition
            filter:
              type: array
              items:
                type: string
            script:
              $ref: '_common.yaml#/components/schemas/Script'
          required:
            - type
            - filter
            - script
    DelimitedPayloadTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - delimited_payload
            delimiter:
              type: string
            encoding:
              $ref: '#/components/schemas/DelimitedPayloadEncoding'
          required:
            - type
    DelimitedPayloadEncoding:
      type: string
      enum:
        - int
        - float
        - identity
    EdgeNGramTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - edge_ngram
            max_gram:
              type: number
            min_gram:
              type: number
            side:
              $ref: '#/components/schemas/EdgeNGramSide'
            preserve_original:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
          required:
            - type
    EdgeNGramSide:
      type: string
      enum:
        - front
        - back
    ElisionTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - elision
            articles:
              type: array
              items:
                type: string
            articles_path:
              type: string
            articles_case:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
          required:
            - type
    FingerprintTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - fingerprint
            max_output_size:
              type: number
            separator:
              type: string
          required:
            - type
    HunspellTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - hunspell
            dedup:
              type: boolean
            dictionary:
              type: string
            locale:
              type: string
            longest_only:
              type: boolean
          required:
            - type
            - locale
    HyphenationDecompounderTokenFilter:
      allOf:
        - $ref: '#/components/schemas/CompoundWordTokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - hyphenation_decompounder
          required:
            - type
    CompoundWordTokenFilterBase:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            hyphenation_patterns_path:
              type: string
            max_subword_size:
              type: number
            min_subword_size:
              type: number
            min_word_size:
              type: number
            only_longest_match:
              type: boolean
            word_list:
              type: array
              items:
                type: string
            word_list_path:
              type: string
    KeepTypesTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - keep_types
            mode:
              $ref: '#/components/schemas/KeepTypesMode'
            types:
              type: array
              items:
                type: string
          required:
            - type
    KeepTypesMode:
      type: string
      enum:
        - include
        - exclude
    KeepWordsTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - keep
            keep_words:
              type: array
              items:
                type: string
            keep_words_case:
              type: boolean
            keep_words_path:
              type: string
          required:
            - type
    KeywordMarkerTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - keyword_marker
            ignore_case:
              type: boolean
            keywords:
              type: array
              items:
                type: string
            keywords_path:
              type: string
            keywords_pattern:
              type: string
          required:
            - type
    KStemTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - kstem
          required:
            - type
    LengthTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - length
            max:
              type: number
            min:
              type: number
          required:
            - type
    LimitTokenCountTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - limit
            consume_all_tokens:
              type: boolean
            max_token_count:
              $ref: '_common.yaml#/components/schemas/Stringifiedinteger'
          required:
            - type
    LowercaseTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - lowercase
            language:
              type: string
          required:
            - type
    MultiplexerTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - multiplexer
            filters:
              type: array
              items:
                type: string
            preserve_original:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
          required:
            - type
            - filters
    NGramTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - ngram
            max_gram:
              type: number
            min_gram:
              type: number
            preserve_original:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
          required:
            - type
    NoriPartOfSpeechTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - nori_part_of_speech
            stoptags:
              type: array
              items:
                type: string
          required:
            - type
    PatternCaptureTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - pattern_capture
            patterns:
              type: array
              items:
                type: string
            preserve_original:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
          required:
            - type
            - patterns
    PatternReplaceTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - pattern_replace
            all:
              type: boolean
            flags:
              type: string
            pattern:
              type: string
            replacement:
              type: string
          required:
            - type
            - pattern
    PorterStemTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - porter_stem
          required:
            - type
    PredicateTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - predicate_token_filter
            script:
              $ref: '_common.yaml#/components/schemas/Script'
          required:
            - type
            - script
    RemoveDuplicatesTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - remove_duplicates
          required:
            - type
    ReverseTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - reverse
          required:
            - type
    ShingleTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - shingle
            filler_token:
              type: string
            max_shingle_size:
              oneOf:
                - type: number
                - type: string
            min_shingle_size:
              oneOf:
                - type: number
                - type: string
            output_unigrams:
              type: boolean
            output_unigrams_if_no_shingles:
              type: boolean
            token_separator:
              type: string
          required:
            - type
    SnowballTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - snowball
            language:
              $ref: '#/components/schemas/SnowballLanguage'
          required:
            - type
            - language
    StemmerOverrideTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - stemmer_override
            rules:
              type: array
              items:
                type: string
            rules_path:
              type: string
          required:
            - type
    StemmerTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - stemmer
            language:
              type: string
          required:
            - type
    StopTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - stop
            ignore_case:
              type: boolean
            remove_trailing:
              type: boolean
            stopwords:
              $ref: '#/components/schemas/StopWords'
            stopwords_path:
              type: string
          required:
            - type
    SynonymGraphTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - synonym_graph
            expand:
              type: boolean
            format:
              $ref: '#/components/schemas/SynonymFormat'
            lenient:
              type: boolean
            synonyms:
              type: array
              items:
                type: string
            synonyms_path:
              type: string
            tokenizer:
              type: string
            updateable:
              type: boolean
          required:
            - type
    SynonymFormat:
      type: string
      enum:
        - solr
        - wordnet
    SynonymTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - synonym
            expand:
              type: boolean
            format:
              $ref: '#/components/schemas/SynonymFormat'
            lenient:
              type: boolean
            synonyms:
              type: array
              items:
                type: string
            synonyms_path:
              type: string
            tokenizer:
              type: string
            updateable:
              type: boolean
          required:
            - type
    TrimTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - trim
          required:
            - type
    TruncateTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - truncate
            length:
              type: number
          required:
            - type
    UniqueTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - unique
            only_on_same_position:
              type: boolean
          required:
            - type
    UppercaseTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - uppercase
          required:
            - type
    WordDelimiterGraphTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - word_delimiter_graph
            adjust_offsets:
              type: boolean
            catenate_all:
              type: boolean
            catenate_numbers:
              type: boolean
            catenate_words:
              type: boolean
            generate_number_parts:
              type: boolean
            generate_word_parts:
              type: boolean
            ignore_keywords:
              type: boolean
            preserve_original:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
            protected_words:
              type: array
              items:
                type: string
            protected_words_path:
              type: string
            split_on_case_change:
              type: boolean
            split_on_numerics:
              type: boolean
            stem_english_possessive:
              type: boolean
            type_table:
              type: array
              items:
                type: string
            type_table_path:
              type: string
          required:
            - type
    WordDelimiterTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - word_delimiter
            catenate_all:
              type: boolean
            catenate_numbers:
              type: boolean
            catenate_words:
              type: boolean
            generate_number_parts:
              type: boolean
            generate_word_parts:
              type: boolean
            preserve_original:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
            protected_words:
              type: array
              items:
                type: string
            protected_words_path:
              type: string
            split_on_case_change:
              type: boolean
            split_on_numerics:
              type: boolean
            stem_english_possessive:
              type: boolean
            type_table:
              type: array
              items:
                type: string
            type_table_path:
              type: string
          required:
            - type
    KuromojiStemmerTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - kuromoji_stemmer
            minimum_length:
              type: number
          required:
            - type
            - minimum_length
    KuromojiReadingFormTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - kuromoji_readingform
            use_romaji:
              type: boolean
          required:
            - type
            - use_romaji
    KuromojiPartOfSpeechTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - kuromoji_part_of_speech
            stoptags:
              type: array
              items:
                type: string
          required:
            - type
            - stoptags
    IcuTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - icu_tokenizer
            rule_files:
              type: string
          required:
            - type
            - rule_files
    TokenizerBase:
      type: object
      properties:
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
    IcuCollationTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - icu_collation
            alternate:
              $ref: '#/components/schemas/IcuCollationAlternate'
            caseFirst:
              $ref: '#/components/schemas/IcuCollationCaseFirst'
            caseLevel:
              type: boolean
            country:
              type: string
            decomposition:
              $ref: '#/components/schemas/IcuCollationDecomposition'
            hiraganaQuaternaryMode:
              type: boolean
            language:
              type: string
            numeric:
              type: boolean
            rules:
              type: string
            strength:
              $ref: '#/components/schemas/IcuCollationStrength'
            variableTop:
              type: string
            variant:
              type: string
          required:
            - type
    IcuCollationAlternate:
      type: string
      enum:
        - shifted
        - non-ignorable
    IcuCollationCaseFirst:
      type: string
      enum:
        - lower
        - upper
    IcuCollationDecomposition:
      type: string
      enum:
        - no
        - identical
    IcuCollationStrength:
      type: string
      enum:
        - primary
        - secondary
        - tertiary
        - quaternary
        - identical
    IcuFoldingTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - icu_folding
            unicode_set_filter:
              type: string
          required:
            - type
            - unicode_set_filter
    IcuNormalizationTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - icu_normalizer
            name:
              $ref: '#/components/schemas/IcuNormalizationType'
          required:
            - type
            - name
    IcuTransformTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - icu_transform
            dir:
              $ref: '#/components/schemas/IcuTransformDirection'
            id:
              type: string
          required:
            - type
            - id
    IcuTransformDirection:
      type: string
      enum:
        - forward
        - reverse
    PhoneticTokenFilter:
      allOf:
        - $ref: '#/components/schemas/TokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - phonetic
            encoder:
              $ref: '#/components/schemas/PhoneticEncoder'
            languageset:
              type: array
              items:
                $ref: '#/components/schemas/PhoneticLanguage'
            max_code_len:
              type: number
            name_type:
              $ref: '#/components/schemas/PhoneticNameType'
            replace:
              type: boolean
            rule_type:
              $ref: '#/components/schemas/PhoneticRuleType'
          required:
            - type
            - encoder
            - languageset
            - name_type
            - rule_type
    PhoneticEncoder:
      type: string
      enum:
        - metaphone
        - double_metaphone
        - soundex
        - refined_soundex
        - caverphone1
        - caverphone2
        - cologne
        - nysiis
        - koelnerphonetik
        - haasephonetik
        - beider_morse
        - daitch_mokotoff
    PhoneticLanguage:
      type: string
      enum:
        - any
        - common
        - cyrillic
        - english
        - french
        - german
        - hebrew
        - hungarian
        - polish
        - romanian
        - russian
        - spanish
    PhoneticNameType:
      type: string
      enum:
        - generic
        - ashkenazi
        - sephardic
    PhoneticRuleType:
      type: string
      enum:
        - approx
        - exact
    DictionaryDecompounderTokenFilter:
      allOf:
        - $ref: '#/components/schemas/CompoundWordTokenFilterBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - dictionary_decompounder
          required:
            - type
    Normalizer:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/LowercaseNormalizer'
        - $ref: '#/components/schemas/CustomNormalizer'
    LowercaseNormalizer:
      type: object
      properties:
        type:
          type: string
          enum:
            - lowercase
      required:
        - type
    CustomNormalizer:
      type: object
      properties:
        type:
          type: string
          enum:
            - custom
        char_filter:
          type: array
          items:
            type: string
        filter:
          type: array
          items:
            type: string
      required:
        - type
    Tokenizer:
      oneOf:
        - type: string
        - $ref: '#/components/schemas/TokenizerDefinition'
    TokenizerDefinition:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/CharGroupTokenizer'
        - $ref: '#/components/schemas/EdgeNGramTokenizer'
        - $ref: '#/components/schemas/KeywordTokenizer'
        - $ref: '#/components/schemas/LetterTokenizer'
        - $ref: '#/components/schemas/LowercaseTokenizer'
        - $ref: '#/components/schemas/NGramTokenizer'
        - $ref: '#/components/schemas/NoriTokenizer'
        - $ref: '#/components/schemas/PathHierarchyTokenizer'
        - $ref: '#/components/schemas/StandardTokenizer'
        - $ref: '#/components/schemas/UaxEmailUrlTokenizer'
        - $ref: '#/components/schemas/WhitespaceTokenizer'
        - $ref: '#/components/schemas/KuromojiTokenizer'
        - $ref: '#/components/schemas/PatternTokenizer'
        - $ref: '#/components/schemas/IcuTokenizer'
    CharGroupTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - char_group
            tokenize_on_chars:
              type: array
              items:
                type: string
            max_token_length:
              type: number
          required:
            - type
            - tokenize_on_chars
    EdgeNGramTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - edge_ngram
            custom_token_chars:
              type: string
            max_gram:
              type: number
            min_gram:
              type: number
            token_chars:
              type: array
              items:
                $ref: '#/components/schemas/TokenChar'
          required:
            - type
            - max_gram
            - min_gram
            - token_chars
    TokenChar:
      type: string
      enum:
        - letter
        - digit
        - whitespace
        - punctuation
        - symbol
        - custom
    KeywordTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - keyword
            buffer_size:
              type: number
          required:
            - type
            - buffer_size
    LetterTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - letter
          required:
            - type
    LowercaseTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - lowercase
          required:
            - type
    NGramTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - ngram
            custom_token_chars:
              type: string
            max_gram:
              type: number
            min_gram:
              type: number
            token_chars:
              type: array
              items:
                $ref: '#/components/schemas/TokenChar'
          required:
            - type
            - max_gram
            - min_gram
            - token_chars
    NoriTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - nori_tokenizer
            decompound_mode:
              $ref: '#/components/schemas/NoriDecompoundMode'
            discard_punctuation:
              type: boolean
            user_dictionary:
              type: string
            user_dictionary_rules:
              type: array
              items:
                type: string
          required:
            - type
    PathHierarchyTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - path_hierarchy
            buffer_size:
              $ref: '_common.yaml#/components/schemas/Stringifiedinteger'
            delimiter:
              type: string
            replacement:
              type: string
            reverse:
              $ref: '_common.yaml#/components/schemas/Stringifiedboolean'
            skip:
              $ref: '_common.yaml#/components/schemas/Stringifiedinteger'
          required:
            - type
            - buffer_size
            - delimiter
            - reverse
            - skip
    StandardTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - standard
            max_token_length:
              type: number
          required:
            - type
    UaxEmailUrlTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - uax_url_email
            max_token_length:
              type: number
          required:
            - type
    WhitespaceTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - whitespace
            max_token_length:
              type: number
          required:
            - type
    KuromojiTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - kuromoji_tokenizer
            discard_punctuation:
              type: boolean
            mode:
              $ref: '#/components/schemas/KuromojiTokenizationMode'
            nbest_cost:
              type: number
            nbest_examples:
              type: string
            user_dictionary:
              type: string
            user_dictionary_rules:
              type: array
              items:
                type: string
            discard_compound_token:
              type: boolean
          required:
            - type
            - mode
    PatternTokenizer:
      allOf:
        - $ref: '#/components/schemas/TokenizerBase'
        - type: object
          properties:
            type:
              type: string
              enum:
                - pattern
            flags:
              type: string
            group:
              type: number
            pattern:
              type: string
          required:
            - type
