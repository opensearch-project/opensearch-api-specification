openapi: 3.1.0
info:
  title: Schemas of `indices._common` Category
  description: Schemas of `indices._common` category.
  version: 1.0.0
paths: {}
components:
  schemas:
    IndexSettings:
      type: object
      description: The configuration settings for an index.
      properties:
        index:
          $ref: '#/components/schemas/IndexSettings'
        mode:
          type: string
        routing_path:
          $ref: '_common.yaml#/components/schemas/StringOrStringArray'
        soft_deletes:
          $ref: '#/components/schemas/SoftDeletes'
        soft_deletes.retention_lease.period:
          $ref: '_common.yaml#/components/schemas/Duration'
        sort:
          $ref: '#/components/schemas/IndexSegmentSort'
        number_of_shards:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        number_of_replicas:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        number_of_routing_shards:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        check_on_startup:
          $ref: '#/components/schemas/IndexCheckOnStartup'
        codec:
          type: string
          description: The compression type for stored data.
        routing_partition_size:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        load_fixed_bitset_filters_eagerly:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        hidden:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        auto_expand_replicas:
          type: string
          description: The range of replicas to maintain.
        merge:
          $ref: '#/components/schemas/IndexSettingsMerge'
        merge.scheduler.max_thread_count:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        search:
          $ref: '#/components/schemas/IndexSettingsSearch'
        search.idle.after:
          $ref: '_common.yaml#/components/schemas/Duration'
        refresh_interval:
          $ref: '_common.yaml#/components/schemas/Duration'
        max_result_window:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_inner_result_window:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_rescore_window:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_docvalue_fields_search:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_script_fields:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_ngram_diff:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_shingle_diff:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        blocks:
          $ref: '#/components/schemas/IndexSettingBlocks'
        blocks.read_only:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        blocks.read_only_allow_delete:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        blocks.read:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        blocks.write:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        blocks.metadata:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        max_refresh_listeners:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        analyze:
          $ref: '#/components/schemas/IndexSettingsAnalyze'
        analyze.max_token_count:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        highlight:
          $ref: '#/components/schemas/IndexSettingsHighlight'
        highlight.max_analyzed_offset:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_terms_count:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_regex_length:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        routing:
          $ref: '#/components/schemas/IndexRouting'
        gc_deletes:
          $ref: '_common.yaml#/components/schemas/Duration'
        default_pipeline:
          $ref: '_common.yaml#/components/schemas/PipelineName'
        final_pipeline:
          $ref: '_common.yaml#/components/schemas/PipelineName'
        lifecycle:
          $ref: '#/components/schemas/IndexSettingsLifecycle'
        lifecycle.name:
          $ref: '_common.yaml#/components/schemas/Name'
        provided_name:
          $ref: '_common.yaml#/components/schemas/Name'
        creation_date:
          $ref: '_common.yaml#/components/schemas/StringifiedEpochTimeUnitMillis'
        creation_date_string:
          $ref: '_common.yaml#/components/schemas/DateTime'
        uuid:
          $ref: '_common.yaml#/components/schemas/Uuid'
        version:
          $ref: '#/components/schemas/IndexVersioning'
        verified_before_close:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        format:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_slices_per_scroll:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        translog:
          $ref: '#/components/schemas/Translog'
        translog.durability:
          $ref: '#/components/schemas/TranslogDurability'
        translog.flush_threshold_size:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        query_string:
          $ref: '#/components/schemas/IndexSettingsQueryString'
        query_string.lenient:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        priority:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        top_metrics_max_size:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        analysis:
          $ref: '#/components/schemas/IndexSettingsAnalysis'
        settings:
          $ref: '#/components/schemas/IndexSettings'
        queries:
          $ref: '#/components/schemas/IndexSettingsQueries'
        similarity:
          $ref: '#/components/schemas/IndexSettingsSimilarity'
        mapping:
          $ref: '#/components/schemas/IndexSettingsMapping'
        indexing:
          $ref: '#/components/schemas/IndexSettingsIndexing'
        indexing_pressure:
          $ref: '#/components/schemas/IndexingPressure'
        store:
          $ref: '#/components/schemas/IndexSettingsStore'
        knn:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        knn.algo_param.ef_search:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        composite_index.star_tree:
          $ref: '#/components/schemas/IndexSettingsStarTree'
      additionalProperties:
        title: custom_settings
    IndexSettingsIndexing:
      type: object
      description: The indexing-related settings for an index.
      properties:
        slowlog:
          $ref: '#/components/schemas/IndexingSlowlog'
    SoftDeletes:
      type: object
      description: The configuration for soft deletes.
      properties:
        enabled:
          description: Whether soft deletes are enabled on the index.
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        retention:
          $ref: '#/components/schemas/SoftDeletesRetention'
        retention_lease:
          $ref: '#/components/schemas/RetentionLease'
    SoftDeletesRetention:
      type: object
      description: The retention configuration for soft deletes.
      properties:
        operations:
          $ref: '_common.yaml#/components/schemas/StringifiedLong'
    RetentionLease:
      type: object
      description: The retention lease configuration.
      properties:
        period:
          $ref: '_common.yaml#/components/schemas/Duration'
      required:
        - period
    IndexSegmentSort:
      type: object
      description: The configuration for segment sorting.
      properties:
        field:
          $ref: '_common.yaml#/components/schemas/Fields'
        order:
          oneOf:
            - $ref: '#/components/schemas/SegmentSortOrder'
            - type: array
              items:
                $ref: '#/components/schemas/SegmentSortOrder'
        mode:
          oneOf:
            - $ref: '#/components/schemas/SegmentSortMode'
            - type: array
              items:
                $ref: '#/components/schemas/SegmentSortMode'
        missing:
          oneOf:
            - $ref: '#/components/schemas/SegmentSortMissing'
            - type: array
              items:
                $ref: '#/components/schemas/SegmentSortMissing'
    SegmentSortOrder:
      type: string
      description: The sort order for segments.
      enum:
        - asc
        - desc
    SegmentSortMode:
      type: string
      description: The sort mode for segments.
      enum:
        - max
        - min
    SegmentSortMissing:
      type: string
      description: The handling of missing values in segment sorting.
      enum:
        - _first
        - _last
    IndexCheckOnStartup:
      type: string
      description: The type of check to perform when starting an index.
      enum:
        - checksum
        - 'false'
        - 'true'
    IndexSettingsMerge:
      type: object
      description: The configuration for segment merging.
      properties:
        log_byte_size_policy:
          $ref: '#/components/schemas/IndexSettingsMergeLogByteSizePolicy'
        policy:
          $ref: '#/components/schemas/IndexSettingsMergePolicy'
        policy.deletes_pct_allowed:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        policy.expunge_deletes_allowed:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        policy.floor_segment:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        policy.max_merge_at_once:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        policy.max_merged_segment:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        policy.reclaim_deletes_weight:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        policy.segments_per_tier:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        scheduler:
          $ref: '#/components/schemas/IndexSettingsMergeScheduler'
    IndexSettingsMergeScheduler:
      type: object
      description: The configuration for merge scheduling.
      properties:
        auto_throttle:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        max_thread_count:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_merge_count:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
    IndexSettingsMergePolicy:
      description: The policy configuration for segment merging.
      oneOf:
        - title: name
          $ref: '#/components/schemas/IndexSettingsMergePolicyName'
        - title: tiered_policy_config
          $ref: '#/components/schemas/IndexSettingsMergeTieredPolicy'
    IndexSettingsMergePolicyName:
      type: string
      description: The type of merge policy.
      enum:
        - default
        - log_byte_size
        - tiered
    IndexSettingsMergeTieredPolicy:
      type: object
      description: The configuration for tiered merge policy.
      properties:
        deletes_pct_allowed:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        expunge_deletes_allowed:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        floor_segment:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        max_merge_at_once:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_merge_at_once_explicit:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
          x-version-removed: '2.0'
        max_merged_segment:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        reclaim_deletes_weight:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        segments_per_tier:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
    IndexSettingsMergeLogByteSizePolicy:
      type: object
      description: The configuration for log byte size merge policy.
      properties:
        max_merge_segment:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        max_merge_segment_forced_merge:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        max_merged_docs:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        merge_factor:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        min_merge:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        no_cfs_ratio:
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
    IndexSettingsSearch:
      type: object
      description: The configuration for search operations.
      properties:
        concurrent:
          $ref: '#/components/schemas/IndexSettingsSearchConcurrent'
        concurrent_segment_search:
          $ref: '#/components/schemas/IndexSettingsSearchConcurrentSegmentSearch'
        default_pipeline:
          type: string
          description: The default search pipeline to use.
        idle:
          $ref: '#/components/schemas/SearchIdle'
        slowlog:
          $ref: '#/components/schemas/SearchSlowlog'
        throttled:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
    IndexSettingsSearchConcurrent:
      type: object
      description: The configuration for concurrent search operations.
      properties:
        max_slice_count:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
    IndexSettingsSearchConcurrentSegmentSearch:
      description: The configuration for concurrent segment search.
      type: object
      properties:
        mode:
          type: string
          description: The mode of concurrent segment search.
        enabled:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
    SearchIdle:
      description: The configuration for search idle behavior.
      type: object
      properties:
        after:
          $ref: '_common.yaml#/components/schemas/Duration'
    SearchSlowlog:
      description: The configuration for search slow log.
      type: object
      properties:
        level:
          type: string
          description: The log level for slow searches.
        reformat:
          type: boolean
          description: Whether to reformat the logged search source.
        threshold:
          $ref: '#/components/schemas/SearchSlowlogThresholds'
    SearchSlowlogThresholds:
      description: The threshold configuration for search slow log.
      type: object
      properties:
        query:
          $ref: '#/components/schemas/SlowlogThresholdLevels'
        fetch:
          $ref: '#/components/schemas/SlowlogThresholdLevels'
    SlowlogThresholdLevels:
      description: The threshold levels for slow log.
      type: object
      properties:
        warn:
          $ref: '_common.yaml#/components/schemas/Duration'
        info:
          $ref: '_common.yaml#/components/schemas/Duration'
        debug:
          $ref: '_common.yaml#/components/schemas/Duration'
        trace:
          $ref: '_common.yaml#/components/schemas/Duration'
    IndexSettingBlocks:
      description: The block settings that control index operations.
      type: object
      properties:
        read_only:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        read_only_allow_delete:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        read:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        write:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        metadata:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        search_only:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
          description: When true, the index is in search-only mode, allowing only read operations
    IndexSettingsAnalyze:
      description: The configuration for text analysis.
      type: object
      properties:
        max_token_count:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
    IndexSettingsHighlight:
      description: The configuration for highlighting.
      type: object
      properties:
        max_analyzed_offset:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
    IndexRouting:
      description: The routing configuration for index operations.
      type: object
      properties:
        allocation:
          $ref: '#/components/schemas/IndexRoutingAllocation'
        rebalance:
          $ref: '#/components/schemas/IndexRoutingRebalance'
    IndexRoutingAllocation:
      description: The configuration for shard allocation.
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/IndexRoutingAllocationOptions'
        include:
          $ref: '#/components/schemas/IndexRoutingAllocationInclude'
        initial_recovery:
          $ref: '#/components/schemas/IndexRoutingAllocationInitialRecovery'
        disk:
          $ref: '#/components/schemas/IndexRoutingAllocationDisk'
        total_shards_per_node:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        total_primary_shards_per_node:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
          x-version-added: '3.0'
    IndexRoutingAllocationOptions:
      description: The options for shard allocation control.
      oneOf:
        - description: Allows shard allocation for all shards.
          const: all
          type: string
        - description: Allows shard allocation only for new primary shards.
          const: new_primaries
          type: string
        - description: Prevents shard allocation.
          const: none
          type: string
        - description: Allows shard allocation only for primary shards.
          const: primaries
          type: string
    IndexRoutingAllocationInclude:
      type: object
      description: The inclusion rules for shard allocation.
      properties:
        _tier_preference:
          type: string
          description: The data tier preference for the index.
        _id:
          $ref: '_common.yaml#/components/schemas/Id'
    IndexRoutingAllocationInitialRecovery:
      type: object
      description: The configuration for initial shard recovery.
      properties:
        _id:
          $ref: '_common.yaml#/components/schemas/Id'
    IndexRoutingAllocationDisk:
      type: object
      description: The disk-based allocation settings.
      properties:
        threshold_enabled:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
    IndexRoutingRebalance:
      type: object
      description: The configuration for shard rebalancing.
      properties:
        enable:
          $ref: '#/components/schemas/IndexRoutingRebalanceOptions'
      required:
        - enable
    IndexRoutingRebalanceOptions:
      description: The options for shard rebalancing control.
      oneOf:
        - description: Allows rebalancing of all shards.
          const: all
          type: string
        - description: Prevents shard rebalancing.
          const: none
          type: string
        - description: Allows rebalancing of primary shards only.
          const: primaries
          type: string
        - description: Allows rebalancing of replica shards only.
          const: replicas
          type: string
    IndexSettingsLifecycle:
      type: object
      description: The index lifecycle management configuration.
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        indexing_complete:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        origination_date:
          description: |-
            The timestamp used to calculate the index age for its phase transitions. Use this setting
            if you create a new index that contains old data and want to use the original creation date to calculate the index
            age. Specified as a Unix epoch value in milliseconds.
          $ref: '_common.yaml#/components/schemas/StringifiedEpochTimeUnitMillis'
        parse_origination_date:
          description: |-
            When `true`, parses the origination date from the index name. This origination date is used to calculate the index age
            for its phase transitions. The index name must match the pattern `^.*-{date_format}-\\d+`, where the `date_format` is
            `yyyy.MM.dd` and the trailing digits are optional. An index that was rolled over would normally match the full format,
            for example `logs-2016.10.31-000002`). If the index name doesn't match the pattern, index creation fails.
          type: boolean
        step:
          $ref: '#/components/schemas/IndexSettingsLifecycleStep'
        rollover_alias:
          description: |-
            The index alias to update when the index rolls over. Specify when using a policy that contains a rollover action.
            When the index rolls over, the alias is updated to reflect that the index is no longer the write index. For more
            information about rolling indexes, see Rollover.
          type: string
      required:
        - name
    IndexSettingsLifecycleStep:
      description: The configuration for the lifecycle step execution.
      type: object
      properties:
        wait_time_threshold:
          $ref: '_common.yaml#/components/schemas/Duration'
    IndexVersioning:
      description: The versioning information for the index.
      type: object
      properties:
        created:
          $ref: '_common.yaml#/components/schemas/VersionString'
        created_string:
          type: string
          description: The string representation of the version when the index was created.
    Translog:
      type: object
      description: The translog configuration.
      properties:
        sync_interval:
          $ref: '_common.yaml#/components/schemas/Duration'
        durability:
          $ref: '#/components/schemas/TranslogDurability'
        flush_threshold_size:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        generation_threshold_size:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        retention:
          $ref: '#/components/schemas/TranslogRetention'
    TranslogDurability:
      description: The durability settings for the translog.
      oneOf:
        - description: Asynchronous durability - acknowledges write operations after they are written to memory.
          const: ASYNC
          type: string
        - description: Request durability - acknowledges write operations after they are written to disk.
          const: REQUEST
          type: string
        - description: Asynchronous durability (lowercase variant).
          const: async
          type: string
        - description: Request durability (lowercase variant).
          const: request
          type: string
    TranslogRetention:
      type: object
      description: The retention configuration for the translog.
      properties:
        size:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        age:
          $ref: '_common.yaml#/components/schemas/Duration'
    IndexSettingsQueryString:
      type: object
      description: The configuration for query string parsing.
      properties:
        lenient:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
    IndexSettingsAnalysis:
      type: object
      description: The text analysis configuration.
      properties:
        analyzer:
          type: object
          description: The custom analyzer configurations.
          additionalProperties:
            $ref: '_common.analysis.yaml#/components/schemas/Analyzer'
        char_filter:
          type: object
          description: The custom character filter configurations.
          additionalProperties:
            $ref: '_common.analysis.yaml#/components/schemas/CharFilter'
        filter:
          type: object
          description: The custom token filter configurations.
          additionalProperties:
            $ref: '_common.analysis.yaml#/components/schemas/TokenFilter'
        normalizer:
          type: object
          description: The custom normalizer configurations.
          additionalProperties:
            $ref: '_common.analysis.yaml#/components/schemas/Normalizer'
        tokenizer:
          type: object
          description: The custom tokenizer configurations.
          additionalProperties:
            $ref: '_common.analysis.yaml#/components/schemas/Tokenizer'
    IndexSettingsQueries:
      type: object
      description: The configuration for query caching.
      properties:
        cache:
          $ref: '#/components/schemas/IndexSettingsQueriesCache'
    IndexSettingsQueriesCache:
      type: object
      description: The query cache settings.
      properties:
        enabled:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
      required:
        - enabled
    IndexSettingsSimilarity:
      type: object
      description: The configuration for similarity algorithms.
      properties:
        bm25:
          $ref: '#/components/schemas/IndexSettingsSimilarityBm25'
        dfi:
          $ref: '#/components/schemas/IndexSettingsSimilarityDfi'
        dfr:
          $ref: '#/components/schemas/IndexSettingsSimilarityDfr'
        ib:
          $ref: '#/components/schemas/IndexSettingsSimilarityIb'
        lmd:
          $ref: '#/components/schemas/IndexSettingsSimilarityLmd'
        lmj:
          $ref: '#/components/schemas/IndexSettingsSimilarityLmj'
        scripted_tfidf:
          $ref: '#/components/schemas/IndexSettingsSimilarityScriptedTfidf'
    IndexSettingsSimilarityBm25:
      type: object
      description: The BM25 similarity algorithm configuration.
      properties:
        b:
          type: number
          format: float
          description: The length normalization parameter.
        discount_overlaps:
          type: boolean
          description: Whether to discount overlapping tokens.
        k1:
          type: number
          format: float
          description: The term frequency normalization parameter.
        type:
          oneOf:
            - description: The BM25 similarity algorithm.
              const: BM25
              type: string
      required:
        - b
        - discount_overlaps
        - k1
        - type
    IndexSettingsSimilarityDfi:
      type: object
      description: The divergence from independence (DFI) similarity algorithm configuration.
      properties:
        independence_measure:
          $ref: '_common.yaml#/components/schemas/DFIIndependenceMeasure'
        type:
          type: string
          enum:
            - DFI
      required:
        - independence_measure
        - type
    IndexSettingsSimilarityDfr:
      description: The divergence from randomness (DFR) similarity algorithm configuration.
      type: object
      properties:
        after_effect:
          $ref: '_common.yaml#/components/schemas/DFRAfterEffect'
        basic_model:
          $ref: '_common.yaml#/components/schemas/DFRBasicModel'
        normalization:
          $ref: '_common.yaml#/components/schemas/TermFrequencyNormalization'
        type:
          type: string
          enum:
            - DFR
      required:
        - after_effect
        - basic_model
        - normalization
        - type
    IndexSettingsSimilarityIb:
      type: object
      description: The information-based similarity algorithm configuration.
      properties:
        distribution:
          $ref: '_common.yaml#/components/schemas/IBDistribution'
        lambda:
          $ref: '_common.yaml#/components/schemas/IBLambda'
        normalization:
          $ref: '_common.yaml#/components/schemas/TermFrequencyNormalization'
        type:
          type: string
          enum:
            - IB
      required:
        - distribution
        - lambda
        - normalization
        - type
    IndexSettingsSimilarityLmd:
      description: The LM Dirichlet similarity algorithm configuration.
      type: object
      properties:
        mu:
          type: number
          format: float
          description: The smoothing parameter.
        type:
          type: string
          enum:
            - LMDirichlet
      required:
        - mu
        - type
    IndexSettingsSimilarityLmj:
      type: object
      description: The LM Jelinek-Mercer similarity algorithm configuration.
      properties:
        lambda:
          type: number
          format: float
          description: The optimal mixture parameter.
        type:
          type: string
          enum:
            - LMJelinekMercer
      required:
        - lambda
        - type
    IndexSettingsSimilarityScriptedTfidf:
      type: object
      description: The scripted TF/IDF similarity algorithm configuration.
      properties:
        script:
          $ref: '_common.yaml#/components/schemas/Script'
        type:
          type: string
          enum:
            - scripted
      required:
        - script
        - type
    IndexSettingsMapping:
      type: object
      description: The mapping configuration for the index.
      properties:
        coerce:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        total_fields:
          $ref: '#/components/schemas/IndexSettingsMappingLimitTotalFields'
        depth:
          $ref: '#/components/schemas/IndexSettingsMappingLimitDepth'
        nested_fields:
          $ref: '#/components/schemas/IndexSettingsMappingLimitNestedFields'
        nested_objects:
          $ref: '#/components/schemas/IndexSettingsMappingLimitNestedObjects'
        field_name_length:
          $ref: '#/components/schemas/IndexSettingsMappingLimitFieldNameLength'
        dimension_fields:
          $ref: '#/components/schemas/IndexSettingsMappingLimitDimensionFields'
        ignore_malformed:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
    IndexSettingsMappingLimitTotalFields:
      type: object
      properties:
        limit:
          description: |-
            The maximum number of fields in an index. Field and object mappings, as well as field aliases count towards this limit.
            The limit is in place to prevent mappings and searches from becoming too large. Higher values can lead to performance
            degradations and memory issues, especially in clusters with a high load or few resources.
          $ref: '_common.yaml#/components/schemas/StringifiedLong'
    IndexSettingsMappingLimitDepth:
      type: object
      properties:
        limit:
          description: |-
            The maximum depth for a field, which is measured as the number of inner objects. For instance, if all fields are defined
            at the root object level, then the depth is `1`. If there is one object mapping, then the depth is `2`.
          $ref: '_common.yaml#/components/schemas/StringifiedLong'
    IndexSettingsMappingLimitNestedFields:
      type: object
      properties:
        limit:
          description: |-
            The maximum number of distinct nested mappings in an index. The nested type should only be used in special cases, when
            arrays of objects need to be queried independently of each other. To safeguard against poorly designed mappings, this
            setting limits the number of unique nested types per index.
          $ref: '_common.yaml#/components/schemas/StringifiedLong'
    IndexSettingsMappingLimitNestedObjects:
      type: object
      properties:
        limit:
          description: |-
            The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps
            to prevent out of memory errors when a document contains too many nested objects.
          $ref: '_common.yaml#/components/schemas/StringifiedLong'
    IndexSettingsMappingLimitFieldNameLength:
      type: object
      properties:
        limit:
          description: |-
            Setting for the maximum length of a field name. This setting isn't really something that addresses mappings explosion but
            might still be useful if you want to limit the field length. It usually shouldn't be necessary to set this setting. The
            default is okay unless a user starts to add a huge number of fields with really long names. Default is `Long.MAX_VALUE` (no limit).
          $ref: '_common.yaml#/components/schemas/StringifiedLong'
    IndexSettingsMappingLimitDimensionFields:
      type: object
      properties:
        limit:
          description: |-
            [preview] This functionality is in technical preview and may be changed or removed in a future release.
            OpenSearch will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.
          $ref: '_common.yaml#/components/schemas/StringifiedLong'
    IndexingSlowlog:
      type: object
      description: The configuration for indexing slow log.
      properties:
        level:
          type: string
          description: The log level for slow indexing operations.
        source:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        reformat:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        threshold:
          $ref: '#/components/schemas/IndexingSlowlogThresholds'
    IndexingSlowlogThresholds:
      type: object
      description: The threshold configuration for indexing slow log.
      properties:
        index:
          $ref: '#/components/schemas/SlowlogThresholdLevels'
    IndexingPressure:
      type: object
      description: The configuration for indexing backpressure.
      properties:
        memory:
          $ref: '#/components/schemas/IndexingPressureMemory'
      required:
        - memory
    IndexingPressureMemory:
      type: object
      description: The memory-related settings for indexing backpressure.
      properties:
        limit:
          description: |-
            The number of outstanding bytes that may be consumed by indexing requests. When this limit is reached or exceeded,
            the node will reject new coordinating and primary operations. When replica operations consume 1.5x this limit,
            the node will reject new replica operations. Defaults to 10% of the heap.
          oneOf:
            - type: string
            - type: integer
              format: int64
    IndexSettingsStore:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StorageType'
        allow_mmap:
          description: |-
            Whether memory-mapping is allowed. You can restrict the use of the `mmapfs` and the related `hybridfs` store types with the setting `node.store.allow_mmap`.
            This setting is useful, for example, if you are in an environment where you can not control the ability to create a lot
            of memory maps so you need disable the ability to use memory-mapping.
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        fs:
          $ref: '#/components/schemas/IndexSettingsStoreFs'
        hybrid:
          $ref: '#/components/schemas/IndexSettingsStoreHybrid'
        preload:
          type: array
          description: The list of files to preload into memory.
          items:
            type: string
        stats_refresh_interval:
          $ref: '_common.yaml#/components/schemas/Duration'
      required:
        - type
    IndexSettingsStoreFs:
      type: object
      description: The filesystem storage configuration.
      properties:
        fs_lock:
          $ref: '#/components/schemas/IndexSettingsStoreFsLock'
    IndexSettingsStoreFsLock:
      description: The type of file system lock.
      oneOf:
        - description: Uses native file system locks.
          const: native
          type: string
        - description: Uses simple file system locks.
          const: simple
          type: string
    IndexSettingsStoreHybrid:
      type: object
      description: The hybrid storage type configuration.
      properties:
        mmap:
          $ref: '#/components/schemas/IndexSettingsStoreHybridMmap'
        nio:
          $ref: '#/components/schemas/IndexSettingsStoreHybridNio'
    IndexSettingsStoreHybridMmap:
      type: object
      description: The memory-mapped storage configuration.
      properties:
        extensions:
          type: array
          description: The file extensions to use memory-mapping for.
          items:
            type: string
    IndexSettingsStoreHybridNio:
      type: object
      description: The NIO storage configuration.
      properties:
        extensions:
          type: array
          description: The file extensions to use NIO for.
          items:
            type: string
    StorageType:
      anyOf:
        - title: builtin
          $ref: '#/components/schemas/BuiltinStorageType'
        - title: custom
          type: string
    BuiltinStorageType:
      description: The type of storage implementation.
      oneOf:
        - description: Uses the default file system implementation.
          const: fs
          type: string
        - description: Uses a hybrid of memory-mapped and regular file system implementation.
          const: hybridfs
          type: string
        - description: Uses memory-mapped file system implementation.
          const: mmapfs
          type: string
        - description: Uses NIO file system implementation.
          const: niofs
          type: string
    IndexSettingsStarTree:
      type: object
      description: The star tree indexing configuration.
      properties:
        default:
          $ref: '#/components/schemas/IndexSettingsStarTreeDefault'
        field:
          $ref: '#/components/schemas/IndexSettingsStarTreeField'
        max_fields:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
    IndexSettingsStarTreeDefault:
      description: The default settings for star tree indexing.
      type: object
      properties:
        max_leaf_docs:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
    IndexSettingsStarTreeField:
      description: The field-specific settings for star tree indexing.
      type: object
      properties:
        default:
          $ref: '#/components/schemas/IndexSettingsStarTreeFieldDefault'
        max_base_metrics:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_date_intervals:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        max_dimensions:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
    IndexSettingsStarTreeFieldDefault:
      type: object
      description: The field-specific settings for star tree indexing.
      properties:
        date_intervals:
          type: array
          description: The list of date intervals to use.
          items:
            type: string
        metrics:
          type: array
          description: The list of metrics to calculate.
          items:
            type: string
    NumericFielddata:
      type: object
      description: The configuration for numeric field data.
      properties:
        format:
          $ref: '#/components/schemas/NumericFielddataFormat'
      required:
        - format
    NumericFielddataFormat:
      description: The format for numeric field data.
      oneOf:
        - description: Uses array format for field data.
          const: array
          type: string
        - description: Disables field data.
          const: disabled
          type: string
    FielddataFrequencyFilter:
      type: object
      description: The frequency filter configuration for field data.
      properties:
        max:
          type: number
          format: double
          description: The maximum frequency threshold.
        min:
          type: number
          format: double
          description: The minimum frequency threshold.
        min_segment_size:
          type: integer
          description: The minimum segment size to apply the filter.
      required:
        - max
        - min
        - min_segment_size
    AliasDefinition:
      type: object
      description: The configuration for an index alias.
      properties:
        filter:
          $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        index_routing:
          description: |-
            The value used to route indexing operations to a specific shard.
            When specified, this overwrites the `routing` value for indexing operations.
          type: string
        is_write_index:
          description: When `true`, the index is the write index for the alias.
          type: boolean
        routing:
          description: The value used to route indexing and search operations to a specific shard.
          type: string
        search_routing:
          description: |-
            The value used to route search operations to a specific shard.
            When specified, this overwrites the `routing` value for search operations.
          type: string
        is_hidden:
          description: |-
            When `true`, the alias is hidden.
            All indexes for the alias must have the same `is_hidden` value.
          type: boolean
    IndexState:
      type: object
      description: The state configuration of an index.
      properties:
        aliases:
          type: object
          description: The aliases associated with the index.
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        mappings:
          $ref: '_common.mapping.yaml#/components/schemas/TypeMapping'
        settings:
          $ref: '#/components/schemas/IndexSettings'
        defaults:
          $ref: '#/components/schemas/IndexSettings'
        data_stream:
          $ref: '_common.yaml#/components/schemas/DataStreamName'
    Alias:
      type: object
      description: The index alias configuration.
      properties:
        filter:
          $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        index_routing:
          $ref: '_common.yaml#/components/schemas/Routing'
        is_hidden:
          description: |-
            When `true`, the alias is hidden.
            All indexes for the alias must have the same `is_hidden` value.
          type: boolean
        is_write_index:
          description: When `true`, the index is the write index for the alias.
          type: boolean
        routing:
          $ref: '_common.yaml#/components/schemas/Routing'
        search_routing:
          $ref: '_common.yaml#/components/schemas/Routing'
    DataStream:
      type: object
      properties:
        _meta:
          $ref: '_common.yaml#/components/schemas/Metadata'
        allow_custom_routing:
          description: When `true`, the data stream allows custom routing on write request.
          type: boolean
        generation:
          description: The current generation number for the data stream. This number acts as a cumulative count of the stream's rollovers, starting at 1.
          type: integer
          format: int64
        hidden:
          description: When `true`, the data stream is hidden.
          type: boolean
        ilm_policy:
          $ref: '_common.yaml#/components/schemas/Name'
        next_generation_managed_by:
          $ref: '#/components/schemas/ManagedBy'
        prefer_ilm:
          description: Indicates if ILM should take precedence over DSL in case both are configured to managed this data stream.
          type: boolean
        indices:
          description: |-
            An array of objects containing information about the data stream's backing indexes.
            The last item in this array contains information about the stream's current write index.
          type: array
          items:
            $ref: '#/components/schemas/DataStreamIndex'
        name:
          $ref: '_common.yaml#/components/schemas/DataStreamName'
        replicated:
          description: When `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
          type: boolean
        status:
          $ref: '_common.yaml#/components/schemas/HealthStatus'
        system:
          description: When `true`, the data stream is created and managed by an OpenSearch stack component and cannot be modified through normal user interaction.
          type: boolean
        template:
          $ref: '_common.yaml#/components/schemas/Name'
        timestamp_field:
          $ref: '#/components/schemas/DataStreamTimestampField'
      required:
        - generation
        - indices
        - name
        - status
        - template
        - timestamp_field
    ManagedBy:
      type: string
      description: The component managing the data stream or index.
      enum:
        - Data stream lifecycle
        - Index Lifecycle Management
        - Unmanaged
    DataStreamIndex:
      type: object
      description: The configuration for a data stream's backing index.
      properties:
        index_name:
          $ref: '_common.yaml#/components/schemas/IndexName'
        index_uuid:
          $ref: '_common.yaml#/components/schemas/Uuid'
        ilm_policy:
          $ref: '_common.yaml#/components/schemas/Name'
        managed_by:
          $ref: '#/components/schemas/ManagedBy'
        prefer_ilm:
          description: Indicates if ILM should take precedence over DSL in case both are configured to manage this index.
          type: boolean
      required:
        - index_name
        - index_uuid
    DataStreamTimestampField:
      description: The timestamp field configuration for a data stream.
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Field'
      required:
        - name
    IndexTemplate:
      description: The configuration for an index template.
      type: object
      properties:
        index_patterns:
          $ref: '_common.yaml#/components/schemas/Names'
        composed_of:
          description: |-
            An ordered list of component template names.
            Component templates are merged in the order specified, meaning that the last component template specified has the highest precedence.
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/Name'
        template:
          $ref: '#/components/schemas/IndexTemplateSummary'
        version:
          $ref: '_common.yaml#/components/schemas/VersionNumber'
        priority:
          description: |-
            The priority to determine index template precedence when a new data stream or index is created.
            The index template with the highest priority is chosen.
            If no priority is specified the template is treated as though it is of priority 0 (lowest priority).
            This number is not automatically generated by OpenSearch.
          type: integer
          format: int64
        _meta:
          $ref: '_common.yaml#/components/schemas/Metadata'
        allow_auto_create:
          type: boolean
          description: Whether the template allows automatic index creation.
        data_stream:
          $ref: '#/components/schemas/IndexTemplateDataStreamConfiguration'
      required:
        - index_patterns
    IndexTemplateSummary:
      type: object
      description: The summary configuration for an index template.
      properties:
        aliases:
          description: |-
            The aliases to add.
            If the index template includes a `data_stream` object, these are data stream aliases.
            Otherwise, these are index aliases.
            Data stream aliases ignore the `index_routing`, `routing`, and `search_routing` options.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        mappings:
          $ref: '_common.mapping.yaml#/components/schemas/TypeMapping'
        settings:
          $ref: '#/components/schemas/IndexSettings'
    IndexTemplateDataStreamConfiguration:
      type: object
      description: The data stream configuration for an index template.
      properties:
        hidden:
          description: When `true`, the data stream is hidden.
          type: boolean
        allow_custom_routing:
          description: When `true`, the data stream supports custom routing.
          type: boolean
        timestamp_field:
          $ref: '#/components/schemas/DataStreamTimestampField'
    TemplateMapping:
      type: object
      description: The mapping configuration for a template.
      properties:
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        index_patterns:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/Name'
        mappings:
          $ref: '_common.mapping.yaml#/components/schemas/TypeMapping'
        order:
          type: integer
          format: int32
          description: The order in which the template should be applied.
        settings:
          type: object
          description: The index settings to apply.
          additionalProperties: true
        version:
          $ref: '_common.yaml#/components/schemas/VersionNumber'
      required:
        - aliases
        - index_patterns
        - mappings
        - order
        - settings
    IndexGetUpgradeStatus:
      type: object
      description: The upgrade status information for indexes.
      properties:
        size_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
        size_to_upgrade_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
        size_to_upgrade_ancient_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
        indices:
          type: object
          description: The upgrade status for individual indexes.
          additionalProperties:
            $ref: '#/components/schemas/UpgradeStatus'
    UpgradeStatus:
      type: object
      description: The upgrade status details for an index.
      properties:
        size_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
        size_to_upgrade_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
        size_to_upgrade_ancient_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
    UpgradeVersionStatus:
      type: object
      description: The version status for an upgrade operation.
      properties:
        upgrade_version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        oldest_lucene_segment_version:
          $ref: '_common.yaml#/components/schemas/VersionString'
    IndexError:
      type: object
      description: The error information for an index operation.
      properties:
        error:
          $ref: '#/components/schemas/IndexErrorCause'
        status:
          type: number
          description: The HTTP status code for the error.
    IndexErrorCause:
      type: object
      description: The detailed cause of an index error.
      properties:
        type:
          description: The type of error.
          type: string
        reason:
          description: A human-readable explanation of the error.
          type: string
        root_cause:
          type: array
          description: The underlying causes of the error.
          items:
            $ref: '#/components/schemas/IndexErrorCause'
        index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        index_uuid:
          $ref: '_common.yaml#/components/schemas/Uuid'
        resource.id:
          $ref: '_common.yaml#/components/schemas/IndexName'
        resource.type:
          $ref: '_common.yaml#/components/schemas/ResourceType'
      required:
        - type
      additionalProperties:
        title: metadata
        description: Additional details about the error.
    DataStreamStats:
      description: The statistics for a data stream.
      type: object
      properties:
        backing_indices:
          description: Current number of backing indexes for the data stream.
          type: integer
          format: int32
        data_stream:
          $ref: '_common.yaml#/components/schemas/Name'
        maximum_timestamp:
          $ref: '_common.yaml#/components/schemas/EpochTimeUnitMillis'
        store_size:
          $ref: '_common.yaml#/components/schemas/HumanReadableByteCount'
        store_size_bytes:
          description: The total size, in bytes, of all shards for the data stream's backing indexes.
          $ref: '_common.yaml#/components/schemas/ByteCount'
      required:
        - backing_indices
        - data_stream
        - maximum_timestamp
        - store_size_bytes
