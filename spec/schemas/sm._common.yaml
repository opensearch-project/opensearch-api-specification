openapi: 3.1.0
info:
  title: Schemas for OpenSearch Snapshot Management API
  description: Common schemas for Snapshot Management API
  version: 1.0.0
paths: {}
components:
  schemas:
    CreateUpdatePolicyRequest:
      type: object
      properties:
        description:
          type: string
          description: A user-provided description of the snapshot policy.
        creation:
          $ref: '#/components/schemas/CreationConfig'
          description: The configuration for the snapshot creation schedule.
        deletion:
          $ref: '#/components/schemas/DeletionConfig'
          description: The configuration for snapshot deletion rules and schedule.
        snapshot_config:
          $ref: '#/components/schemas/SnapshotConfig'
          description: The core configuration for how snapshots should be created and managed.
        notification:
          $ref: '#/components/schemas/NotificationConfig'
          description: The configuration for notification settings and conditions.
        enabled:
          type: boolean
          description: Whether the policy should be enabled at creation.
          default: true
      required:
        - creation
        - snapshot_config

    PolicyResponse:
      type: object
      properties:
        _id:
          type: string
          description: The policy ID.
        _version:
          type: integer
          description: The version number of the policy document.
        _seq_no:
          type: integer
          description: The sequence number for optimistic concurrency control.
        _primary_term:
          type: integer
          description: The primary term for optimistic concurrency control.
        sm_policy:
          $ref: '#/components/schemas/SMPolicy'
          description: The complete snapshot management policy configuration.
      required:
        - _id
        - _primary_term
        - _seq_no
        - _version
        - sm_policy

    SMPolicy:
      type: object
      properties:
        name:
          type: string
          description: The unique identifier for the snapshot policy.
        description:
          type: string
        schema_version:
          type: integer
          description: The version number of the policy schema.
        creation:
          $ref: '#/components/schemas/CreationConfig'
        deletion:
          $ref: '#/components/schemas/DeletionConfig'
          description: The configuration for snapshot deletion.
        snapshot_config:
          $ref: '#/components/schemas/SnapshotConfig'
        notification:
          $ref: '#/components/schemas/NotificationConfig'
        schedule:
          $ref: '#/components/schemas/IntervalSchedule'
          description: The system-generated schedule metadata returned by the API.
        enabled:
          type: boolean
        last_updated_time:
          type: integer
          description: When the policy was last modified.
        enabled_time:
          type: integer
          description: When the policy was last enabled.
      required:
        - creation
        - description
        - name
        - snapshot_config

    GetPoliciesResponse:
      type: object
      properties:
        total_policies:
          type: integer
          description: The total number of policies found.
        policies:
          type: array
          description: A list of snapshot management policies.
          items:
            $ref: '#/components/schemas/ListedPolicy'
      required:
        - policies
        - total_policies

    ListedPolicy:
      type: object
      properties:
        _id:
          type: string
          description: The policy ID.
        _seq_no:
          type: integer
          description: The sequence number for optimistic concurrency control.
        _primary_term:
          type: integer
          description: The primary term for optimistic concurrency control.
        sm_policy:
          $ref: '#/components/schemas/SMPolicy'
          description: The complete snapshot management policy configuration.
      required:
        - _id
        - sm_policy

    CreationConfig:
      type: object
      properties:
        schedule:
          $ref: '#/components/schemas/CronSchedule'
        time_limit:
          type: string
          description: The maximum amount of time for allowed snapshot creation.
      required:
        - schedule

    DeletionConfig:
      type: object
      properties:
        schedule:
          $ref: '#/components/schemas/CronSchedule'
        condition:
          $ref: '#/components/schemas/DeletionCondition'
        time_limit:
          type: string
          description: The maximum amount of time allowed for snapshot deletion operations.

    DeletionCondition:
      type: object
      properties:
        max_age:
          type: string
        max_count:
          type: integer
        min_count:
          type: integer

    SnapshotConfig:
      type: object
      properties:
        date_format:
          type: string
          description: Default "yyyy-MM-dd'T'HH:mm:ss"
        timezone:
          type: string
          description: Default UTC
        indices:
          type: string
          description: Default "*"
        repository:
          type: string
        ignore_unavailable:
          type: boolean
          description: Default false
        include_global_state:
          type: boolean
          description: Default true
        partial:
          type: boolean
          description: Default false
        metadata:
          type: object
          additionalProperties:
            type: string
      required:
        - repository

    NotificationConfig:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/NotificationChannel'
        conditions:
          $ref: '#/components/schemas/NotificationConditions'

    CronExpression:
      type: object
      properties:
        expression:
          type: string
          description: The cron expression that defines the schedule.
        timezone:
          type: string
          description: The timezone used for the cron schedule.
      required:
        - expression
        - timezone

    CronSchedule:
      type: object
      properties:
        cron:
          $ref: '#/components/schemas/CronExpression'

    IntervalConfig:
      type: object
      properties:
        start_time:
          type: integer
          description: When the interval schedule should start.
        period:
          type: integer
          description: The number of time units between executions.
        unit:
          type: string
          description: The time unit for the interval period (Days, Hours, or Minutes).
          enum: [Days, Hours, Minutes]
      required:
        - period
        - start_time
        - unit

    IntervalSchedule:
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/IntervalConfig'

    NotificationChannel:
      type: object
      properties:
        id:
          type: string
      required:
        - id

    NotificationConditions:
      type: object
      properties:
        creation:
          type: boolean
          default: true
          description: Whether to send notifications for a successful snapshot creation.
        deletion:
          type: boolean
          default: false
          description: Whether to send notifications for a successful snapshot deletion.
        failure:
          type: boolean
          default: false
          description: Whether to send notifications for failed operations.
        time_limit_exceeded:
          type: boolean
          default: false
          description: Whether to send notifications when operations exceed time limits.

    PolicyExplanation:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/ExplainedPolicy'

    ExplainedPolicy:
      type: object
      properties:
        name:
          type: string
        creation:
          $ref: '#/components/schemas/StateMetadata'
        deletion:
          $ref: '#/components/schemas/StateMetadata'
        policy_seq_no:
          type: integer
        policy_primary_term:
          type: integer
        enabled:
          type: boolean

    StateMetadata:
      type: object
      properties:
        current_state:
          type: string
          description: The current state of the policy execution.
        trigger:
          $ref: '#/components/schemas/TriggerMetadata'
          description: Any information about what triggered the policy execution.
        latest_execution:
          $ref: '#/components/schemas/ExecutionMetadata'
          description: Details about the most recent policy execution.
        retry:
          $ref: '#/components/schemas/RetryMetadata'
          description: Information about any retry attempts that occurred.

    TriggerMetadata:
      type: object
      properties:
        time:
          type: integer
          description: When the policy was triggered.

    ExecutionInfo:
      type: object
      properties:
        message:
          type: string
          description: A detailed message about the policy execution result.
        cause:
          type: string
          description: The reason policy execution failed, if applicable.

    ExecutionMetadata:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/ExecutionInfo'

    RetryMetadata:
      type: object
      properties:
        count:
          type: integer
          description: The number of retry attempts made.

    ShardsInfo:
      type: object
      properties:
        total:
          type: integer
          description: The total number of shards.
        successful:
          type: integer
          description: The number of shards that completed successfully.
        failed:
          type: integer
          description: The number of shards that failed.

    DeletePolicyResponse:
      type: object
      properties:
        _index:
          type: string
          description: The index name where the policy was stored.
        _id:
          type: string
          description: The ID of the deleted policy.
        _version:
          type: integer
          description: The version number of the operation.
        result:
          type: string
          description: The result of the delete operation.
        forced_refresh:
          type: boolean
          description: Whether a refresh was forced after the operation.
        _shards:
          $ref: '#/components/schemas/ShardsInfo'
          description: Information about shard operations.
        _seq_no:
          type: integer
          description: The sequence number for optimistic concurrency control.
        _primary_term:
          type: integer
          description: The primary term for optimistic concurrency control.
      required:
        - _id
        - _index
        - _primary_term
        - _seq_no
        - _shards
        - _version
        - forced_refresh
        - result

    RootCause:
      type: object
      properties:
        type:
          type: string
          description: The type of the root cause error.
        reason:
          type: string
          description: Detailed explanation of the root cause.

    NotFoundError:
      type: object
      properties:
        root_cause:
          type: array
          description: An array of root causes for the error.
          items:
            $ref: '#/components/schemas/RootCause'
        type:
          type: string
          description: The error type.
        reason:
          type: string
          description: The detailed reason for the error.
      required:
        - reason
        - type

    NotFoundResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/NotFoundError'
          description: The detailed error information.
        status:
          type: integer
          description: The HTTP status code.
      required:
        - error
        - status

    BadRequestResponse:
      type: object
      properties:
        error:
          type: string
          description: An error message that describes the bad request.
        status:
          type: integer
          description: The HTTP status code.