openapi: 3.1.0
info:
  title: Schemas of _common category
  description: Schemas of _common category
  version: 1.0.0
paths: {}
components:
  schemas:
    Type:
      type: string
      x-version-removed: '2.0'
    Id:
      type: string
    AcknowledgedResponseBase:
      type: object
      properties:
        acknowledged:
          description: For a successful response, this value is always true. On failure, an exception is returned instead.
          type: boolean
      required:
        - acknowledged
    DocStatus:
      description: |-
        The item level REST category class codes during indexing.
      type: object
      properties:
        1xx:
          type: integer
          format: int32
        2xx:
          type: integer
          format: int32
        3xx:
          type: integer
          format: int32
        4xx:
          type: integer
          format: int32
        5xx:
          type: integer
          format: int32
    Duration:
      description: |-
        A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
        `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
      pattern: ^([0-9\.]+)(?:d|h|m|s|ms|micros|nanos)$
      type: string
    Metadata:
      type: object
      additionalProperties: true
    GeoBounds:
      description: |-
        A geo-bounding box. It can be represented in the following ways:
        - As 4 top/bottom/left/right coordinates.
        - As 2 top_left/bottom_right points.
        - As 2 top_right/bottom_left points.
        - As a Well Known Text (WKT) bounding box.
      oneOf:
        - title: coords
          $ref: '#/components/schemas/CoordsGeoBounds'
        - title: tlbr
          $ref: '#/components/schemas/TopLeftBottomRightGeoBounds'
        - title: trbl
          $ref: '#/components/schemas/TopRightBottomLeftGeoBounds'
        - title: wkt
          $ref: '#/components/schemas/WktGeoBounds'
    CoordsGeoBounds:
      type: object
      properties:
        top:
          type: number
          format: double
        bottom:
          type: number
          format: double
        left:
          type: number
          format: double
        right:
          type: number
          format: double
      required:
        - bottom
        - left
        - right
        - top
    TopLeftBottomRightGeoBounds:
      type: object
      properties:
        top_left:
          $ref: '#/components/schemas/GeoLocation'
        bottom_right:
          $ref: '#/components/schemas/GeoLocation'
      required:
        - bottom_right
        - top_left
    GeoLocation:
      description: |-
        A latitude/longitude as a two-dimensional point. It can be represented in the following ways:
        - As a `{lat, long}` object.
        - As a geohash value.
        - As a `[lon, lat]` array.
        - As a string in `"<lat>, <lon>"` or WKT point format.
      oneOf:
        - title: latlon
          $ref: '#/components/schemas/LatLonGeoLocation'
        - title: geohash
          $ref: '#/components/schemas/GeoHashLocation'
        - title: coords
          type: array
          items:
            type: number
            format: double
        - title: text
          type: string
    LatLonGeoLocation:
      type: object
      properties:
        lat:
          description: Latitude
          type: number
          format: double
        lon:
          description: Longitude
          type: number
          format: double
      required:
        - lat
        - lon
    GeoHashLocation:
      type: object
      properties:
        geohash:
          $ref: '#/components/schemas/GeoHash'
      required:
        - geohash
    GeoHash:
      type: string
    TopRightBottomLeftGeoBounds:
      type: object
      properties:
        top_right:
          $ref: '#/components/schemas/GeoLocation'
        bottom_left:
          $ref: '#/components/schemas/GeoLocation'
      required:
        - bottom_left
        - top_right
    WktGeoBounds:
      type: object
      properties:
        wkt:
          type: string
      required:
        - wkt
    XyLocation:
      x-version-added: '2.4'
      description: |-
        A two-dimensional Cartesian point specified by x and y coordinates. It can be represented in the following ways:
         - As an `{x, y}` object.
         - As an `[x, y]` array.
         - As a string in `"x, y"` or WKT point format.
      oneOf:
        - title: cartesian
          $ref: '#/components/schemas/XyCartesianCoordinates'
        - title: coords
          type: array
          items:
            type: number
            format: double
        - title: text
          type: string
    XyCartesianCoordinates:
      x-version-added: '2.4'
      type: object
      properties:
        x:
          description: The x coordinate.
          type: number
          format: double
        y:
          description: The y coordinate.
          type: number
          format: double
      required:
        - x
        - y
    EpochTimeUnitMillis:
      allOf:
        - $ref: '#/components/schemas/UnitMillis'
    UnitMillis:
      description: The time unit for milliseconds.
      type: integer
      format: int64
    DurationLarge:
      description: |-
        A date histogram interval, similar to `Duration`, with support for additional units: `w` (week), `M` (month), `q` (quarter), and `y` (year).
      type: string
    FieldValue:
      description: A field value.
      type: 
        - boolean
        - 'null'
        - number
        - object
        - string
    Void:
      description: |-
        The absence of any type. This is commonly used in APIs that don't return a body.

        Although "void" is generally used for a unit type that has only one value, this is interpreted as
        the bottom type, which has no value. Most languages have a unit type, but few have a bottom type.

        See https://en.m.wikipedia.org/wiki/Unit_type and https://en.m.wikipedia.org/wiki/Bottom_type.
      type: object
    GeoTile:
      description: A map tile reference, represented as `{zoom}/{x}/{y}`.
      type: string
    GeoHexCell:
      description: A map hex cell (H3) reference.
      type: string
    IndexName:
      type: string
    Field:
      description: The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
      type: string
    SequenceNumber:
      type: integer
      format: int64
    VersionNumber:
      type: integer
      format: int64
    SortResults:
      type: array
      items:
        $ref: '#/components/schemas/FieldValue'
    GeoLine:
      type: object
      properties:
        type:
          description: Always `"LineString"`
          type: string
        coordinates:
          description: An array of `[lon, lat]` coordinates.
          type: array
          items:
            type: array
            items:
              type: number
              format: double
      required:
        - coordinates
        - type
    ClusterStatistics:
      type: object
      properties:
        skipped:
          type: integer
          format: int32
        successful:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        partial:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        details:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClusterDetails'
      required:
        - failed
        - partial
        - running
        - skipped
        - successful
        - total
    ClusterDetails:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ClusterSearchStatus'
        indices:
          type: string
        took:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        timed_out:
          type: boolean
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/ShardFailure'
      required:
        - indices
        - status
        - timed_out
    ClusterSearchStatus:
      type: string
      enum:
        - failed
        - partial
        - running
        - skipped
        - successful
    DurationValueUnitMillis:
      allOf:
        - $ref: '#/components/schemas/UnitMillis'
    ShardStatistics:
      type: object
      properties:
        failed:
          $ref: '#/components/schemas/uint'
        successful:
          $ref: '#/components/schemas/uint'
        total:
          $ref: '#/components/schemas/uint'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/ShardFailure'
        skipped:
          $ref: '#/components/schemas/uint'
      required:
        - failed
        - successful
        - total
    uint:
      type: integer
    ShardFailure:
      type: object
      properties:
        index:
          $ref: '#/components/schemas/IndexName'
        node:
          type: string
        reason:
          $ref: '#/components/schemas/ErrorCause'
        shard:
          type: integer
        status:
          type: string
      required:
        - reason
        - shard
    ErrorCause:
      type: object
      properties:
        type:
          description: The type of error.
          type: string
        reason:
          description: A human-readable explanation of the error, in English.
          type: string
        stack_trace:
          description: The server stack trace, present only if the `error_trace=true` parameter was sent with the request.
          type: string
        caused_by:
          $ref: '#/components/schemas/ErrorCause'
        root_cause:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
      required:
        - type
      additionalProperties:
        title: metadata
        description: Any additional information about the error.
    DurationValueUnitNanos:
      allOf:
        - $ref: '#/components/schemas/UnitNanos'
    UnitNanos:
      description: Time unit for nanoseconds.
      type: integer
      format: int64
    ScrollId:
      type: string
    Routing:
      oneOf:
        - type: string
        - type: array
          items:
            type: string
    DateTime:
      description: |-
        A date and time, either as a string whose format depends on the context (defaulting to ISO_8601) or the
        number of milliseconds since the epoch. OpenSearch accepts both as an input but will generally output a string.
        representation.
      oneOf:
        - type: string
        - $ref: '#/components/schemas/EpochTimeUnitMillis'
    Indices:
      oneOf:
        - $ref: '#/components/schemas/IndexName'
        - type: array
          items:
            $ref: '#/components/schemas/IndexName'
    Fields:
      oneOf:
        - $ref: '#/components/schemas/Field'
        - type: array
          items:
            $ref: '#/components/schemas/Field'
    ExpandWildcards:
      oneOf:
        - $ref: '#/components/schemas/ExpandWildcard'
        - type: array
          items:
            $ref: '#/components/schemas/ExpandWildcard'
    ExpandWildcard:
      oneOf:
        - type: string
          const: all
          description: Match any index, including hidden ones.
        - type: string
          const: closed
          description: Match closed, non-hidden indices.
        - type: string
          const: hidden
          description: Match hidden indices. Must be combined with open, closed, or both.
        - type: string
          const: none
          description: Wildcard expressions are not accepted.
        - type: string
          const: open
          description: Match open, non-hidden indices.
    VersionString:
      type: string
    SearchType:
      type: string
      enum:
        - dfs_query_then_fetch
        - query_then_fetch
    SuggestMode:
      type: string
      enum:
        - always
        - missing
        - popular
    MinimumShouldMatch:
      description: The minimum number of terms that should match as an integer, percentage, or range.
      oneOf:
        - type: integer
          format: int32
        - type: string
    Distance:
      type: string
    DateMath:
      type: string
    Script:
      oneOf:
        - title: inline
          $ref: '#/components/schemas/InlineScript'
        - title: stored
          $ref: '#/components/schemas/StoredScriptId'
    InlineScript:
      oneOf:
        - title: source
          type: string
        - allOf:
            - $ref: '#/components/schemas/ScriptBase'
            - type: object
              properties:
                lang:
                  $ref: '#/components/schemas/ScriptLanguage'
                options:
                  type: object
                  additionalProperties:
                    type: string
                source:
                  description: The script source.
                  type: string
              required:
                - source
    ScriptLanguage:
      anyOf:
        - title: builtin
          $ref: '#/components/schemas/BuiltinScriptLanguage'
        - title: custom
          type: string
    BuiltinScriptLanguage:
      type: string
      enum:
        - expression
        - java
        - mustache
        - painless
    ScriptBase:
      type: object
      properties:
        params:
          description: |-
            Specifies any named parameters that are passed into the script as variables. 
            Use parameters instead of hard-coded values to decrease compilation time. 
          type: object
          additionalProperties: true
    StoredScriptId:
      allOf:
        - $ref: '#/components/schemas/ScriptBase'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/Id'
          required:
            - id
    MultiTermQueryRewrite:
      type: string
      enum:
        - constant_score
        - constant_score_boolean
        - scoring_boolean
        - top_terms_N
        - top_terms_blended_freqs_N
        - top_terms_boost_N
    Fuzziness:
      oneOf:
        - type: string
        - type: integer
          format: int32
    GeoDistanceType:
      type: string
      enum:
        - arc
        - plane
    Name:
      type: string
    ScriptField:
      type: object
      properties:
        script:
          $ref: '#/components/schemas/Script'
        ignore_failure:
          type: boolean
      required:
        - script
    Sort:
      oneOf:
        - $ref: '#/components/schemas/SortCombinations'
        - type: array
          items:
            $ref: '#/components/schemas/SortCombinations'
    SortCombinations:
      oneOf:
        - title: field
          $ref: '#/components/schemas/Field'
        - title: field_with_order
          $ref: '#/components/schemas/FieldWithOrder'
        - title: options
          $ref: '#/components/schemas/SortOptions'
    FieldWithOrder:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ScoreSort'
    SortOptions:
      type: object
      properties:
        _score:
          $ref: '#/components/schemas/ScoreSort'
        _doc:
          $ref: '#/components/schemas/ScoreSort'
        _geo_distance:
          $ref: '#/components/schemas/GeoDistanceSort'
        _script:
          $ref: '#/components/schemas/ScriptSort'
      minProperties: 1
      maxProperties: 1
    ScoreSort:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    GeoDistanceSort:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/SortMode'
        distance_type:
          $ref: '#/components/schemas/GeoDistanceType'
        ignore_unmapped:
          type: boolean
        order:
          $ref: '#/components/schemas/SortOrder'
        unit:
          $ref: '#/components/schemas/DistanceUnit'
    SortMode:
      type: string
      enum:
        - avg
        - max
        - median
        - min
        - sum
    DistanceUnit:
      type: string
      enum:
        - cm
        - ft
        - in
        - km
        - m
        - mi
        - mm
        - nmi
        - yd
    ScriptSort:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/SortOrder'
        script:
          $ref: '#/components/schemas/Script'
        type:
          $ref: '#/components/schemas/ScriptSortType'
        mode:
          $ref: '#/components/schemas/SortMode'
        nested:
          $ref: '#/components/schemas/NestedSortValue'
      required:
        - script
    ScriptSortType:
      type: string
      enum:
        - number
        - string
        - version
    NestedSortValue:
      type: object
      properties:
        filter:
          $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        max_children:
          type: integer
          format: int32
        nested:
          $ref: '#/components/schemas/NestedSortValue'
        path:
          $ref: '#/components/schemas/Field'
      required:
        - path
    RelationName:
      type: string
    Ids:
      oneOf:
        - $ref: '#/components/schemas/Id'
        - type: array
          items:
            $ref: '#/components/schemas/Id'
    VersionType:
      type: string
      enum:
        - external
        - external_gte
        - force
        - internal
    TimeZone:
      type: string
    DateFormat:
      type: string
    PipeSeparatedFlagsSimpleQueryStringFlag:
      description: |-
        A set of flags represented as a single enum value or a set of values that are encoded
        as a pipe-separated string.

        Depending on the target language, code generators can use this hint to generate language specific
        flags enum constructs and the corresponding (de-)serialization code.
      oneOf:
        - $ref: '_common.query_dsl.yaml#/components/schemas/SimpleQueryStringFlag'
        - type: string
    GeoHashPrecision:
      description: The level of geohash precision, which can be expressed as a geohash length between 1 and 12 or as a distance measure, such as "1km" or "10m".
      oneOf:
        - type: integer
          format: int32
        - type: string
    GeoTilePrecision:
      type: number
    EmptyObject:
      type: object
    KnnField:
      type: object
      properties:
        vector:
          $ref: '#/components/schemas/QueryVector'
        k:
          description: The total number of nearest neighbors to return as top hits. 
          type: integer
          format: int32
        min_score:
          description: The minimum similarity score required in order for a neighbor to be considered a hit. 
          type: number
          format: float
          x-version-added: '2.14'
        max_distance:
          description: The maximum physical vector space distance required in order for a neighbor to be considered a hit.
          type: number
          format: float
          x-version-added: '2.14'
        filter:
          description: The filters for the k-NN search query.
          oneOf:
            - $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
            - type: array
              items:
                $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        boost:
          description: The boost value applied to k-NN scores.
          type: number
          format: float
        method_parameters:
          type: object
          x-version-added: '2.16'
          additionalProperties:
            type: integer
            format: int32
        rescore:
          type: object
          x-version-added: '2.17'
          additionalProperties:
            type: number
            format: float
      required:
        - vector
    QueryVector:
      type: array
      items:
        type: number
        format: float
    SlicedScroll:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/Field'
        id:
          $ref: '#/components/schemas/Id'
        max:
          type: integer
          format: int32
      required:
        - id
        - max
    NodeName:
      type: string
    Refresh:
      type: string
      enum:
        - 'false'
        - 'true'
        - wait_for
    WaitForActiveShards:
      oneOf:
        - type: number
        - $ref: '#/components/schemas/WaitForActiveShardOptions'
    WaitForActiveShardOptions:
      type: string
      enum:
        - all
        - index-setting
    InlineGetDictUserDefined:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            type: object
        found:
          type: boolean
        _seq_no:
          $ref: '#/components/schemas/SequenceNumber'
        _primary_term:
          type: integer
          format: int32
        _routing:
          $ref: '#/components/schemas/Routing'
        _source:
          type: object
          additionalProperties: true
      required:
        - found
    Names:
      oneOf:
        - $ref: '#/components/schemas/Name'
        - type: array
          items:
            $ref: '#/components/schemas/Name'
    NodeIds:
      oneOf:
        - $ref: '#/components/schemas/NodeId'
        - type: array
          items:
            $ref: '#/components/schemas/NodeId'
    NodeId:
      type: string
    HumanReadableByteCount:
      type: string
      pattern: '\d+(\.\d+)?(b|kb|k|mb|m|gb|g|tb|t|pb|p)'
    ByteUnit:
      type: string
      enum:
        - b
        - g
        - gb
        - k
        - kb
        - m
        - mb
        - p
        - pb
        - t
        - tb
    ByteCount:
      type: integer
      format: int64
    PercentageNumber:
      type: number
      format: double
    PercentageString:
      type: string
      pattern: '\d+(\.\d+)?'
    Host:
      type: string
    Ip:
      type: string
    StringifiedEpochTimeUnitSeconds:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - $ref: '#/components/schemas/EpochTimeUnitSeconds'
        - type: string
    EpochTimeUnitSeconds:
      allOf:
        - $ref: '#/components/schemas/UnitSeconds'
    UnitSeconds:
      description: Time unit for seconds.
      type: integer
      format: int64
    TimeOfDay:
      description: Time of day, expressed as HH:MM:SS.
      type: string
    TimeUnit:
      type: string
      enum:
        - d
        - h
        - m
        - micros
        - ms
        - nanos
        - s
    HealthStatus:
      type: string
      enum:
        - green
        - red
        - yellow
    HealthStatusCapitalized:
      type: string
      enum:
        - GREEN
        - RED
        - YELLOW
    ScheduleTimeOfDay:
      description: A time of day, expressed either as `hh:mm`, `noon`, `midnight`, or an hour/minutes structure.
      oneOf:
        - type: string
        - $ref: '#/components/schemas/HourAndMinute'
    HourAndMinute:
      type: object
      properties:
        hour:
          type: array
          items:
            type: number
        minute:
          type: array
          items:
            type: number
      required:
        - hour
        - minute
    Uuid:
      type: string
    ScrollIds:
      oneOf:
        - $ref: '#/components/schemas/ScrollId'
        - type: array
          items:
            $ref: '#/components/schemas/ScrollId'
    TransportAddress:
      type: string
    Stringifiedinteger:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - type: integer
        - type: string
    Stringifiedboolean:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - type: boolean
        - type: string
    PipelineName:
      type: string
    StringifiedEpochTimeUnitMillis:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - $ref: '#/components/schemas/EpochTimeUnitMillis'
        - type: string
    DFIIndependenceMeasure:
      type: string
      enum:
        - chisquared
        - saturated
        - standardized
    DFRAfterEffect:
      type: string
      enum:
        - b
        - l
        - no
    DFRBasicModel:
      type: string
      enum:
        - be
        - d
        - g
        - if
        - in
        - ine
        - p
    TermFrequencyNormalization:
      type: string
      enum:
        - h1
        - h2
        - h3
        - no
        - z
    IBDistribution:
      type: string
      enum:
        - ll
        - spl
    IBLambda:
      type: string
      enum:
        - df
        - ttf
    byte:
      type: number
    short:
      type: number
    ulong:
      type: number
    Level:
      type: string
      enum:
        - cluster
        - indices
        - shards
    WaitForEvents:
      type: string
      enum:
        - high
        - immediate
        - languid
        - low
        - normal
        - urgent
    DataStreamName:
      type: string
    CompletionStats:
      type: object
      properties:
        size_in_bytes:
          description: The total amount, in bytes, of memory used for completion across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldSizeUsage'
      required:
        - size_in_bytes
    FieldSizeUsage:
      type: object
      properties:
        size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
      required:
        - size_in_bytes
    DocStats:
      type: object
      properties:
        count:
          description: |-
            The total number of non-deleted documents across all primary shards assigned to the selected nodes.
            This number is based on documents in Lucene segments and may include documents from nested fields.
          type: number
        deleted:
          description: |-
            The total number of deleted documents across all primary shards assigned to the selected nodes.
            This number is based on the number of documents stored in Lucene segments.
            OpenSearch reclaims the disk space previously occupied by the deleted Lucene documents when a segment is merged.
          type: number
      required:
        - count
    FielddataStats:
      type: object
      properties:
        evictions:
          type: number
        memory_size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        memory_size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldMemoryUsage'
      required:
        - memory_size_in_bytes
    FieldMemoryUsage:
      type: object
      properties:
        memory_size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        memory_size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
      required:
        - memory_size_in_bytes
    QueryCacheStats:
      type: object
      properties:
        cache_count:
          description: |-
            The total number of entries added to the query cache across all shards assigned to the selected nodes.
            This number includes all current and evicted entries.
          type: number
        cache_size:
          description: The total number of entries currently stored in the query cache across all shards assigned to the selected nodes.
          type: number
        evictions:
          description: The total number of query cache evictions across all shards assigned to the selected nodes.
          type: number
        hit_count:
          description: The total number of query cache hits across all shards assigned to the selected nodes.
          type: number
        memory_size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        memory_size_in_bytes:
          description: The total amount, in bytes, of memory used for the query cache across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        miss_count:
          description: The total number of query cache misses across all shards assigned to the selected nodes.
          type: number
        total_count:
          description: The total number of hits and misses stored in the query cache across all shards assigned to the selected nodes.
          type: number
      required:
        - cache_count
        - cache_size
        - evictions
        - hit_count
        - memory_size_in_bytes
        - miss_count
        - total_count
    RemoteStoreStats:
      type: object
      description: Statistics related to remote segment store operations.
      properties:
        upload:
          $ref: '#/components/schemas/RemoteStoreUploadStats'
        download:
          $ref: '#/components/schemas/RemoteStoreDownloadStats'
      required:
        - download
        - upload
    RemoteStoreTranslogStats:
      type: object
      properties:
        upload:
          $ref: '#/components/schemas/RemoteStoreTranslogUploadStats'
      required:
        - upload
    RemoteStoreTranslogUploadStats:
      type: object
      description: Statistics related to uploads to the remote translog store.
      properties:
        total_uploads:
          $ref: '#/components/schemas/RemoteStoreTranslogUploadTotalUploadsStats'
        total_upload_size:
          $ref: '#/components/schemas/RemoteStoreTranslogUploadTotalUploadSizeStats'
      required:
        - total_upload_size
        - total_uploads
    RemoteStoreTranslogUploadTotalUploadsStats:
      type: object
      description: The number of syncs to the remote translog store.
      properties:
        failed:
          description: The number of failed upload syncs to the remote translog store.
          type: number
        started:
          description: The number of upload syncs to the remote translog store that have started.
          type: number
        succeeded:
          description: The number of successful upload syncs to the remote translog store.
          type: number
      required:
        - failed
        - started
        - succeeded
    RemoteStoreTranslogUploadTotalUploadSizeStats:
      type: object
      description: The total amount of data uploaded to the remote translog store. 
      properties:
        failed:
          description: The number of bytes that failed to upload to the remote translog store.
          $ref: '#/components/schemas/HumanReadableByteCount'
        failed_bytes:
          description: The number of bytes that failed to upload to the remote translog store.
          $ref: '#/components/schemas/ByteCount'
        started:
          description: The number of bytes successfully uploaded to the remote translog store.
          $ref: '#/components/schemas/HumanReadableByteCount'
        started_bytes:
          description: The number of bytes successfully uploaded to the remote translog store.
          $ref: '#/components/schemas/ByteCount'
        succeeded:
          description: The number of bytes successfully uploaded to the remote translog store.
          $ref: '#/components/schemas/HumanReadableByteCount'
        succeeded_bytes:
          description: The number of bytes successfully uploaded to the remote translog store.
          $ref: '#/components/schemas/ByteCount'
      required:
        - failed_bytes
        - started_bytes
        - succeeded_bytes
    RemoteStoreUploadStats:
      type: object
      description: Statistics related to uploads to the remote segment store.
      properties:
        max_refresh_time_lag:
          description: The maximum duration that the remote refresh is behind the local refresh.
          $ref: '#/components/schemas/Duration'
        max_refresh_time_lag_in_millis:
          description: The maximum duration, in milliseconds, that the remote refresh is behind the local refresh.
          $ref: '#/components/schemas/DurationValueUnitMillis'
        pressure:
          $ref: '#/components/schemas/RemoteStoreUploadPressureStats'
        refresh_size_lag:
          $ref: '#/components/schemas/RemoteStoreUploadRefreshSizeLagStats'
        total_time_spent:
          description: The total amount of time spent on uploads to the remote segment store.
          $ref: '#/components/schemas/Duration'
        total_time_spent_in_millis:
          description: The total amount of time, in milliseconds, spent on uploads to the remote segment store.
          $ref: '#/components/schemas/DurationValueUnitMillis'
        total_upload_size:
          $ref: '#/components/schemas/RemoteStoreUploadDownloadStats'
      required:
        - max_refresh_time_lag_in_millis
        - pressure
        - refresh_size_lag
        - total_time_spent_in_millis
        - total_upload_size
    RemoteStoreUploadDownloadStats:
      type: object
      description: The amount of data, in bytes, uploaded or downloaded to/from the remote segment store.
      properties:
        failed:
          description: The number of bytes that failed to upload to/from the remote segment store.
          $ref: '#/components/schemas/HumanReadableByteCount'
        failed_bytes:
          description: The number of bytes that failed to upload to/from the remote segment store.
          $ref: '#/components/schemas/ByteCount'
        started:
          description: The number of bytes to upload/download to/from the remote segment store after the upload/download has started.
          $ref: '#/components/schemas/HumanReadableByteCount'
        started_bytes:
          description: The number of bytes to upload/download to/from the remote segment store after the upload/download has started.
          $ref: '#/components/schemas/ByteCount'
        succeeded:
          description: The number of bytes successfully uploaded/downloaded to/from the remote segment store.
          $ref: '#/components/schemas/HumanReadableByteCount'
        succeeded_bytes:
          description: The number of bytes successfully uploaded/downloaded to/from the remote segment store.
          $ref: '#/components/schemas/ByteCount'
      required:
        - failed_bytes
        - started_bytes
        - succeeded_bytes
    RemoteStoreUploadPressureStats:
      type: object
      description: Statistics related to segment store upload backpressure. 
      properties:
        total_rejections:
          description: The total number of requests rejected due to segment store upload backpressure. 
          type: number
      required:
        - total_rejections
    RemoteStoreUploadRefreshSizeLagStats:
      type: object
      description: The amount of lag during upload between the remote segment store and the local store.
      properties:
        max:
          description: The maximum amount of lag, in bytes, during the upload refresh between the remote segment store and the local store. 
          $ref: '#/components/schemas/HumanReadableByteCount'
        max_bytes:
          description: The maximum amount of lag, in bytes, during the upload refresh between the remote segment store and the local store. 
          $ref: '#/components/schemas/ByteCount'
        total:
          description: The total number of bytes that lagged during the upload refresh between the remote segment store and the local store. 
          $ref: '#/components/schemas/HumanReadableByteCount'
        total_bytes:
          description: The total number of bytes that lagged during the upload refresh between the remote segment store and the local store. 
          $ref: '#/components/schemas/ByteCount'
      required:
        - max_bytes
        - total_bytes
    RemoteStoreDownloadStats:
      type: object
      description: Statistics related to downloads to the remote segment store. 
      properties:
        total_download_size:
          description: The total amount of data downloaded from the remote segment store. 
          $ref: '#/components/schemas/RemoteStoreUploadDownloadStats'
        total_time_spent:
          description: The total amount of time spent on downloads from the remote segment store.
          $ref: '#/components/schemas/Duration'
        total_time_spent_in_millis:
          description: The total duration, in milliseconds, spent on downloads from the remote segment store. 
          $ref: '#/components/schemas/DurationValueUnitMillis'
      required:
        - total_download_size
        - total_time_spent_in_millis
    SegmentReplicationStats:
      type: object
      properties:
        max_bytes_behind:
          $ref: '#/components/schemas/ByteCount'
        max_replication_lag:
          $ref: '#/components/schemas/ByteCount'
        total_bytes_behind:
          $ref: '#/components/schemas/ByteCount'
      required:
        - max_bytes_behind
        - max_replication_lag
        - total_bytes_behind
    SegmentsStats:
      type: object
      properties:
        count:
          description: The total number of segments across all shards assigned to the selected nodes.
          type: number
        doc_values_memory:
          $ref: '#/components/schemas/HumanReadableByteCount'
        doc_values_memory_in_bytes:
          description: The total amount, in bytes, of memory used for document values across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        file_sizes:
          description: |-
            This object is not populated by the cluster stats API.
            To get information on segment files, use the node stats API.
          type: object
          additionalProperties:
            $ref: 'indices.stats.yaml#/components/schemas/ShardFileSizeInfo'
        fixed_bit_set:
          $ref: '#/components/schemas/HumanReadableByteCount'
        fixed_bit_set_memory_in_bytes:
          description: The total amount of memory, in bytes, used by fixed bit sets across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        index_writer_memory:
          $ref: '#/components/schemas/HumanReadableByteCount'
        index_writer_max_memory_in_bytes:
          $ref: '#/components/schemas/ByteCount'
        index_writer_memory_in_bytes:
          description: The total amount, in bytes, of memory used by all index writers across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        max_unsafe_auto_id_timestamp:
          description: The Unix timestamp, in milliseconds, of the most recently retried indexing request.
          type: number
        memory:
          description: The total amount of memory used for segments across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/HumanReadableByteCount'
        memory_in_bytes:
          description: The total amount, in bytes, of memory used for segments across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        norms_memory:
          description: The total amount of memory used for normalization factors across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/HumanReadableByteCount'
        norms_memory_in_bytes:
          description: The total amount, in bytes, of memory used for normalization factors across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        points_memory:
          description: The total amount of memory used for points across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/HumanReadableByteCount'
        points_memory_in_bytes:
          description: The total amount, in bytes, of memory used for points across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        stored_fields_memory:
          description: The total amount of memory used for stored fields across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/HumanReadableByteCount'
        stored_fields_memory_in_bytes:
          description: The total amount, in bytes, of memory used for stored fields across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        terms_memory:
          description: The total amount of memory used for terms across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/HumanReadableByteCount'
        terms_memory_in_bytes:
          description: The total amount, in bytes, of memory used for terms across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        term_vectors_memory:
          description: The total amount of memory used for term vectors across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/HumanReadableByteCount'
        term_vectors_memory_in_bytes:
          description: The total amount, in bytes, of memory used for term vectors across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        version_map_memory:
          description: The total amount of memory used by all version maps across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/HumanReadableByteCount'
        version_map_memory_in_bytes:
          description: The total amount, in bytes, of memory used by all version maps across all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        remote_store:
          $ref: '#/components/schemas/RemoteStoreStats'
        segment_replication:
          $ref: '#/components/schemas/SegmentReplicationStats'
      required:
        - count
        - doc_values_memory_in_bytes
        - file_sizes
        - fixed_bit_set_memory_in_bytes
        - index_writer_memory_in_bytes
        - max_unsafe_auto_id_timestamp
        - memory_in_bytes
        - norms_memory_in_bytes
        - points_memory_in_bytes
        - stored_fields_memory_in_bytes
        - term_vectors_memory_in_bytes
        - terms_memory_in_bytes
        - version_map_memory_in_bytes
    StoreStats:
      type: object
      properties:
        size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        size_in_bytes:
          description: The total size, in bytes, of all shards assigned to the selected nodes.
          $ref: '#/components/schemas/ByteCount'
        reserved:
          $ref: '#/components/schemas/HumanReadableByteCount'
        reserved_in_bytes:
          description: A prediction, in bytes, of how much larger the shard stores will eventually grow due to ongoing peer recoveries, restoring snapshots, and similar activities.
          $ref: '#/components/schemas/ByteCount'
      required:
        - reserved_in_bytes
        - size_in_bytes
    PluginStats:
      type: object
      properties:
        classname:
          type: string
        description:
          type: string
        extended_plugins:
          type: array
          items:
            type: string
        has_native_controller:
          type: boolean
        java_version:
          $ref: '#/components/schemas/VersionString'
        name:
          $ref: '#/components/schemas/Name'
        version:
          $ref: '#/components/schemas/VersionString'
        licensed:
          type: boolean
        custom_foldername:
          type: ['null', string]
        opensearch_version:
          $ref: '#/components/schemas/VersionString'
      required:
        - classname
        - description
        - extended_plugins
        - has_native_controller
        - java_version
        - name
        - opensearch_version
        - version
    NodeStatistics:
      type: object
      properties:
        failures:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        total:
          description: The total number of nodes selected by the request. 
          type: integer
        successful:
          description: The number of nodes that responded successfully to the request. 
          type: integer
        failed:
          description: The number of nodes that rejected the request or failed to respond. If this value is not 0, then a reason for the rejection or failure is included in the response. 
          type: integer
      required:
        - failed
        - successful
        - total
    WriteResponseBase:
      type: object
      properties:
        _type:
          $ref: '#/components/schemas/Type'
        _id:
          $ref: '#/components/schemas/Id'
        _index:
          $ref: '#/components/schemas/IndexName'
        _primary_term:
          type: integer
          format: int64
        result:
          $ref: '#/components/schemas/Result'
        _seq_no:
          $ref: '#/components/schemas/SequenceNumber'
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        _version:
          $ref: '#/components/schemas/VersionNumber'
        forced_refresh:
          type: boolean
      required:
        - _id
        - _index
        - _primary_term
        - _seq_no
        - _shards
        - _version
        - result
    Result:
      type: string
      enum:
        - created
        - deleted
        - noop
        - not_found
        - updated
    Conflicts:
      type: string
      enum:
        - abort
        - proceed
    Slices:
      description: The slice configuration used to parallelize a process.
      oneOf:
        - type: number
        - $ref: '#/components/schemas/SlicesCalculation'
    SlicesCalculation:
      type: string
      enum:
        - auto
    Retries:
      type: object
      properties:
        bulk:
          type: integer
          format: int64
        search:
          type: integer
          format: int64
      required:
        - bulk
        - search
    TaskId:
      oneOf:
        - type: string
        - type: number
    TaskFailure:
      type: object
      properties:
        task_id:
          type: integer
        node_id:
          $ref: '#/components/schemas/NodeId'
        status:
          type: string
        reason:
          $ref: '#/components/schemas/ErrorCause'
      required:
        - node_id
        - reason
        - status
        - task_id
    InlineGet:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            type: object
        found:
          type: boolean
        _seq_no:
          $ref: '#/components/schemas/SequenceNumber'
        _primary_term:
          type: number
        _routing:
          $ref: '#/components/schemas/Routing'
        _source:
          type: object
      required:
        - found
    IndexAlias:
      type: string
    ErrorResponseBase:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorCause'
        status:
          type: number
      required:
        - error
        - status
    StoredScript:
      type: object
      properties:
        lang:
          $ref: '#/components/schemas/ScriptLanguage'
        options:
          type: object
          additionalProperties:
            type: string
        source:
          description: The script source.
          type: string
      required:
        - lang
        - source
    OpType:
      type: string
      enum:
        - create
        - index
    ShardsOperationResponseBase:
      type: object
      properties:
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
      required:
        - _shards
    IndicesResponseBase:
      allOf:
        - $ref: '#/components/schemas/AcknowledgedResponseBase'
        - type: object
          properties:
            _shards:
              $ref: '#/components/schemas/ShardStatistics'
    DataStreamNames:
      oneOf:
        - $ref: '#/components/schemas/DataStreamName'
        - type: array
          items:
            $ref: '#/components/schemas/DataStreamName'
    FlushStats:
      type: object
      properties:
        periodic:
          type: number
        total:
          type: number
        total_time:
          $ref: '#/components/schemas/Duration'
        total_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
      required:
        - periodic
        - total
        - total_time_in_millis
    GetStats:
      type: object
      properties:
        total:
          type: number
        getTime:
          $ref: '#/components/schemas/Duration'
        time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        exists_total:
          type: number
        exists_time:
          $ref: '#/components/schemas/Duration'
        exists_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        missing_total:
          type: number
        missing_time:
          $ref: '#/components/schemas/Duration'
        missing_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        current:
          type: number
      required:
        - current
        - exists_time_in_millis
        - exists_total
        - missing_time_in_millis
        - missing_total
        - time_in_millis
        - total
    IndexingStats:
      type: object
      properties:
        index_total:
          type: number
        index_time:
          $ref: '#/components/schemas/Duration'
        index_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        index_current:
          type: number
        index_failed:
          type: number
        delete_total:
          type: number
        delete_time:
          $ref: '#/components/schemas/Duration'
        delete_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        delete_current:
          type: number
        noop_update_total:
          type: number
        is_throttled:
          type: boolean
        throttle_time:
          $ref: '#/components/schemas/Duration'
        throttle_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        doc_status:
          $ref: '#/components/schemas/DocStatus'
        types:
          x-version-removed: '2.0'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndexingStats'
      required:
        - delete_current
        - delete_time_in_millis
        - delete_total
        - index_current
        - index_failed
        - index_time_in_millis
        - index_total
        - is_throttled
        - noop_update_total
        - throttle_time_in_millis
    MergesStats:
      type: object
      properties:
        current:
          type: number
        current_docs:
          type: number
        current_size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        current_size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
        total:
          type: number
        total_auto_throttle:
          $ref: '#/components/schemas/HumanReadableByteCount'
        total_auto_throttle_in_bytes:
          $ref: '#/components/schemas/ByteCount'
        total_docs:
          type: number
        total_size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        total_size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
        total_stopped_time:
          $ref: '#/components/schemas/Duration'
        total_stopped_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        total_throttled_time:
          $ref: '#/components/schemas/Duration'
        total_throttled_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        total_time:
          $ref: '#/components/schemas/Duration'
        total_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        unreferenced_file_cleanups_performed:
          type: number
      required:
        - current
        - current_docs
        - current_size_in_bytes
        - total
        - total_auto_throttle_in_bytes
        - total_docs
        - total_size_in_bytes
        - total_stopped_time_in_millis
        - total_throttled_time_in_millis
        - total_time_in_millis
    RecoveryStats:
      type: object
      properties:
        current_as_source:
          type: number
        current_as_target:
          type: number
        throttle_time:
          $ref: '#/components/schemas/Duration'
        throttle_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
      required:
        - current_as_source
        - current_as_target
        - throttle_time_in_millis
    RefreshStats:
      type: object
      properties:
        external_total:
          type: number
        external_total_time:
          $ref: '#/components/schemas/Duration'
        external_total_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        listeners:
          type: number
        total:
          type: number
        total_time:
          $ref: '#/components/schemas/Duration'
        total_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
      required:
        - external_total
        - external_total_time_in_millis
        - listeners
        - total
        - total_time_in_millis
    RequestCacheStats:
      type: object
      properties:
        evictions:
          type: number
        hit_count:
          type: number
        memory_size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        memory_size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
        miss_count:
          type: number
      required:
        - evictions
        - hit_count
        - memory_size_in_bytes
        - miss_count
    SearchStats:
      type: object
      properties:
        open_contexts:
          description: The number of open search contexts. 
          type: number
        query_current:
          description: The number of currently running shard query operations. 
          type: number
        query_time:
          description: The total amount of time taken to complete all shard query operations. 
          $ref: '#/components/schemas/Duration'
        query_time_in_millis:
          description: The total amount of time taken to complete all shard query operations, in milliseconds. 
          $ref: '#/components/schemas/DurationValueUnitMillis'
        query_total:
          description: The total number of shard query operations.
          type: number
        concurrent_query_total:
          description: The total number of query operations using concurrent segment search. 
          type: number
        concurrent_query_time:
          $ref: '#/components/schemas/Duration'
        concurrent_query_time_in_millis:
          description: The total amount of time taken by all query operations using concurrent segment search, in milliseconds.
          $ref: '#/components/schemas/DurationValueUnitMillis'
        concurrent_query_current:
          description: The number of currently running query operations using concurrent segment search.
          type: number
        concurrent_avg_slice_count:
          description: The average slice count of all search requests. This is computed as the total slice count divided by the total number of concurrent search requests.
          type: number
        fetch_current:
          description: The number of currently running shard fetch operations. 
          type: number
        fetch_time:
          description: The total amount of time taken to complete all shard fetch operations.
          $ref: '#/components/schemas/Duration'
        fetch_time_in_millis:
          description: The total amount of time taken to complete all shard fetch operations, in milliseconds. 
          $ref: '#/components/schemas/DurationValueUnitMillis'
        fetch_total:
          description: The total number of shard fetch operations.
          type: number
        scroll_current:
          description: The number of shard scroll operations that are currently running.
          type: number
        scroll_time:
          description: The total amount of time taken to complete all shard scroll operations.
          $ref: '#/components/schemas/Duration'
        scroll_time_in_millis:
          description: The total amount of time taken to complete all shard scroll operations, in milliseconds. 
          $ref: '#/components/schemas/DurationValueUnitMillis'
        scroll_total:
          description: The total number of shard scroll operations.
          type: number
        point_in_time_total:
          description: The total number of shard Point in Time (PIT) contexts created (completed and active) since the node last restarted. 
          type: number
        point_in_time_time:
          $ref: '#/components/schemas/Duration'
        point_in_time_time_in_millis:
          description: The amount of time that shard PIT contexts have been held open since the node last restarted, in milliseconds. 
          $ref: '#/components/schemas/DurationValueUnitMillis'
        point_in_time_current:
          description: The number of currently open shard PIT contexts. 
          type: number
        suggest_current:
          description: The number of currently running shard suggest operations. 
          type: number
        suggest_time:
          description: The total amount of time take to complete all shard suggest operations.
          $ref: '#/components/schemas/Duration'
        suggest_time_in_millis:
          description: The total amount of time taken to complete all shard suggest operations, in milliseconds. 
          $ref: '#/components/schemas/DurationValueUnitMillis'
        suggest_total:
          description: The total number of shard suggest operations. 
          type: number
        search_idle_reactivate_count_total:
          type: number
        request:
          type: object
          description: Statistics related to coordinator search operations for the node. 
          additionalProperties:
            $ref: '#/components/schemas/RequestStats'
        groups:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SearchStats'
      required:
        - fetch_current
        - fetch_time_in_millis
        - fetch_total
        - query_current
        - query_time_in_millis
        - query_total
        - scroll_current
        - scroll_time_in_millis
        - scroll_total
        - suggest_current
        - suggest_time_in_millis
        - suggest_total
    TranslogStats:
      type: object
      properties:
        earliest_last_modified_age:
          type: number
        operations:
          type: number
        remote_store:
          $ref: '#/components/schemas/RemoteStoreTranslogStats'
        size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
        uncommitted_operations:
          type: number
        uncommitted_size:
          $ref: '#/components/schemas/HumanReadableByteCount'
        uncommitted_size_in_bytes:
          $ref: '#/components/schemas/ByteCount'
      required:
        - earliest_last_modified_age
        - operations
        - size_in_bytes
        - uncommitted_operations
        - uncommitted_size_in_bytes
    RequestStats:
      type: object
      properties:
        time:
          $ref: '#/components/schemas/Duration'
        time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'    
        current:
          type: number
        total:
          type: number
    WarmerStats:
      type: object
      properties:
        current:
          type: number
        total:
          type: number
        total_time:
          $ref: '#/components/schemas/Duration'
        total_time_in_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
      required:
        - current
        - total
        - total_time_in_millis
    GeoShapeRelation:
      type: string
      enum:
        - contains
        - disjoint
        - intersects
        - within
    StringifiedVersionNumber:
      description: |-
        Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
        this behavior while keeping the semantics of the field type.

        Depending on the target language, code generators can keep the union or remove it and leniently parse
        strings to the target type.
      oneOf:
        - $ref: '#/components/schemas/VersionNumber'
        - type: string
    ActionStatusOptions:
      type: string
      enum:
        - failure
        - simulated
        - success
        - throttled
    NodeAttributes:
      type: object
      properties:
        attributes:
          description: Lists node attributes.
          type: object
          additionalProperties:
            type: string
        ephemeral_id:
          $ref: '#/components/schemas/Id'
        id:
          $ref: '#/components/schemas/NodeId'
        name:
          $ref: '#/components/schemas/NodeName'
        transport_address:
          $ref: '#/components/schemas/TransportAddress'
        roles:
          $ref: '#/components/schemas/NodeRoles'
        external_id:
          type: string
      required:
        - attributes
        - ephemeral_id
        - name
        - transport_address
    NodeRoles:
      description: Node roles.
      type: array
      items:
        $ref: '#/components/schemas/NodeRole'
    NodeRole:
      oneOf:
        - type: string
          enum:
            - client
            - coordinating_only
            - data
            - data_cold
            - data_content
            - data_frozen
            - data_hot
            - data_warm
            - ingest
            - ml
            - remote_cluster_client
            - transform
            - voting_only
        - type: string
          enum:
            - master
          deprecated: true
          x-version-deprecated: '2.0'
          x-deprecation-message: Use 'cluster_manager' instead.
        - type: string
          enum:
            - cluster_manager
          x-version-added: '2.0'
    HttpHeaders:
      type: object
      additionalProperties:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
    Password:
      type: string
    Username:
      type: string
    BaseNode:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
        host:
          $ref: '#/components/schemas/Host'
        ip:
          $ref: '#/components/schemas/Ip'
        name:
          $ref: '#/components/schemas/Name'
        roles:
          $ref: '#/components/schemas/NodeRoles'
        transport_address:
          $ref: '#/components/schemas/TransportAddress'
      required:
        - name
    RankContainer:
      type: object
      properties:
        rrf:
          $ref: '#/components/schemas/RrfRank'
      minProperties: 1
      maxProperties: 1
    RrfRank:
      allOf:
        - $ref: '#/components/schemas/RankBase'
        - type: object
          properties:
            rank_constant:
              description: To what degree documents found in individual result sets per query influence the final ranked result set.
              type: number
            window_size:
              description: The size of the individual result sets per query.
              type: number
    RankBase:
      type: object
    NodeShard:
      type: object
      properties:
        state:
          $ref: 'indices.stats.yaml#/components/schemas/ShardRoutingState'
        primary:
          type: boolean
        node:
          $ref: '#/components/schemas/NodeName'
        shard:
          type: number
        index:
          $ref: '#/components/schemas/IndexName'
        allocation_id:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Id'
        recovery_source:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Id'
        unassigned_info:
          $ref: 'cluster.allocation_explain.yaml#/components/schemas/UnassignedInformation'
        relocating_node:
          oneOf:
            - $ref: '#/components/schemas/NodeId'
            - type: 'null'
        relocation_failure_info:
          $ref: '#/components/schemas/RelocationFailureInfo'
      required:
        - index
        - primary
        - shard
        - state
    RelocationFailureInfo:
      type: object
      properties:
        failed_attempts:
          type: number
      required:
        - failed_attempts
    OpenSearchVersionInfo:
      type: object
      properties:
        build_date:
          $ref: '#/components/schemas/DateTime'
        build_flavor:
          type: string
        build_hash:
          type: string
        build_snapshot:
          type: boolean
        build_type:
          type: string
        distribution:
          type: string
        lucene_version:
          $ref: '#/components/schemas/VersionString'
        minimum_index_compatibility_version:
          $ref: '#/components/schemas/VersionString'
        minimum_wire_compatibility_version:
          $ref: '#/components/schemas/VersionString'
        number:
          type: string
      required:
        - build_date
        - build_hash
        - build_snapshot
        - build_type
        - distribution
        - lucene_version
        - minimum_index_compatibility_version
        - minimum_wire_compatibility_version
        - number
    PhaseTook:
      type: object
      properties:
        dfs_pre_query:
          $ref: '#/components/schemas/uint'
        query:
          $ref: '#/components/schemas/uint'
        fetch:
          $ref: '#/components/schemas/uint'
        dfs_query:
          $ref: '#/components/schemas/uint'
        expand:
          $ref: '#/components/schemas/uint'
        can_match:
          $ref: '#/components/schemas/uint'
      required:
        - can_match
        - dfs_pre_query
        - dfs_query
        - expand
        - fetch
        - query
    BulkByScrollTaskStatus:
      type: object
      properties:
        slice_id:
          type: integer
          format: int32
        total:
          description: The number of documents that were successfully processed. 
          type: integer
          format: int64
        updated:
          description: The number of documents that were successfully updated after the reindex operation.
          type: integer
          format: int64
        created:
          description: The number of documents that were successfully created. 
          type: integer
          format: int64
        deleted:
          description: The number of documents that were successfully deleted. 
          type: integer
          format: int64
        batches:
          description: The number of scroll responses pulled back by the reindex operation.
          type: integer
          format: int32
        version_conflicts:
          description: The number of version conflicts encountered by the reindex operation.
          type: integer
          format: int64
        noops:
          description: The number of documents that were ignored. 
          type: integer
          format: int64
        retries:
          $ref: '#/components/schemas/Retries'
        throttled_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        throttled:
          $ref: '#/components/schemas/Duration'
        requests_per_second:
          description: The number of requests per second effectively executed during the reindex operation.
          type: number
          format: float
        canceled:
          type: string
        throttled_until_millis:
          $ref: '#/components/schemas/DurationValueUnitMillis'
        throttled_until:
          $ref: '#/components/schemas/Duration'
        slices:
          type: array
          items:
            $ref: '#/components/schemas/BulkByScrollTaskStatusOrException'
      required:
        - batches
        - deleted
        - noops
        - requests_per_second
        - retries
        - throttled_millis
        - throttled_until_millis
        - total
        - version_conflicts
    BulkByScrollTaskStatusOrException:
      oneOf:
        - title: status
          $ref: '#/components/schemas/BulkByScrollTaskStatus'
        - title: exception
          $ref: '#/components/schemas/ErrorCause'
    BulkByScrollResponseBase:
      allOf:
        - $ref: '#/components/schemas/BulkByScrollTaskStatus'
        - type: object
          properties:
            took:
              type: integer
              format: int64
            timed_out:
              type: boolean
            failures:
              type: array
              items:
                $ref: '#/components/schemas/BulkByScrollFailure'
          required:
            - failures
            - timed_out
            - took
    BulkByScrollFailure:
      anyOf:
        - $ref: '#/components/schemas/BulkItemResponseFailure'
        - $ref: '#/components/schemas/ScrollableHitSourceSearchFailure'
    BulkItemResponseFailure:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/ErrorCause'
        id:
          $ref: '#/components/schemas/Id'
        index:
          $ref: '#/components/schemas/IndexName'
        status:
          type: integer
          format: int32
      required:
        - cause
        - index
        - status
    ScrollableHitSourceSearchFailure:
      type: object
      properties:
        index:
          $ref: '#/components/schemas/IndexName'
        shard:
          type: integer
          format: int32
        node:
          type: string
        status:
          type: integer
          format: int32
        reason:
          $ref: '#/components/schemas/ErrorCause'
      required:
        - reason
        - status
    BatchSize:
      type: integer
      format: int64
    ResourceType:
      type: string
      enum:
        - index_or_alias
