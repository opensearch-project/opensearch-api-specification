openapi: 3.1.0
info:
  title: Schemas of `ml` Category
  description: Schemas of `ml` category.
  version: 1.0.0
paths: {}
components:
  schemas:
    SearchModelsResponse:
      $ref: '#/components/schemas/SearchResponse'
    SearchResponse:
      type: object
      properties:
        took:
          type: integer
          description: The time taken to execute the search.
        timed_out:
          type: boolean
          description: Whether the search timed out.
        _shards:
          $ref: '_common.yaml#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/SearchHits'
      required:
        - hits
    SearchHits:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/HitsTotal'
        hits:
          type: array
          items:
            $ref: '#/components/schemas/SearchHitsHit'
        max_score:
          type: number
          format: float
          description: The maximum score.
      required:
        - hits
        - total
    HitsTotal:
      type: object
      properties:
        value:
          type: integer
          format: int64
          description: The total number of hits.
        relation:
          type: string
          description: The relation.
      required:
        - relation
        - value
    SearchHitsHit:
      type: object
      properties:
        _version:
          $ref: '_common.yaml#/components/schemas/VersionNumber'
        _seq_no:
          $ref: '_common.yaml#/components/schemas/SequenceNumber'
        _primary_term:
          type: integer
          description: The primary term.
        _index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        _id:
          $ref: '_common.yaml#/components/schemas/Id'
        _score:
          type: number
          format: float
          description: The score.
        _source:
          $ref: '#/components/schemas/Source'
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
      required:
        - _score
    Source:
      type: object
      properties:
        last_deployed_time:
          type: integer
          format: int64
          description: The last deployed time.
        model_version:
          type: string
          description: The model version.
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        created_time:
          type: integer
          format: int64
          description: The created time.
        chunk_number:
          type: integer
          format: int64
          description: The chunk number.
        deploy_to_all_nodes:
          type: boolean
          description: Whether to deploy to all nodes.
        is_hidden:
          type: boolean
          description: Whether the model is hidden.
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
        description:
          type: string
          description: The model description.
        model_state:
          type: string
          description: The model state.
          enum:
            - DEPLOYED
            - DEPLOYING
            - DEPLOY_FAILED
            - PARTIALLY_DEPLOYED
            - REGISTERED
            - REGISTERING
            - UNDEPLOYED
        model_content_size_in_bytes:
          type: integer
          format: int64
          description: The model content size in bytes.
        model_content_hash_value:
          type: string
          description: The model content hash value.
        planning_worker_node_count:
          type: number
          description: The planning worker node count.
        model_config:
          $ref: '#/components/schemas/ModelConfig'
        model_format:
          type: string
          description: The model format.
        model_task_type:
          type: string
          description: The model task type.
        last_updated_time:
          type: integer
          format: int64
          description: The last updated time.
        last_registered_time:
          type: integer
          format: int64
          description: The last registered time.
        auto_redeploy_retry_times:
          type: integer
          format: int64
          description: The auto redeploy retry times.
        name:
          type: string
          description: The model name.
        connector_id:
          type: string
          description: The connector ID.
        current_worker_node_count:
          type: number
          description: The current worker node count.
        model_group_id:
          type: string
          description: The model group ID.
        planning_worker_nodes:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/NodeIds'
        total_chunks:
          type: integer
          format: int64
          description: The total chunks.
        algorithm:
          type: string
          description: The algorithm.
        url:
          type: string
          description: The model URL.
        backend_roles:
          type: array
          items:
            type: string
          description: The backend roles.
        owner:
          $ref: '#/components/schemas/Owner'
        access:
          type: string
          description: The model group access.
          enum:
            - private
            - public
            - restricted
        latest_version:
          type: integer
          description: The latest version.
        protocol:
          type: string
          description: The connector protocol.
          enum:
            - aws_sigv4
            - http
        parameters:
          $ref: '#/components/schemas/Parameters'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    ModelConfig:
      type: object
      properties:
        all_config:
          type: string
          description: The all config.
        model_type:
          type: string
          description: The model type.
        embedding_dimension:
          type: integer
          format: int64
          description: The embedding dimension.
        framework_type:
          type: string
          description: The framework type.
    Status:
      type: string
      description: The status.
      enum:
        - CANCELLED
        - COMPLETED
        - COMPLETED_WITH_ERROR
        - CREATED
        - FAILED
        - RUNNING
    PredictResponse:
      type: object
      properties:
        inference_results:
          # Update this once the PR for ML Model APIs (#733) has been merged
          type: array
          items:
            $ref: '#/components/schemas/InferenceResults'
        status:
          $ref: '#/components/schemas/Status'
        prediction_result:
          $ref: '#/components/schemas/PredictionResult'
    InferenceResults:
      type: object
      properties:
        output:
          type: array
          items:
            $ref: '#/components/schemas/Output'
    Output:
      type: object
      properties:
        name:
          type: string
          description: The output name.
        data_type:
          type: string
          description: The output data type.
          enum:
            - BOOLEAN
            - FLOAT16
            - FLOAT32
            - FLOAT64
            - INT32
            - INT64
            - INT8
            - STRING
            - UINT8
            - UNKNOWN
        shape:
          type: array
          items:
            type: integer
            format: int64
            description: The output shape.
        data:
          type: array
          items:
            type: number
            format: double
            description: The output data.
        byte_buffer:
          $ref: '#/components/schemas/ByteBuffer'
      required:
        - data
    ByteBuffer:
      type: object
      properties:
        array:
          type: string
          description: The byte buffer array.
        order:
          type: string
          description: The byte buffer order.
          enum:
            - BIG_ENDIAN
            - LITTLE_ENDIAN
    PredictionResult:
      type: object
      properties:
        column_metas:
          type: array
          items:
            $ref: '#/components/schemas/ColumnMeta'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Rows'
    ColumnMeta:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        column_type:
          type: string
          description: The column type.
          enum:
            - BOOLEAN
            - DOUBLE
            - INTEGER
            - STRING
    Rows:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Values'
    Values:
      type: object
      properties:
        column_type:
          type: string
          description: The column type.
          enum:
            - BOOLEAN
            - DOUBLE
            - INTEGER
            - STRING
        value:
          type: number
          description: The value.
    InputQuery:
      type: object
      properties:
        _source:
          type: array
          items:
            type: string
          description: The source fields
        size:
          type: integer
          format: int64
          description: The size of the query.
        query:
          $ref: '#/components/schemas/Query'
    Query:
      type: object
      description: The query.
      properties:
        bool:
          $ref: '#/components/schemas/BoolQuery'
        match_all:
          $ref: '#/components/schemas/MatchAllQuery'
        term:
          $ref: '#/components/schemas/Term'
    MatchAllQuery:
      type: object
      description: The match all query.
      properties: {}
    BoolQuery:
      type: object
      description: The Boolean query.
      properties:
        filter:
          type: array
          description: Filter query that appears in matching documents.
          items:
            $ref: '#/components/schemas/Filter'
        must:
          type: array
          description: Query that must appears in matching documents
          items:
            $ref: '#/components/schemas/Filter'
        must_not:
          description: Query that must not appears in matching documents.
          $ref: '#/components/schemas/Filter'
        should:
          type: array
          description: Query that should appear in matching documents.
          items:
            $ref: '#/components/schemas/Filter'
    Filter:
      type: object
      description: The filter element.
      properties:
        range:
          $ref: '#/components/schemas/Range'
        nested:
          $ref: '#/components/schemas/Nested'
        exists:
          $ref: '#/components/schemas/Exists'
        term:
          $ref: '#/components/schemas/Term'
        terms:
          $ref: '#/components/schemas/Term'
        match:
          $ref: '#/components/schemas/Match'
    Range:
      type: object
      description: The filter range.
      properties:
        k1:
          $ref: '#/components/schemas/Key'
        k2:
          $ref: '#/components/schemas/Key'
        k3:
          $ref: '#/components/schemas/Key'
    Key:
      type: object
      description: The key.
      properties:
        gte:
          type: number
          description: Greater than or equal to.
        lte:
          type: number
          description: Less than or equal to.
        gt:
          type: number
          description: Greater than.
        lt:
          type: number
          description: Less than.
    Term:
      type: object
      description: Term to match the query.
      properties:
        algorithm:
          $ref: '#/components/schemas/Algorithm'
        _id:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/Id'
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
        owner.name.keyword:
          $ref: '#/components/schemas/OwnerNameKeyword'
    Algorithm:
      type: object
      description: The algorithm.
      properties:
        value:
          type: string
          description: The function name.
          enum:
            - AD_LIBSVM
            - AGENT
            - ANOMALY_LOCALIZATION
            - BATCH_RCF
            - CONNECTOR
            - FIT_RCF
            - KMEANS
            - LINEAR_REGRESSION
            - LOCAL_SAMPLE_CALCULATOR
            - LOGISTIC_REGRESSION
            - METRICS_CORRELATION
            - QUESTION_ANSWERING
            - RCF_SUMMARIZE
            - REMOTE
            - SAMPLE_ALGO
            - SPARSE_ENCODING
            - SPARSE_TOKENIZE
            - TEXT_EMBEDDING
            - TEXT_SIMILARITY
    OwnerNameKeyword:
      type: object
      description: The owner name keyword.
      properties:
        value:
          $ref: '_common.yaml#/components/schemas/FieldValue'
        boost:
          type: number
          description: Adjust the relevance score of a match.
    Nested:
      type: object
      description: The nested filter.
      properties:
        query:
          $ref: '#/components/schemas/Query'
        path:
          $ref: '_common.yaml#/components/schemas/Field'
        ignore_unmapped:
          type: boolean
          description: Whether to ignore unmapped fields.
        score_mode:
          type: string
          description: The score mode.
          enum:
            - avg
            - max
            - min
            - none
            - sum
        boost:
          type: number
          description: Adjust the relevance score of a match.
    Exists:
      type: object
      description: The exists filter.
      properties:
        field:
          $ref: '_common.yaml#/components/schemas/Field'
    Sort:
      type: object
      description: Sort query.
      properties:
        algorithm:
          $ref: '#/components/schemas/SortOrder'
        auto_redeploy_retry_times:
          $ref: '#/components/schemas/SortOrder'
        chunk_number:
          $ref: '#/components/schemas/SortOrder'
        created_time:
          $ref: '#/components/schemas/SortOrder'
        current_worker_node_count:
          $ref: '#/components/schemas/SortOrder'
        deploy_to_all_nodes:
          $ref: '#/components/schemas/SortOrder'
        is_hidden:
          $ref: '#/components/schemas/SortOrder'
        last_registered_time:
          $ref: '#/components/schemas/SortOrder'
        last_updated_time:
          $ref: '#/components/schemas/SortOrder'
        model_content_hash_value:
          $ref: '#/components/schemas/SortOrder'
        model_content_size_in_bytes:
          $ref: '#/components/schemas/SortOrder'
        model_format:
          $ref: '#/components/schemas/SortOrder'
        model_group_id:
          $ref: '#/components/schemas/SortOrder'
        model_state:
          $ref: '#/components/schemas/SortOrder'
        model_version:
          $ref: '#/components/schemas/SortOrder'
        planning_worker_nodes:
          $ref: '#/components/schemas/SortOrder'
        planning_worker_node_count:
          $ref: '#/components/schemas/SortOrder'
        total_chunks:
          $ref: '#/components/schemas/SortOrder'
        _index:
          $ref: '#/components/schemas/SortOrder'
        _id:
          $ref: '#/components/schemas/SortOrder'
        _seq_no:
          $ref: '#/components/schemas/SortOrder'
        _score:
          $ref: '#/components/schemas/SortOrder'
    SortOrder:
      type: object
      description: The order of the sort.
      properties:
        order:
          type: string
          description: The order.
          enum:
            - asc
            - desc
    Match:
      type: object
      description: Match query.
      properties:
        description:
          type: string
          description: The description.
    TrainParameters:
      type: object
      properties:
        centroids:
          type: integer
          format: int64
          description: The centroids.
        iterations:
          type: integer
          format: int64
          description: The iterations.
        distance_type:
          type: string
          description: The distance type.
          enum:
            - COSINE
            - EUCLIDEAN
            - L1
    TrainResponse:
      type: object
      properties:
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
        status:
          $ref: '#/components/schemas/Status'
      required:
        - status
    TrainPredictResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        prediction_result:
          $ref: '#/components/schemas/PredictionResult'
      required:
        - status
    ModelGroupRegistration:
      type: object
      properties:
        model_group_id:
          type: string
          description: The model group ID.
        status:
          type: string
          description: The status.
      required:
        - model_group_id
        - status
    ModelGroup:
      type: object
      properties:
        name:
          type: string
          description: The model group name.
        latest_version:
          type: integer
          description: The latest version.
        description:
          type: string
          description: The model group description.
        owner:
          $ref: '#/components/schemas/Owner'
        access:
          type: string
          description: The model group access.
          enum:
            - private
            - public
            - restricted
        created_time:
          type: integer
          format: int64
        last_updated_time:
          type: integer
          format: int64
      required:
        - access
        - description
        - latest_version
        - name
    Owner:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        backend_roles:
          type: array
          items:
            type: string
          description: The backend roles.
        roles:
          type: array
          items:
            type: string
          description: The roles.
        custom_attribute_names:
          type: array
          items:
            type: string
          description: The custom attribute names.
        user_requested_tenant:
          type: ['null', string]
          description: The user requested tenant.
      required:
        - name
    UpdateModelGroupResponse:
      type: object
      properties:
        status:
          type: string
          description: The status.
    SearchModelGroupsResponse:
      $ref: '#/components/schemas/SearchResponse'
    Task:
      type: object
      properties:
        model_id:
          type: string
        task_id:
          type: string
        state:
          type: string
          enum:
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERROR
            - CREATED
            - EXPIRED
            - FAILED
            - RUNNING
        task_type:
          type: string
          description: Task type.
          enum:
            - DEPLOY_MODEL
            - REGISTER_MODEL
        function_name:
          type: string
        worker_node:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/NodeIds'
        create_time:
          type: integer
          format: int64
        last_update_time:
          type: integer
          format: int64
        is_async:
          type: boolean
        error:
          type: string
      required:
        - state
    UndeployModelResponse:
      type: object
      additionalProperties:
        title: nodes
        $ref: '#/components/schemas/UndeployModelNode'
    UndeployModelNode:
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/UndeployModelNodeStats'
    UndeployModelNodeStats:
      type: object
      additionalProperties: true
    Credential:
      type: object
      properties:
        access_key:
          type: string
        secret_key:
          type: string
        session_token:
          type: string
      additionalProperties: true
    Parameters:
      type: object
      additionalProperties: true
    ClientConfig:
      type: object
      properties:
        max_connection:
          type: integer
        connection_timeout:
          type: integer
        read_timeout:
          type: integer
        retry_backoff_policy:
          type: string
        max_retry_times:
          type: integer
        retry_backoff_millis:
          type: integer
        retry_timeout_seconds:
          type: integer
    Action:
      type: object
      properties:
        action_type:
          type: string
        method:
          type: string
        headers:
          $ref: '#/components/schemas/Headers'
        url:
          type: string
        request_body:
          type: string
        pre_process_function:
          type: string
        post_process_function:
          type: string
    LLM:
      type: object
      properties:
        model_id:
          type: string
        parameters:
          $ref: '#/components/schemas/Parameters'
    Memory:
      type: object
      properties:
        type:
          type: string
    ToolItems:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        parameters:
          $ref: '#/components/schemas/Parameters'
      additionalProperties: true
    Headers:
      type: object
      properties:
        content_type:
          type: string
      additionalProperties: true
    GetConnectorResponse:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        description:
          type: string
          description: The connector description.
        protocol:
          type: string
          description: The connector protocol.
          enum:
            - aws_sigv4
            - http
        parameters:
          $ref: '#/components/schemas/Parameters'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        created_time:
          type: integer
          format: int64
          description: The created time.
        last_updated_time:
          type: integer
          format: int64
          description: The last updated time.
    SearchConnectorsResponse:
      $ref: '#/components/schemas/SearchResponse'