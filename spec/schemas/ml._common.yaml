openapi: 3.1.0
info:
  title: Schemas of `ml` Category
  description: Schemas of `ml` category.
  version: 1.0.0
paths: {}
components:
  schemas:
    SearchTasksResponse:
      $ref: '#/components/schemas/SearchResponse'
    SearchModelsResponse:
      $ref: '#/components/schemas/SearchResponse'
    SearchResponse:
      type: object
      properties:
        took:
          type: integer
          description: The time taken to execute the search.
        timed_out:
          type: boolean
          description: Whether the search timed out.
        _shards:
          $ref: '_common.yaml#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/SearchHits'
      required:
        - hits
    SearchHits:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/HitsTotal'
        hits:
          type: array
          items:
            $ref: '#/components/schemas/SearchHitsHit'
        max_score:
          type: ['null', number]
          description: The maximum score.
      required:
        - hits
        - total
    HitsTotal:
      type: object
      properties:
        value:
          type: integer
          format: int64
          description: The total number of hits.
        relation:
          type: string
          description: The relation.
      required:
        - relation
        - value
    SearchHitsHit:
      type: object
      properties:
        _version:
          $ref: '_common.yaml#/components/schemas/VersionNumber'
        _seq_no:
          $ref: '_common.yaml#/components/schemas/SequenceNumber'
        _primary_term:
          type: integer
          description: The primary term.
        _index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        _id:
          $ref: '_common.yaml#/components/schemas/Id'
        _score:
          type: ['null', number]
          description: The score.
        _source:
          $ref: '#/components/schemas/Source'
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
        sort:
          type: array
          items:
            type: number
            format: float
          description: The sort values.
      required:
        - _score
    Source:
      type: object
      properties:
        last_deployed_time:
          type: integer
          format: int64
          description: The last deployed time.
        model_version:
          type: string
          description: The model version.
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        created_time:
          type: integer
          format: int64
          description: The created time.
        chunk_number:
          type: integer
          format: int64
          description: The chunk number.
        deploy_to_all_nodes:
          type: boolean
          description: Whether to deploy to all nodes.
        is_hidden:
          type: boolean
          description: Whether the model is hidden.
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
        description:
          type: string
          description: The model description.
        model_state:
          type: string
          description: The model state.
          enum:
            - DEPLOYED
            - DEPLOYING
            - DEPLOY_FAILED
            - PARTIALLY_DEPLOYED
            - REGISTERED
            - REGISTERING
            - UNDEPLOYED
        model_content_size_in_bytes:
          type: integer
          format: int64
          description: The model content size in bytes.
        model_content_hash_value:
          type: string
          description: The model content hash value.
        planning_worker_node_count:
          type: number
          description: The planning worker node count.
        model_config:
          $ref: '#/components/schemas/ModelConfig'
        model_format:
          $ref: '#/components/schemas/ModelFormat'
        model_task_type:
          type: string
          description: The model task type.
        last_updated_time:
          type: integer
          format: int64
          description: The last updated time.
        last_update_time:
          type: integer
          format: int64
          description: The last update time.
        last_registered_time:
          type: integer
          format: int64
          description: The last registered time.
        auto_redeploy_retry_times:
          type: integer
          format: int64
          description: The auto redeploy retry times.
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        connector_id:
          type: string
          description: The connector ID.
        current_worker_node_count:
          type: number
          description: The current worker node count.
        model_group_id:
          type: string
          description: The model group ID.
        planning_worker_nodes:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/NodeIds'
        total_chunks:
          type: integer
          format: int64
          description: The total chunks.
        algorithm:
          type: string
          description: The algorithm.
        url:
          type: string
          description: The model URL.
        backend_roles:
          type: array
          items:
            type: string
          description: The backend roles.
        owner:
          $ref: '#/components/schemas/Owner'
        access:
          type: string
          description: The model group access.
          enum:
            - private
            - public
            - restricted
        latest_version:
          type: integer
          description: The latest version.
        protocol:
          type: string
          description: The connector protocol.
          enum:
            - aws_sigv4
            - http
        parameters:
          $ref: '#/components/schemas/Parameters'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        updated_time:
          type: string
          format: date-time
          description: The updated time.
        create_time:
          anyOf:
            - type: string
              format: date-time
            - type: integer
              format: int64
          description: The create time.
        application_type:
          type: ['null', string]
          description: The application type.
        additional_info:
          $ref: '#/components/schemas/AdditionalInfo'
        user:
          type: string
          description: The username of the user.
        input:
          type: ['null', string]
          description: The question in the message.
        memory_id:
          $ref: '_common.yaml#/components/schemas/Name'
        trace_number:
          type: ['null', string]
          description: The trace number.
        response:
          type: ['null', string]
          description: The answer to the question.
        origin:
          type: ['null', string]
          description: The system name that generated the response.
        parent_message_id:
          type: ['null', string]
          description: The parent message ID.
        prompt_template:
          type: ['null', string]
          description: The prompt template.
        type:
          type: string
          description: The agent type
          enum:
            - conversational
            - conversational_flow
            - flow
        tools:
          type: array
          items:
            $ref: '#/components/schemas/ToolItems'
        memory:
          $ref: '#/components/schemas/Memory'
        app_type:
          type: string
          description: The app type.
        is_async:
          type: boolean
          description: Whether the task is asynchronous.
        function_name:
          $ref: '#/components/schemas/FunctionName'
        input_type:
          type: string
          description: The input type.
          enum:
            - DATA_FRAME
            - QUESTION_ANSWERING
            - REMOTE
            - SEARCH_QUERY
            - TEXT_DOCS
            - TEXT_SIMILARITY
        worker_node:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/NodeIds'
        task_type:
          type: string
          description: Task type.
          enum:
            - BATCH_INGEST
            - BATCH_PREDICTION
            - DEPLOY_MODEL
            - EXECUTION
            - PREDICTION
            - REGISTER_MODEL
            - TRAINING
            - TRAINING_AND_PREDICTION
        state:
          $ref: '#/components/schemas/Status'
        error:
          type: string
          description: The error message.
    ModelConfig:
      type: object
      properties:
        all_config:
          type: string
          description: The all config.
        model_type:
          type: string
          description: The model type.
        embedding_dimension:
          type: integer
          format: int64
          description: The embedding dimension.
        framework_type:
          type: string
          description: The framework type.
    Status:
      type: string
      description: The status.
      enum:
        - CANCELLED
        - COMPLETED
        - COMPLETED_WITH_ERROR
        - CREATED
        - FAILED
        - RUNNING
    PredictResponse:
      type: object
      properties:
        inference_results:
          type: array
          items:
            $ref: '#/components/schemas/InferenceResults'
        status:
          $ref: '#/components/schemas/Status'
        prediction_result:
          $ref: '#/components/schemas/PredictionResult'
    InferenceResults:
      type: object
      properties:
        output:
          type: array
          items:
            $ref: '#/components/schemas/Output'
    Output:
      type: object
      properties:
        name:
          type: string
          description: The output name.
        data_type:
          type: string
          description: The output data type.
          enum:
            - BOOLEAN
            - FLOAT16
            - FLOAT32
            - FLOAT64
            - INT32
            - INT64
            - INT8
            - STRING
            - UINT8
            - UNKNOWN
        shape:
          type: array
          items:
            type: integer
            format: int64
            description: The output shape.
        data:
          type: array
          items:
            type: number
            format: double
            description: The output data.
        byte_buffer:
          $ref: '#/components/schemas/ByteBuffer'
        result:
          type: string
          description: The output result.
      required:
        - data
    ByteBuffer:
      type: object
      properties:
        array:
          type: string
          description: The byte buffer array.
        order:
          type: string
          description: The byte buffer order.
          enum:
            - BIG_ENDIAN
            - LITTLE_ENDIAN
    PredictionResult:
      type: object
      properties:
        column_metas:
          type: array
          items:
            $ref: '#/components/schemas/ColumnMeta'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Rows'
    ColumnMeta:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        column_type:
          type: string
          description: The column type.
          enum:
            - BOOLEAN
            - DOUBLE
            - INTEGER
            - STRING
    Rows:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Values'
    Values:
      type: object
      properties:
        column_type:
          type: string
          description: The column type.
          enum:
            - BOOLEAN
            - DOUBLE
            - INTEGER
            - STRING
        value:
          type: number
          description: The value.
    InputQuery:
      type: object
      properties:
        _source:
          type: array
          items:
            type: string
          description: The source fields
        size:
          type: integer
          format: int64
          description: The size of the query.
        query:
          $ref: '#/components/schemas/Query'
    Query:
      type: object
      description: The query.
      properties:
        bool:
          $ref: '#/components/schemas/BoolQuery'
        match:
          $ref: '#/components/schemas/Match'
        match_all:
          $ref: '#/components/schemas/MatchAllQuery'
        term:
          $ref: '#/components/schemas/Term'
      additionalProperties: true
    MatchAllQuery:
      type: object
      description: The match all query.
      properties: {}
    BoolQuery:
      type: object
      description: The Boolean query.
      properties:
        filter:
          type: array
          description: Filter query that appears in matching documents.
          items:
            $ref: '#/components/schemas/Filter'
        must:
          type: array
          description: Query that must appears in matching documents
          items:
            $ref: '#/components/schemas/Filter'
        must_not:
          description: Query that must not appears in matching documents.
          $ref: '#/components/schemas/Filter'
        should:
          type: array
          description: Query that should appear in matching documents.
          items:
            $ref: '#/components/schemas/Filter'
    Filter:
      type: object
      description: The filter element.
      properties:
        range:
          $ref: '#/components/schemas/Range'
        nested:
          $ref: '#/components/schemas/Nested'
        exists:
          $ref: '#/components/schemas/Exists'
        term:
          $ref: '#/components/schemas/Term'
        terms:
          $ref: '#/components/schemas/Term'
        match:
          $ref: '#/components/schemas/Match'
    Range:
      type: object
      description: The filter range.
      properties:
        k1:
          $ref: '#/components/schemas/Key'
        k2:
          $ref: '#/components/schemas/Key'
        k3:
          $ref: '#/components/schemas/Key'
    Key:
      type: object
      description: The key.
      properties:
        gte:
          type: number
          description: Greater than or equal to.
        lte:
          type: number
          description: Less than or equal to.
        gt:
          type: number
          description: Greater than.
        lt:
          type: number
          description: Less than.
    Term:
      type: object
      description: Term to match the query.
      properties:
        algorithm:
          $ref: '#/components/schemas/Algorithm'
        _id:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/Id'
        function_name:
          $ref: '#/components/schemas/FunctionName'
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
        name:
          $ref: '#/components/schemas/OwnerNameKeyword'
        owner.name.keyword:
          $ref: '#/components/schemas/OwnerNameKeyword'
        type:
          $ref: '#/components/schemas/Type'
    Algorithm:
      type: object
      description: The algorithm.
      properties:
        value:
          $ref: '#/components/schemas/FunctionName'
    FunctionName:
      type: string
      description: The function name.
      enum:
        - AD_LIBSVM
        - AGENT
        - ANOMALY_LOCALIZATION
        - BATCH_RCF
        - CONNECTOR
        - FIT_RCF
        - KMEANS
        - LINEAR_REGRESSION
        - LOCAL_SAMPLE_CALCULATOR
        - LOGISTIC_REGRESSION
        - METRICS_CORRELATION
        - QUESTION_ANSWERING
        - RCF_SUMMARIZE
        - REMOTE
        - SAMPLE_ALGO
        - SPARSE_ENCODING
        - SPARSE_TOKENIZE
        - TEXT_EMBEDDING
        - TEXT_SIMILARITY
    OwnerNameKeyword:
      type: object
      description: The owner name keyword.
      properties:
        value:
          $ref: '_common.yaml#/components/schemas/FieldValue'
        boost:
          type: number
          description: Adjust the relevance score of a match.
    Type:
      type: object
      description: The type.
      properties:
        value:
          type: string
          description: The agent type.
          enum:
            - conversational
            - conversational_flow
            - flow
    Nested:
      type: object
      description: The nested filter.
      properties:
        query:
          $ref: '#/components/schemas/Query'
        path:
          $ref: '_common.yaml#/components/schemas/Field'
        ignore_unmapped:
          type: boolean
          description: Whether to ignore unmapped fields.
        score_mode:
          type: string
          description: The score mode.
          enum:
            - avg
            - max
            - min
            - none
            - sum
        boost:
          type: number
          description: Adjust the relevance score of a match.
    Exists:
      type: object
      description: The exists filter.
      properties:
        field:
          $ref: '_common.yaml#/components/schemas/Field'
    Sort:
      type: object
      description: Sort query.
      properties:
        algorithm:
          $ref: '#/components/schemas/SortOrder'
        auto_redeploy_retry_times:
          $ref: '#/components/schemas/SortOrder'
        chunk_number:
          $ref: '#/components/schemas/SortOrder'
        created_time:
          $ref: '#/components/schemas/SortOrder'
        current_worker_node_count:
          $ref: '#/components/schemas/SortOrder'
        deploy_to_all_nodes:
          $ref: '#/components/schemas/SortOrder'
        is_hidden:
          $ref: '#/components/schemas/SortOrder'
        last_registered_time:
          $ref: '#/components/schemas/SortOrder'
        last_updated_time:
          $ref: '#/components/schemas/SortOrder'
        model_content_hash_value:
          $ref: '#/components/schemas/SortOrder'
        model_content_size_in_bytes:
          $ref: '#/components/schemas/SortOrder'
        model_format:
          $ref: '#/components/schemas/SortOrder'
        model_group_id:
          $ref: '#/components/schemas/SortOrder'
        model_state:
          $ref: '#/components/schemas/SortOrder'
        model_version:
          $ref: '#/components/schemas/SortOrder'
        planning_worker_nodes:
          $ref: '#/components/schemas/SortOrder'
        planning_worker_node_count:
          $ref: '#/components/schemas/SortOrder'
        total_chunks:
          $ref: '#/components/schemas/SortOrder'
        _index:
          $ref: '#/components/schemas/SortOrder'
        _id:
          $ref: '#/components/schemas/SortOrder'
        _seq_no:
          $ref: '#/components/schemas/SortOrder'
        _score:
          $ref: '#/components/schemas/SortOrder'
    SortAgent:
      type: object
      description: The sort agent query.
      properties:
        created_time:
          $ref: '#/components/schemas/SortOrder'
        is_hidden:
          $ref: '#/components/schemas/SortOrder'
        last_updated_time:
          $ref: '#/components/schemas/SortOrder'
        parameters:
          $ref: '#/components/schemas/SortOrder'
        tools:
          $ref: '#/components/schemas/SortOrder'
        type:
          $ref: '#/components/schemas/SortOrder'
        _id:
          $ref: '#/components/schemas/SortOrder'
        _index:
          $ref: '#/components/schemas/SortOrder'
        _score:
          $ref: '#/components/schemas/SortOrder'
        _seq_no:
          $ref: '#/components/schemas/SortOrder'
    SortMemory:
      type: object
      description: The sort memory query.
      properties:
        additional_info:
          $ref: '#/components/schemas/SortOrder'
        application_time:
          $ref: '#/components/schemas/SortOrder'
        create_time:
          $ref: '#/components/schemas/SortOrder'
        updated_time:
          $ref: '#/components/schemas/SortOrder'
        user:
          $ref: '#/components/schemas/SortOrder'
        _id:
          $ref: '#/components/schemas/SortOrder'
        _index:
          $ref: '#/components/schemas/SortOrder'
        _score:
          $ref: '#/components/schemas/SortOrder'
        _seq_no:
          $ref: '#/components/schemas/SortOrder'
    SortMessage:
      type: object
      description: The sort message query.
      properties:
        additional_info:
          $ref: '#/components/schemas/SortOrder'
        create_time:
          $ref: '#/components/schemas/SortOrder'
        memory_id:
          $ref: '#/components/schemas/SortOrder'
        origin:
          $ref: '#/components/schemas/SortOrder'
        parent_message_id:
          $ref: '#/components/schemas/SortOrder'
        trace_number:
          $ref: '#/components/schemas/SortOrder'
        _id:
          $ref: '#/components/schemas/SortOrder'
        _index:
          $ref: '#/components/schemas/SortOrder'
        _score:
          $ref: '#/components/schemas/SortOrder'
        _seq_no:
          $ref: '#/components/schemas/SortOrder'
    SortOrder:
      type: object
      description: The order of the sort.
      properties:
        order:
          type: string
          description: The order.
          enum:
            - asc
            - desc
    Match:
      type: object
      description: Match query.
      properties:
        description:
          type: string
          description: The description.
      additionalProperties: true
    TrainParameters:
      type: object
      properties:
        centroids:
          type: integer
          format: int64
          description: The centroids.
        iterations:
          type: integer
          format: int64
          description: The iterations.
        distance_type:
          type: string
          description: The distance type.
          enum:
            - COSINE
            - EUCLIDEAN
            - L1
    TrainResponse:
      type: object
      properties:
        model_id:
          $ref: '_common.yaml#/components/schemas/Name'
        status:
          $ref: '#/components/schemas/Status'
      required:
        - status
    TrainPredictResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        prediction_result:
          $ref: '#/components/schemas/PredictionResult'
      required:
        - status
    ModelGroupRegistration:
      type: object
      properties:
        model_group_id:
          type: string
          description: The model group ID.
        status:
          type: string
          description: The status.
      required:
        - model_group_id
        - status
    ModelGroup:
      type: object
      properties:
        name:
          type: string
          description: The model group name.
        latest_version:
          type: integer
          description: The latest version.
        description:
          type: string
          description: The model group description.
        owner:
          $ref: '#/components/schemas/Owner'
        access:
          type: string
          description: The model group access.
          enum:
            - private
            - public
            - restricted
        created_time:
          type: integer
          format: int64
        last_updated_time:
          type: integer
          format: int64
      required:
        - access
        - description
        - latest_version
        - name
    Owner:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        backend_roles:
          type: array
          items:
            type: string
          description: The backend roles.
        roles:
          type: array
          items:
            type: string
          description: The roles.
        custom_attribute_names:
          type: array
          items:
            type: string
          description: The custom attribute names.
        user_requested_tenant:
          type: ['null', string]
          description: The user requested tenant.
      required:
        - name
    UpdateModelGroupResponse:
      type: object
      properties:
        status:
          type: string
          description: The status.
    SearchModelGroupsResponse:
      $ref: '#/components/schemas/SearchResponse'
    Model:
      type: object
      properties:
        name:
          type: string
          description: The model name.
        model_group_id:
          type: string
          description: The model group ID.
        algorithm:
          type: string
          description: The algorithm.
        model_version:
          type: string
          description: The model version.
        model_format:
          $ref: '#/components/schemas/ModelFormat'
        model_state:
          type: string
          description: The model state.
          enum:
            - DEPLOYED
            - DEPLOYING
            - DEPLOY_FAILED
            - PARTIALLY_DEPLOYED
            - REGISTERED
            - REGISTERING
            - UNDEPLOYED
        model_content_size_in_bytes:
          type: integer
          format: int64
          description: The model content size in bytes.
        model_content_hash_value:
          type: string
          description: The model content hash value.
        model_config:
          $ref: '#/components/schemas/ModelConfig'
        created_time:
          type: integer
          format: int64
          description: The created time.
        last_updated_time:
          type: integer
          format: int64
          description: The last updated time.
        last_registered_time:
          type: integer
          format: int64
          description: The last registered time.
        total_chunks:
          type: integer
          format: int64
          description: The total chunks.
        is_hidden:
          type: boolean
          description: Whether the model is hidden.
      required:
        - model_state
    RateLimiter:
      type: object
      properties:
        limit:
          description: The maximum limit.
          $ref: '_common.yaml#/components/schemas/StringifiedDouble'
        unit:
          type: string
          description: The unit of time.
          enum:
            - DAYS
            - HOURS
            - MICROSECONDS
            - MILLISECONDS
            - MINUTES
            - NANOSECONDS
            - SECONDS
      required:
        - limit
        - unit
    Guardrails:
      type: object
      properties:
        type:
          type: string
          description: The guardrails type.
          enum:
            - local_regex
            - model
        input_guardrail:
          $ref: '#/components/schemas/GuardrailsInputOutput'
        output_guardrail:
          $ref: '#/components/schemas/GuardrailsInputOutput'
        stop_words:
          $ref: '_common.analysis.yaml#/components/schemas/StopWords'
        index_name:
          $ref: '_common.yaml#/components/schemas/IndexName'
        source_fields:
          $ref: '_common.yaml#/components/schemas/Fields'
        regex:
          type: object
          description: The regex used for input/output validation.
        model_id:
          type: string
          description: The model ID.
        response_filter:
          type: string
          description: The response filter.
        response_validation_regex:
          type: string
          description: The response validation regex.
    GuardrailsInputOutput:
      type: object
      properties:
        model_id:
          type: string
          description: The model ID.
        response_validation_regex:
          type: string
          description: The response validation regex.
    Task:
      type: object
      properties:
        model_id:
          type: string
        task_id:
          type: string
        state:
          type: string
          enum:
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERROR
            - CREATED
            - EXPIRED
            - FAILED
            - RUNNING
        task_type:
          type: string
          description: Task type.
          enum:
            - BATCH_INGEST
            - BATCH_PREDICTION
            - DEPLOY_MODEL
            - EXECUTION
            - PREDICTION
            - REGISTER_MODEL
            - TRAINING
            - TRAINING_AND_PREDICTION
        function_name:
          $ref: '#/components/schemas/FunctionName'
        worker_node:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/NodeIds'
        create_time:
          type: integer
          format: int64
        last_update_time:
          type: integer
          format: int64
        is_async:
          type: boolean
        error:
          type: string
      required:
        - state
    UndeployModelResponse:
      type: object
      additionalProperties:
        title: nodes
        $ref: '#/components/schemas/UndeployModelNode'
    UndeployModelNode:
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/UndeployModelNodeStats'
    UndeployModelNodeStats:
      type: object
      additionalProperties: true
    UnloadModelResponse:
      type: object
      additionalProperties:
        title: nodes
        $ref: '#/components/schemas/UnloadModelNode'
    UnloadModelNode:
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/UnloadModelNodeStats'
    UnloadModelNodeStats:
      type: object
      additionalProperties: true
    PredictModelResponse:
      type: object
      properties:
        inference_results:
          type: array
          items:
            $ref: '#/components/schemas/PredictModelResult'
    PredictModelResult:
      type: object
      properties:
        output:
          type: array
          items:
            $ref: '#/components/schemas/PredictModelOutput'
    PredictModelOutput:
      type: object
      properties:
        name:
          type: string
          description: The output name.
        data_type:
          type: string
          description: The output data type.
          enum:
            - BOOLEAN
            - FLOAT16
            - FLOAT32
            - FLOAT64
            - INT32
            - INT64
            - INT8
            - STRING
            - UINT8
            - UNKNOWN
        shape:
          type: array
          items:
            type: integer
            format: int64
            description: The output shape.
        data:
          type: array
          items:
            type: number
            format: double
            description: The output data.
        byte_buffer:
          $ref: '#/components/schemas/ByteBuffer'
      required:
        - data
    Credential:
      type: object
      properties:
        access_key:
          type: string
        secret_key:
          type: string
        session_token:
          type: string
      additionalProperties: true
    Parameters:
      type: object
      additionalProperties: true
    ClientConfig:
      type: object
      properties:
        max_connection:
          type: integer
        connection_timeout:
          type: integer
        read_timeout:
          type: integer
        retry_backoff_policy:
          type: string
        max_retry_times:
          type: integer
        retry_backoff_millis:
          type: integer
        retry_timeout_seconds:
          type: integer
    Action:
      type: object
      properties:
        action_type:
          type: string
        method:
          type: string
        headers:
          $ref: '#/components/schemas/Headers'
        url:
          type: string
        request_body:
          type: string
        pre_process_function:
          type: string
        post_process_function:
          type: string
    LLM:
      type: object
      properties:
        model_id:
          type: string
        parameters:
          $ref: '#/components/schemas/Parameters'
    Memory:
      type: object
      properties:
        type:
          type: string
        memory_id:
          $ref: '_common.yaml#/components/schemas/Name'
        create_time:
          type: string
          format: date-time
          description: The create time.
        updated_time:
          type: string
          format: date-time
          description: The updated time.
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        user:
          type: string
          description: The username of the user.
        additional_info:
          $ref: '#/components/schemas/AdditionalInfo'
    AdditionalInfo:
      type: object
      description: Additional information query.
      properties: {}
      additionalProperties: true
    ToolItems:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        parameters:
          $ref: '#/components/schemas/Parameters'
        include_output_in_agent_response:
          type: boolean
      additionalProperties: true
    Headers:
      type: object
      properties:
        content_type:
          type: string
      additionalProperties: true
    GetConnectorResponse:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        description:
          type: string
          description: The connector description.
        protocol:
          type: string
          description: The connector protocol.
          enum:
            - aws_sigv4
            - http
        parameters:
          $ref: '#/components/schemas/Parameters'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        created_time:
          type: integer
          format: int64
          description: The created time.
        last_updated_time:
          type: integer
          format: int64
          description: The last updated time.
    SearchConnectorsResponse:
      $ref: '#/components/schemas/SearchResponse'
    GetAgentResponse:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        type:
          type: string
          description: The agent type.
          enum:
            - conversational
            - conversational_flow
            - flow
        description:
          type: string
          description: The agent description.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/ToolItems'
        created_time:
          type: integer
          format: int64
          description: The created time.
        last_updated_time:
          type: integer
          format: int64
          description: The last updated time.
        is_hidden:
          type: boolean
          description: Whether the agent is hidden.
    SearchAgentsResponse:
      $ref: '#/components/schemas/SearchResponse'
    SearchMemoryResponse:
      $ref: '#/components/schemas/SearchResponse'
    Message:
      type: object
      properties:
        memory_id:
          $ref: '_common.yaml#/components/schemas/Name'
        message_id:
          $ref: '_common.yaml#/components/schemas/Name'
        create_time:
          type: string
          format: date-time
          description: The create time.
        input:
          type: ['null', string]
          description: The question in the message.
        prompt_template:
          type: ['null', string]
          description: The prompt template.
        response:
          type: ['null', string]
          description: The answer to the question.
        origin:
          type: ['null', string]
          description: The system name that generated the response.
        additional_info:
          $ref: '#/components/schemas/AdditionalInfo'
        parent_message_id:
          type: ['null', string]
          description: The parent message ID.
        trace_number:
          type: integer
          format: int64
          description: The trace number.
    SearchMessageResponse:
      $ref: '#/components/schemas/SearchResponse'
    ModelFormat:
      type: string
      enum:
        - ONNX
        - TORCH_SCRIPT
    ProfileRequest:
      type: object
      properties:
        node_ids:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/Id'
        model_ids:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/Id'
        task_ids:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/Id'
        return_all_tasks:
          type: boolean
          description: Whether to return all tasks.
        return_all_models:
          type: boolean
          description: Whether to return all models.
    GetProfileResponse:
      type: object
      properties:
        nodes:
          $ref: '#/components/schemas/Nodes'
    Nodes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Node'
    Node:
      type: object
      properties:
        tasks:
          $ref: '#/components/schemas/Tasks'
        models:
          $ref: '#/components/schemas/Models'
    Models:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ModelProfile'
    ModelProfile:
      type: object
      properties:
        model_state:
          type: string
          description: The model state.
          enum:
            - DEPLOYED
            - DEPLOYING
            - DEPLOY_FAILED
            - PARTIALLY_DEPLOYED
            - REGISTERED
            - REGISTERING
            - UNDEPLOYED
        predictor:
          type: string
          description: The predictor.
        worker_nodes:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/NodeIds'
        predict_request_stats:
          $ref: '#/components/schemas/PredictRequestStats'
        target_worker_nodes:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/NodeIds'
        memory_size_estimation_cpu:
          type: integer
          format: int64
          description: The estimated memory size in CPU.
        memory_size_estimation_gpu:
          type: integer
          format: int64
          description: The estimated memory size in GPU.
        deploy:
          $ref: '#/components/schemas/ModelStats'
        register:
          $ref: '#/components/schemas/ModelStats'
        undeploy:
          $ref: '#/components/schemas/ModelStats'
        predict:
          $ref: '#/components/schemas/ModelStats'
        train:
          $ref: '#/components/schemas/ModelStats'
        train_predict:
          $ref: '#/components/schemas/ModelStats'
    PredictRequestStats:
      type: object
      properties:
        count:
          type: integer
          format: int64
          description: The total predict requests on this node.
        max:
          type: number
          format: double
          description: The maximum latency in milliseconds.
        min:
          type: number
          format: double
          description: The minimum latency in milliseconds.
        average:
          type: number
          format: double
          description: The average latency in milliseconds.
        p50:
          type: number
          format: double
          description: The 50th percentile latency in milliseconds.
        p90:
          type: number
          format: double
          description: The 90th percentile latency in milliseconds.
        p99:
          type: number
          format: double
          description: The 99th percentile latency in milliseconds.
    Tasks:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Task'
    GetStatsResponse:
      type: object
      properties:
        ml_model_count:
          type: integer
          format: int64
          description: The model count.
        ml_connector_index_status:
          type: string
          description: The connector index status.
          enum:
            - green
            - non-existent
            - red
            - yellow
        ml_config_index_status:
          type: string
          description: The config index status.
          enum:
            - green
            - non-existent
            - red
            - yellow
        ml_task_index_status:
          type: string
          description: The task index status.
          enum:
            - green
            - non-existent
            - red
            - yellow
        ml_connector_count:
          type: integer
          format: int64
          description: The connector count.
        ml_model_index_status:
          type: string
          description: The model index status.
          enum:
            - green
            - non-existent
            - red
            - yellow
        ml_controller_index_status:
          type: string
          description: The controller index status.
          enum:
            - green
            - non-existent
            - red
            - yellow
        nodes:
          $ref: '#/components/schemas/NodeStats'
    NodeStats:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NodeStatsDetails'
    NodeStatsDetails:
      type: object
      properties:
        ml_deployed_model_count:
          type: integer
          format: int64
          description: The deployed model count.
        ml_jvm_heap_usage:
          type: integer
          format: int64
          description: The JVM heap usage.
        ml_failure_count:
          type: integer
          format: int64
          description: The failure count.
        ml_executing_task_count:
          type: integer
          format: int64
          description: The executing task count.
        ml_circuit_breaker_trigger_count:
          type: integer
          format: int64
          description: The circuit breaker trigger count.
        ml_request_count:
          type: integer
          format: int64
          description: The request count.
        algorithms:
          $ref: '#/components/schemas/Algorithms'
        models:
          $ref: '#/components/schemas/Models'
    Algorithms:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AlgorithmOperations'
    AlgorithmOperations:
      type: object
      properties:
        deploy:
          $ref: '#/components/schemas/ModelStats'
        register:
          $ref: '#/components/schemas/ModelStats'
        undeploy:
          $ref: '#/components/schemas/ModelStats'
        predict:
          $ref: '#/components/schemas/ModelStats'
        train:
          $ref: '#/components/schemas/ModelStats'
        train_predict:
          $ref: '#/components/schemas/ModelStats'
    ModelStats:
      type: object
      properties:
        ml_action_request_count:
          type: integer
          format: int64
          description: The request count.
        ml_action_failure_count:
          type: integer
          format: int64
          description: The failure count.
        ml_executing_task_count:
          type: integer
          format: int64
          description: The executing task count.
    Aggregation:
      type: object
      properties:
        sum:
          $ref: '#/components/schemas/Aggregation'
        field:
          type: string
          description: The field name.
      additionalProperties: true
    Tool:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        description:
          type: string
          description: The tool description.
        type:
          type: string
          description: The tool type.
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'