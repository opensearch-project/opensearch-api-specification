openapi: 3.1.0
info:
  title: Schemas of asynchronous_search._common category
  description: Schemas of asynchronous_search._common category
  version: 1.0.0
paths: {}
components:
  schemas:
    ResponseBody:
      type: object
      properties:
        id:
          type: string
        state:
          type: string
        start_time_in_millis: 
          type: number
        expiration_time_in_millis:
          type: number
        took: 
          type: number
        response:
          $ref: '_core.search.yaml#/components/schemas/ResponseBody'
    StatsResponse:
      type: object
      properties:
        _nodes:
          $ref: '_common.yaml#/components/schemas/NodeStatistics'
        cluster_name:
          type: string
        nodes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NodesStats'
    NodesStats:
      type: object
      properties:
        asynchronous_search_stats:
          $ref: '#/components/schemas/AsynchronousSearchStats'
    Search:
      type: object
      properties:
        aggregations:
          description: Defines the aggregations that are run as part of the search request.
          type: object
          additionalProperties:
            $ref: '_common.aggregations.yaml#/components/schemas/AggregationContainer'
        collapse:
          $ref: '_core.search.yaml#/components/schemas/FieldCollapse'
        explain:
          description: If true, returns detailed information about score computation as part of a hit.
          type: boolean
        ext:
          description: Configuration of search extensions defined by OpenSearch plugins.
          type: object
          additionalProperties:
            type: object
        from:
          description: |-
            Starting document offset.
            Needs to be non-negative.
            By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.
            To page through more hits, use the `search_after` parameter.
          type: number
        highlight:
          $ref: '_core.search.yaml#/components/schemas/Highlight'
        track_total_hits:
          $ref: '_core.search.yaml#/components/schemas/TrackHits'
        indices_boost:
          description: Boosts the _score of documents from specified indices.
          type: array
          items:
            type: object
            additionalProperties:
              type: number
        docvalue_fields:
          description: |-
            Array of wildcard (`*`) patterns.
            The request returns doc values for field names matching these patterns in the `hits.fields` property of the response.
          type: array
          items:
            $ref: '_common.query_dsl.yaml#/components/schemas/FieldAndFormat'
        rank:
          $ref: '_common.yaml#/components/schemas/RankContainer'
        min_score:
          description: |-
            Minimum `_score` for matching documents.
            Documents with a lower `_score` are not included in the search results.
          type: number
        post_filter:
          $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        profile:
          description: |-
            Set to `true` to return detailed timing information about the execution of individual components in a search request.
            NOTE: This is a debugging tool and adds significant overhead to search execution.
          type: boolean
        query:
          $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        script_fields:
          description: Retrieve a script evaluation (based on different fields) for each hit.
          type: object
          additionalProperties:
            $ref: '_common.yaml#/components/schemas/ScriptField'
        search_after:
          $ref: '_common.yaml#/components/schemas/SortResults'
        size:
          description: |-
            The number of hits to return.
            By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.
            To page through more hits, use the `search_after` parameter.
          type: number
        slice:
          $ref: '_common.yaml#/components/schemas/SlicedScroll'
        sort:
          $ref: '_common.yaml#/components/schemas/Sort'
        _source:
          $ref: '_core.search.yaml#/components/schemas/SourceConfig'
        fields:
          description: |-
            Array of wildcard (`*`) patterns.
            The request returns values for field names matching these patterns in the `hits.fields` property of the response.
          type: array
          items:
            $ref: '_common.query_dsl.yaml#/components/schemas/FieldAndFormat'
        suggest:
          $ref: '_core.search.yaml#/components/schemas/Suggester'
        terminate_after:
          description: |-
            Maximum number of documents to collect for each shard.
            If a query reaches this limit, OpenSearch terminates the query early.
            OpenSearch collects documents before sorting.
            Use with caution.
            OpenSearch applies this parameter to each shard handling the request.
            When possible, let OpenSearch perform early termination automatically.
            Avoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.
            If set to `0` (default), the query does not terminate early.
          type: integer
          format: int32
        timeout:
          description: |-
            Specifies the period of time to wait for a response from each shard.
            If no response is received before the timeout expires, the request fails and returns an error.
            Defaults to no timeout.
          type: string
        track_scores:
          description: If true, calculate and return document scores, even if the scores are not used for sorting.
          type: boolean
        version:
          description: If true, returns document version as part of a hit.
          type: boolean
        seq_no_primary_term:
          description: If `true`, returns sequence number and primary term of the last modification of each hit.
          type: boolean
        stored_fields:
          $ref: '_common.yaml#/components/schemas/Fields'
        pit:
          $ref: '_core.search.yaml#/components/schemas/PointInTimeReference'
        runtime_mappings:
          $ref: '_common.mapping.yaml#/components/schemas/RuntimeFields'
        stats:
          description: |-
            Stats groups to associate with the search.
            Each group maintains a statistics aggregation for its associated searches.
            You can retrieve these stats using the indices stats API.
          type: array
          items:
            type: string
      description: The search definition using the Query DSL.
    AsynchronousSearchStats:
      type: object
      properties:
        submitted:
          type: integer
        initialized:
          type: integer
        search_failed:
          type: integer
        search_completed:
          type: integer
        rejected:
          type: integer
        persist_failed:
          type: integer
        cancelled:
          type: integer
        running_current:
          type: integer
        persisted:
          type: integer