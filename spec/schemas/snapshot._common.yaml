openapi: 3.1.0
info:
  title: Schemas of `snapshot._common` Category
  description: Schemas of `snapshot._common` category.
  version: 1.0.0
paths: {}
components:
  schemas:
    SnapshotInfo:
      type: object
      properties:
        data_streams:
          type: array
          items:
            type: string
        duration:
          $ref: '_common.yaml#/components/schemas/Duration'
        duration_in_millis:
          $ref: '_common.yaml#/components/schemas/DurationValueUnitMillis'
        end_time:
          $ref: '_common.yaml#/components/schemas/DateTime'
        end_time_in_millis:
          $ref: '_common.yaml#/components/schemas/EpochTimeUnitMillis'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotShardFailure'
        include_global_state:
          type: boolean
        indices:
          type: array
          items:
            $ref: '_common.yaml#/components/schemas/IndexName'
        metadata:
          $ref: '_common.yaml#/components/schemas/Metadata'
        pinned_timestamp:
          $ref: '_common.yaml#/components/schemas/EpochTimeUnitMillis'
        reason:
          type: string
        remote_store_index_shallow_copy:
          type: boolean
        snapshot:
          $ref: '_common.yaml#/components/schemas/Name'
        shards:
          $ref: '_common.yaml#/components/schemas/ShardStatistics'
        start_time:
          $ref: '_common.yaml#/components/schemas/DateTime'
        start_time_in_millis:
          $ref: '_common.yaml#/components/schemas/EpochTimeUnitMillis'
        state:
          type: string
        uuid:
          $ref: '_common.yaml#/components/schemas/Uuid'
        version:
          $ref: '_common.yaml#/components/schemas/VersionString'
        version_id:
          $ref: '_common.yaml#/components/schemas/VersionNumber'
      required:
        - data_streams
        - snapshot
        - uuid
    SnapshotShardFailure:
      type: object
      properties:
        index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        node_id:
          $ref: '_common.yaml#/components/schemas/Id'
        reason:
          type: string
        shard_id:
          $ref: '_common.yaml#/components/schemas/Id'
        status:
          type: string
      required:
        - index
        - reason
        - shard_id
        - status
    Repository:
      type: object
      properties:
        type:
          type: string
        uuid:
          $ref: '_common.yaml#/components/schemas/Uuid'
        settings:
          $ref: '#/components/schemas/RepositorySettings'
      required:
        - settings
        - type
    RepositorySettings:
      type: object
      properties:
        chunk_size:
          type: string
        compress:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
        concurrent_streams:
          $ref: '_common.yaml#/components/schemas/StringifiedInteger'
        location:
          type: string
        read_only:
          $ref: '_common.yaml#/components/schemas/StringifiedBoolean'
      required:
        - location
    SnapshotStatus:
      type: object
      properties:
        include_global_state:
          type: boolean
        indices:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SnapshotIndexStats'
        repository:
          type: string
        shards_stats:
          $ref: '#/components/schemas/SnapshotShardsStats'
        snapshot:
          type: string
        state:
          type: string
        stats:
          $ref: '#/components/schemas/SnapshotStats'
        uuid:
          $ref: '_common.yaml#/components/schemas/Uuid'
      required:
        - indices
        - repository
        - shards_stats
        - snapshot
        - state
        - stats
        - uuid
    SnapshotIndexStats:
      type: object
      properties:
        shards:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SnapshotShardsStatus'
        shards_stats:
          $ref: '#/components/schemas/SnapshotShardsStats'
        stats:
          $ref: '#/components/schemas/SnapshotStats'
      required:
        - shards
        - shards_stats
        - stats
    SnapshotShardsStatus:
      type: object
      properties:
        node:
          $ref: '_common.yaml#/components/schemas/NodeId'
        reason:
          type: string
        stage:
          $ref: '#/components/schemas/SnapshotShardsStatsStage'
        stats:
          $ref: '#/components/schemas/SnapshotShardsStatsSummary'
      required:
        - stage
        - stats
    SnapshotShardsStatsStage:
      oneOf:
        - type: string
          const: DONE
          description: Number of shards in the snapshot that were successfully stored in the repository.
        - type: string
          const: FAILURE
          description: Number of shards in the snapshot that were not successfully stored in the repository.
        - type: string
          const: FINALIZE
          description: Number of shards in the snapshot that are in the finalizing stage of being stored in the repository.
        - type: string
          const: INIT
          description: Number of shards in the snapshot that are in the initializing stage of being stored in the repository.
        - type: string
          const: STARTED
          description: Number of shards in the snapshot that are in the started stage of being stored in the repository.
    SnapshotShardsStatsSummary:
      type: object
      properties:
        incremental:
          $ref: '#/components/schemas/SnapshotShardsStatsSummaryItem'
        processed:
          $ref: '#/components/schemas/SnapshotShardsStatsSummaryItem'
        total:
          $ref: '#/components/schemas/SnapshotShardsStatsSummaryItem'
        start_time_in_millis:
          $ref: '_common.yaml#/components/schemas/EpochTimeUnitMillis'
        time:
          $ref: '_common.yaml#/components/schemas/Duration'
        time_in_millis:
          $ref: '_common.yaml#/components/schemas/DurationValueUnitMillis'
      required:
        - incremental
        - start_time_in_millis
        - time_in_millis
        - total
    SnapshotShardsStatsSummaryItem:
      type: object
      properties:
        file_count:
          type: integer
          format: int64
        size_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
      required:
        - file_count
        - size_in_bytes
    SnapshotShardsStats:
      type: object
      properties:
        done:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        finalizing:
          type: integer
          format: int64
        initializing:
          type: integer
          format: int64
        started:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
      required:
        - done
        - failed
        - finalizing
        - initializing
        - started
        - total
    SnapshotStats:
      type: object
      properties:
        incremental:
          $ref: '#/components/schemas/FileCountSnapshotStats'
        processed:
          $ref: '#/components/schemas/FileCountSnapshotStats'
        start_time_in_millis:
          $ref: '_common.yaml#/components/schemas/EpochTimeUnitMillis'
        time:
          $ref: '_common.yaml#/components/schemas/Duration'
        time_in_millis:
          $ref: '_common.yaml#/components/schemas/DurationValueUnitMillis'
        total:
          $ref: '#/components/schemas/FileCountSnapshotStats'
      required:
        - incremental
        - start_time_in_millis
        - time_in_millis
        - total
    FileCountSnapshotStats:
      type: object
      properties:
        file_count:
          type: integer
          format: int32
        size_in_bytes:
          $ref: '_common.yaml#/components/schemas/ByteCount'
      required:
        - file_count
        - size_in_bytes
