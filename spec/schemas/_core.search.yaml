openapi: 3.1.0
info:
  title: Schemas of `_core.search` Category
  description: Schemas of `_core.search` category.
  version: 1.0.0
paths: {}
components:
  schemas:
    T:
      x-is-generic-type-parameter: true
    HitsMetadata:
      type: object
      properties:
        total:
          description: The total number of hits, present only if `track_total_hits` is not set to `false` in the search request.
          oneOf:
            - $ref: '#/components/schemas/TotalHits'
            - type: integer
              format: int64
        hits:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Hit'
              - type: object
                properties:
                  _source:
                    $ref: '#/components/schemas/T'
        max_score:
          oneOf:
            - type: 'null'
            - type: number
              format: float
      required:
        - hits
    TotalHits:
      type: object
      properties:
        relation:
          $ref: '#/components/schemas/TotalHitsRelation'
        value:
          type: integer
          format: int64
      required:
        - relation
        - value
    TotalHitsRelation:
      oneOf:
        - type: string
          const: eq
          description: Accurate.
        - type: string
          const: gte
          description: Lower bound, including returned events or sequences.
    TDocument:
      x-is-generic-type-parameter: true
    Hit:
      type: object
      properties:
        _type:
          $ref: '_common.yaml#/components/schemas/Type'
        _index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        _id:
          $ref: '_common.yaml#/components/schemas/Id'
        _score:
          oneOf:
            - type: 'null'
            - type: number
              format: double
        _explanation:
          $ref: '_core.explain.yaml#/components/schemas/Explanation'
        fields:
          type: object
          additionalProperties: true
        highlight:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        inner_hits:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InnerHitsResult'
        matched_queries:
          type: array
          items:
            type: string
        _nested:
          $ref: '#/components/schemas/NestedIdentity'
        _ignored:
          type: array
          items:
            type: string
        ignored_field_values:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        _shard:
          type: string
        _node:
          type: string
        _routing:
          type: string
        _source:
          $ref: '#/components/schemas/TDocument'
        _seq_no:
          $ref: '_common.yaml#/components/schemas/SequenceNumber'
        _primary_term:
          type: integer
          format: int64
        _version:
          $ref: '_common.yaml#/components/schemas/VersionNumber'
        sort:
          $ref: '_common.yaml#/components/schemas/SortResults'
    InnerHitsResult:
      type: object
      properties:
        hits:
          $ref: '#/components/schemas/HitsMetadata'
      required:
        - hits
    NestedIdentity:
      type: object
      properties:
        field:
          $ref: '_common.yaml#/components/schemas/Field'
        offset:
          type: integer
          format: int32
        _nested:
          $ref: '#/components/schemas/NestedIdentity'
      required:
        - field
        - offset
    Profile:
      type: object
      properties:
        shards:
          type: array
          items:
            $ref: '#/components/schemas/ShardProfile'
      required:
        - shards
    ShardProfile:
      type: object
      properties:
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/AggregationProfile'
        id:
          type: string
        searches:
          type: array
          items:
            $ref: '#/components/schemas/SearchProfile'
        fetch:
          $ref: '#/components/schemas/FetchProfile'
      required:
        - aggregations
        - id
        - searches
    AggregationProfile:
      type: object
      properties:
        breakdown:
          $ref: '#/components/schemas/AggregationBreakdown'
        description:
          type: string
        time_in_nanos:
          $ref: '_common.yaml#/components/schemas/DurationValueUnitNanos'
        type:
          type: string
        debug:
          $ref: '#/components/schemas/AggregationProfileDebug'
        children:
          type: array
          items:
            $ref: '#/components/schemas/AggregationProfile'
      required:
        - breakdown
        - description
        - time_in_nanos
        - type
    AggregationBreakdown:
      type: object
      properties:
        build_aggregation:
          type: integer
          format: int64
        build_aggregation_count:
          type: integer
          format: int64
        build_leaf_collector:
          type: integer
          format: int64
        build_leaf_collector_count:
          type: integer
          format: int64
        collect:
          type: integer
          format: int64
        collect_count:
          type: integer
          format: int64
        initialize:
          type: integer
          format: int64
        initialize_count:
          type: integer
          format: int64
        post_collection:
          type: integer
          format: int64
        post_collection_count:
          type: integer
          format: int64
        reduce:
          type: integer
          format: int64
        reduce_count:
          type: integer
          format: int64
      required:
        - build_aggregation
        - build_aggregation_count
        - build_leaf_collector
        - build_leaf_collector_count
        - collect
        - collect_count
        - initialize
        - initialize_count
        - reduce
        - reduce_count
    AggregationProfileDebug:
      type: object
      properties:
        segments_with_multi_valued_ords:
          type: integer
          format: int32
        collection_strategy:
          type: string
        segments_with_single_valued_ords:
          type: integer
          format: int32
        total_buckets:
          type: integer
          format: int32
        built_buckets:
          type: integer
          format: int32
        result_strategy:
          type: string
        has_filter:
          type: boolean
        delegate:
          type: string
        delegate_debug:
          $ref: '#/components/schemas/AggregationProfileDelegateDebug'
        chars_fetched:
          type: integer
          format: int32
        extract_count:
          type: integer
          format: int32
        extract_ns:
          type: integer
          format: int32
        values_fetched:
          type: integer
          format: int32
        collect_analyzed_ns:
          type: integer
          format: int32
        collect_analyzed_count:
          type: integer
          format: int32
        surviving_buckets:
          type: integer
          format: int32
        ordinals_collectors_used:
          type: integer
          format: int32
        ordinals_collectors_overhead_too_high:
          type: integer
          format: int32
        string_hashing_collectors_used:
          type: integer
          format: int32
        numeric_collectors_used:
          type: integer
          format: int32
        empty_collectors_used:
          type: integer
          format: int32
        deferred_aggregators:
          type: array
          items:
            type: string
        map_reducer:
          type: string
    AggregationProfileDelegateDebug:
      type: object
      properties:
        segments_with_doc_count_field:
          type: integer
          format: int32
        segments_with_deleted_docs:
          type: integer
          format: int32
        filters:
          type: array
          items:
            $ref: '#/components/schemas/AggregationProfileDelegateDebugFilter'
        segments_counted:
          type: integer
          format: int32
        segments_collected:
          type: integer
          format: int32
    AggregationProfileDelegateDebugFilter:
      type: object
      properties:
        results_from_metadata:
          type: integer
          format: int32
        query:
          type: string
        specialized_for:
          type: string
        segments_counted_in_constant_time:
          type: integer
          format: int32
    SearchProfile:
      type: object
      properties:
        collector:
          type: array
          items:
            $ref: '#/components/schemas/Collector'
        query:
          type: array
          items:
            $ref: '#/components/schemas/QueryProfile'
        rewrite_time:
          type: integer
          format: int64
      required:
        - collector
        - query
        - rewrite_time
    Collector:
      type: object
      properties:
        name:
          type: string
        reason:
          type: string
        time_in_nanos:
          $ref: '_common.yaml#/components/schemas/DurationValueUnitNanos'
        children:
          type: array
          items:
            $ref: '#/components/schemas/Collector'
      required:
        - name
        - reason
        - time_in_nanos
    QueryProfile:
      type: object
      properties:
        breakdown:
          $ref: '#/components/schemas/QueryBreakdown'
        description:
          type: string
        time_in_nanos:
          $ref: '_common.yaml#/components/schemas/DurationValueUnitNanos'
        type:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/QueryProfile'
      required:
        - breakdown
        - description
        - time_in_nanos
        - type
    QueryBreakdown:
      type: object
      properties:
        advance:
          type: integer
          format: int64
        advance_count:
          type: integer
          format: int64
        build_scorer:
          type: integer
          format: int64
        build_scorer_count:
          type: integer
          format: int64
        create_weight:
          type: integer
          format: int64
        create_weight_count:
          type: integer
          format: int64
        match:
          type: integer
          format: int64
        match_count:
          type: integer
          format: int64
        shallow_advance:
          type: integer
          format: int64
        shallow_advance_count:
          type: integer
          format: int64
        next_doc:
          type: integer
          format: int64
        next_doc_count:
          type: integer
          format: int64
        score:
          type: integer
          format: int64
        score_count:
          type: integer
          format: int64
        compute_max_score:
          type: integer
          format: int64
        compute_max_score_count:
          type: integer
          format: int64
        set_min_competitive_score:
          type: integer
          format: int64
        set_min_competitive_score_count:
          type: integer
          format: int64
      required:
        - advance
        - advance_count
        - build_scorer
        - build_scorer_count
        - compute_max_score
        - compute_max_score_count
        - create_weight
        - create_weight_count
        - match
        - match_count
        - next_doc
        - next_doc_count
        - score
        - score_count
        - set_min_competitive_score
        - set_min_competitive_score_count
        - shallow_advance
        - shallow_advance_count
    FetchProfile:
      type: object
      properties:
        type:
          type: string
        description:
          type: string
        time_in_nanos:
          $ref: '_common.yaml#/components/schemas/DurationValueUnitNanos'
        breakdown:
          $ref: '#/components/schemas/FetchProfileBreakdown'
        debug:
          $ref: '#/components/schemas/FetchProfileDebug'
        children:
          type: array
          items:
            $ref: '#/components/schemas/FetchProfile'
      required:
        - breakdown
        - description
        - time_in_nanos
        - type
    FetchProfileBreakdown:
      type: object
      properties:
        load_source:
          type: integer
          format: int32
        load_source_count:
          type: integer
          format: int32
        load_stored_fields:
          type: integer
          format: int32
        load_stored_fields_count:
          type: integer
          format: int32
        next_reader:
          type: integer
          format: int32
        next_reader_count:
          type: integer
          format: int32
        process_count:
          type: integer
          format: int32
        process:
          type: integer
          format: int32
    FetchProfileDebug:
      type: object
      properties:
        stored_fields:
          type: array
          items:
            type: string
        fast_path:
          type: integer
          format: int32
    Suggest:
      oneOf:
        - title: completion
          $ref: '#/components/schemas/CompletionSuggest'
        - title: phrase
          $ref: '#/components/schemas/PhraseSuggest'
        - title: term
          $ref: '#/components/schemas/TermSuggest'
    CompletionSuggest:
      allOf:
        - $ref: '#/components/schemas/SuggestBase'
        - type: object
          properties:
            options:
              oneOf:
                - $ref: '#/components/schemas/CompletionSuggestOption'
                - type: array
                  items:
                    $ref: '#/components/schemas/CompletionSuggestOption'
          required:
            - options
    CompletionSuggestOption:
      type: object
      properties:
        collate_match:
          type: boolean
        contexts:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Context'
        fields:
          type: object
          additionalProperties:
            type: object
        _id:
          type: string
        _index:
          $ref: '_common.yaml#/components/schemas/IndexName'
        _routing:
          $ref: '_common.yaml#/components/schemas/Routing'
        _score:
          type: number
          format: float
        _source:
          type: object
        text:
          type: string
        score:
          type: number
          format: float
      required:
        - text
    Context:
      description: Text or location that we want similar documents for or a lookup to a document's field for the text.
      oneOf:
        - title: category
          type: string
        - title: location
          $ref: '_common.yaml#/components/schemas/GeoLocation'
    SuggestBase:
      type: object
      properties:
        length:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        text:
          type: string
      required:
        - length
        - offset
        - text
    PhraseSuggest:
      allOf:
        - $ref: '#/components/schemas/SuggestBase'
        - type: object
          properties:
            options:
              oneOf:
                - $ref: '#/components/schemas/PhraseSuggestOption'
                - type: array
                  items:
                    $ref: '#/components/schemas/PhraseSuggestOption'
          required:
            - options
    PhraseSuggestOption:
      type: object
      properties:
        text:
          type: string
        score:
          type: number
          format: double
        highlighted:
          type: string
        collate_match:
          type: boolean
      required:
        - score
        - text
    TermSuggest:
      allOf:
        - $ref: '#/components/schemas/SuggestBase'
        - type: object
          properties:
            options:
              oneOf:
                - $ref: '#/components/schemas/TermSuggestOption'
                - type: array
                  items:
                    $ref: '#/components/schemas/TermSuggestOption'
          required:
            - options
    TermSuggestOption:
      type: object
      properties:
        text:
          type: string
        score:
          type: number
          format: double
        freq:
          type: integer
          format: int64
        highlighted:
          type: string
        collate_match:
          type: boolean
      required:
        - score
        - text
    TrackHits:
      description: |-
        The number of hits matching the query. When `true`, the exact
        number of hits is returned at the cost of some performance. When `false`, the
        response does not include the total number of hits matching the query.
        Default is `10,000` hits.
      oneOf:
        - title: enabled
          type: boolean
        - title: count
          type: integer
          format: int32
    SourceConfigParam:
      description: |-
        Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered.
        Use this setting with the `_source_includes` and `_source_excludes` parameters.
      oneOf:
        - title: fetch
          type: boolean
        - title: fields
          $ref: '_common.yaml#/components/schemas/Fields'
    InnerHits:
      type: object
      properties:
        name:
          $ref: '_common.yaml#/components/schemas/Name'
        size:
          description: The maximum number of hits to return per `inner_hits`.
          type: integer
          format: int32
        from:
          description: The inner hit that initiates document offset.
          type: integer
          format: int32
        collapse:
          $ref: '#/components/schemas/FieldCollapse'
        docvalue_fields:
          type: array
          items:
            $ref: '_common.query_dsl.yaml#/components/schemas/FieldAndFormat'
        explain:
          type: boolean
        highlight:
          $ref: '#/components/schemas/Highlight'
        ignore_unmapped:
          type: boolean
        script_fields:
          type: object
          additionalProperties:
            $ref: '_common.yaml#/components/schemas/ScriptField'
        seq_no_primary_term:
          type: boolean
        fields:
          $ref: '_common.yaml#/components/schemas/Fields'
        sort:
          $ref: '_common.yaml#/components/schemas/Sort'
        _source:
          $ref: '#/components/schemas/SourceConfig'
        stored_fields:
          $ref: '_common.yaml#/components/schemas/Fields'
        track_scores:
          type: boolean
        version:
          type: boolean
    FieldCollapse:
      type: object
      properties:
        field:
          $ref: '_common.yaml#/components/schemas/Field'
        inner_hits:
          description: The number of inner hits and their sort order.
          oneOf:
            - $ref: '#/components/schemas/InnerHits'
            - type: array
              items:
                $ref: '#/components/schemas/InnerHits'
        max_concurrent_group_searches:
          description: The number of concurrent requests that are allowed to be retrieved by the `inner_hits` parameter per group.
          type: integer
      required:
        - field
    Highlight:
      allOf:
        - $ref: '#/components/schemas/HighlightBase'
        - type: object
          properties:
            encoder:
              $ref: '#/components/schemas/HighlighterEncoder'
            fields:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/HighlightField'
          required:
            - fields
    HighlighterEncoder:
      type: string
      enum:
        - default
        - html
    HighlightField:
      allOf:
        - $ref: '#/components/schemas/HighlightBase'
        - type: object
          properties:
            matched_fields:
              $ref: '_common.yaml#/components/schemas/Fields'
            analyzer:
              $ref: '_common.analysis.yaml#/components/schemas/Analyzer'
    HighlightBase:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HighlighterType'
        boundary_chars:
          description: A string that contains each boundary character.
          type: string
        boundary_max_scan:
          description: How far to scan for boundary characters.
          type: integer
          format: int32
        boundary_scanner:
          $ref: '#/components/schemas/BoundaryScanner'
        boundary_scanner_locale:
          description: |-
            Controls which locale is used to search for sentence and word boundaries.
            This parameter takes the form of a language tag, for example, `"en-US"`, `"fr-FR"`, or `"ja-JP"`.
          type: string
        force_source:
          deprecated: true
          type: boolean
        fragmenter:
          $ref: '#/components/schemas/HighlighterFragmenter'
        fragment_offset:
          type: integer
          format: int32
        fragment_size:
          description: The size of the highlighted fragment in characters.
          type: integer
          format: int32
        highlight_filter:
          type: boolean
        highlight_query:
          $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        max_fragment_length:
          type: integer
          format: int32
        max_analyzer_offset:
          description: |-
            If set to a non-negative value, highlighting stops at this defined maximum limit.
            The rest of the text is not processed or highlighted, and no error is returned.
            The `max_analyzer_offset` query setting does not override the `index.highlight.max_analyzed_offset` setting, which takes precedence when it is set to a lower value than the query setting.
          type: integer
          format: int32
        no_match_size:
          description: The amount of text you want to return from the beginning of the field if there are no matching fragments to highlight.
          type: integer
          format: int32
        number_of_fragments:
          description: |-
            The maximum number of fragments to return.
            When the number of fragments is set to `0`, no fragments are returned.
            Instead, the entirety of a field's contents are highlighted and returned.
            This is useful when you need to highlight short texts, such as a title or address, in which fragmentation is not required.
            If `number_of_fragments` is set to `0`, the `fragment_size` is ignored.
          type: integer
          format: int32
        options:
          type: object
          additionalProperties:
            type: object
        order:
          $ref: '#/components/schemas/HighlighterOrder'
        phrase_limit:
          description: |-
            Controls the number of matching phrases in a document that are considered.
            This prevents the `fvh` highlighter from analyzing too many phrases and consuming too much memory.
            When using `matched_fields`, phrase-limited phrases per matched field are considered. Raising the limit increases the query time and consumes more memory.
            This setting is only supported by the `fvh` highlighter.
          type: integer
          format: int32
        post_tags:
          description: |-
            When used in conjunction with `pre_tags`, defines the HTML tags to use for the highlighted text.
            By default, highlighted text is wrapped in `<em>` and `</em>` tags.
          type: array
          items:
            type: string
        pre_tags:
          description: |-
            When used in conjunction with `post_tags`, defines the HTML tags to use for the highlighted text.
            By default, highlighted text is wrapped in `<em>` and `</em>` tags.
          type: array
          items:
            type: string
        require_field_match:
          description: |-
            By default, only fields that contains a query match are highlighted.
            Set to `false` to highlight all fields.
          type: boolean
        tags_schema:
          $ref: '#/components/schemas/HighlighterTagsSchema'
    HighlighterType:
      oneOf:
        - title: builtin
          $ref: '#/components/schemas/BuiltinHighlighterType'
        - title: custom
          type: string
    BuiltinHighlighterType:
      oneOf:
        - type: string
          const: plain
        - title: fast_vector
          type: string
          const: fvh
        - type: string
          const: unified
    BoundaryScanner:
      type: string
      enum:
        - chars
        - sentence
        - word
    HighlighterFragmenter:
      type: string
      enum:
        - simple
        - span
    HighlighterOrder:
      type: string
      enum:
        - score
    HighlighterTagsSchema:
      type: string
      enum:
        - styled
    SourceConfig:
      description: Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered.
      oneOf:
        - title: fetch
          type: boolean
        - title: filter
          $ref: '#/components/schemas/SourceFilter'
    SourceFilter:
      oneOf:
        - title: includes
          $ref: '_common.yaml#/components/schemas/Fields'
        - type: object
          properties:
            excludes:
              $ref: '_common.yaml#/components/schemas/Fields'
            includes:
              $ref: '_common.yaml#/components/schemas/Fields'
    Rescore:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/RescoreQuery'
        window_size:
          type: integer
          format: int32
      required:
        - query
    RescoreQuery:
      type: object
      properties:
        rescore_query:
          $ref: '_common.query_dsl.yaml#/components/schemas/QueryContainer'
        query_weight:
          description: The relative importance of the original query as compared to the rescore query.
          type: number
          format: float
        rescore_query_weight:
          description: The relative importance of the rescore query as compared to the original query.
          type: number
          format: float
        score_mode:
          $ref: '#/components/schemas/ScoreMode'
      required:
        - rescore_query
    ScoreMode:
      type: string
      enum:
        - avg
        - max
        - min
        - multiply
        - total
    Suggester:
      type: object
      properties:
        text:
          description: The global suggest text, which avoids repetition when the same text is used in several suggesters.
          type: string
      additionalProperties:
        title: suggesters
        description: The named suggesters.
        $ref: '#/components/schemas/FieldSuggester'
    FieldSuggester:
      allOf:
        - type: object
          properties:
            prefix:
              type: string
            regex:
              type: string
            text:
              type: string
        - type: object
          properties:
            completion:
              $ref: '#/components/schemas/CompletionSuggester'
            phrase:
              $ref: '#/components/schemas/PhraseSuggester'
            term:
              $ref: '#/components/schemas/TermSuggester'
          minProperties: 1
          maxProperties: 1
    CompletionSuggester:
      allOf:
        - $ref: '#/components/schemas/SuggesterBase'
        - type: object
          properties:
            contexts:
              type: object
              additionalProperties:
                type: array
                items:
                  $ref: '#/components/schemas/CompletionContext'
            fuzzy:
              $ref: '#/components/schemas/SuggestFuzziness'
            regex:
              type: string
            skip_duplicates:
              type: boolean
    PhraseSuggester:
      allOf:
        - $ref: '#/components/schemas/SuggesterBase'
        - type: object
          properties:
            collate:
              $ref: '#/components/schemas/PhraseSuggestCollate'
            confidence:
              type: number
              format: double
            direct_generator:
              type: array
              items:
                $ref: '#/components/schemas/DirectGenerator'
            force_unigrams:
              type: boolean
            gram_size:
              type: integer
              format: int32
            highlight:
              $ref: '#/components/schemas/PhraseSuggestHighlight'
            max_errors:
              type: number
              format: double
            real_word_error_likelihood:
              type: number
              format: double
            separator:
              type: string
            shard_size:
              type: integer
              format: int32
            smoothing:
              $ref: '#/components/schemas/SmoothingModel'
            text:
              type: string
            token_limit:
              type: integer
              format: int32
    SuggesterBase:
      type: object
      properties:
        analyzer:
          type: string
        field:
          type: string
        size:
          type: integer
          format: int32
      required:
        - field
    CompletionContext:
      oneOf:
        - title: context
          $ref: '#/components/schemas/Context'
        - type: object
          properties:
            boost:
              type: number
              format: double
            context:
              $ref: '#/components/schemas/Context'
            neighbours:
              type: array
              items:
                $ref: '_common.yaml#/components/schemas/GeoHashPrecision'
            precision:
              $ref: '_common.yaml#/components/schemas/GeoHashPrecision'
            prefix:
              type: boolean
          required:
            - context
    SuggestFuzziness:
      type: object
      properties:
        fuzziness:
          type: string
        min_length:
          type: integer
          format: int32
        prefix_length:
          type: integer
          format: int32
        transpositions:
          type: boolean
        unicode_aware:
          type: boolean
      required:
        - fuzziness
        - min_length
        - prefix_length
        - transpositions
        - unicode_aware
    PhraseSuggestCollate:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
        prune:
          type: boolean
        query:
          $ref: '#/components/schemas/PhraseSuggestCollateQuery'
      required:
        - query
    PhraseSuggestCollateQuery:
      type: object
      properties:
        id:
          type: string
        source:
          type: string
    DirectGenerator:
      type: object
      properties:
        field:
          type: string
        max_edits:
          type: integer
          format: int32
        max_inspections:
          type: number
          format: float
        max_term_freq:
          type: number
          format: float
        min_doc_freq:
          type: number
          format: float
        min_word_length:
          type: integer
          format: int32
        post_filter:
          type: string
        pre_filter:
          type: string
        prefix_length:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        suggest_mode:
          $ref: '_common.yaml#/components/schemas/SuggestMode'
      required:
        - field
    PhraseSuggestHighlight:
      type: object
      properties:
        post_tag:
          type: string
        pre_tag:
          type: string
      required:
        - post_tag
        - pre_tag
    SmoothingModel:
      type: object
      properties:
        laplace:
          $ref: '#/components/schemas/LaplaceSmoothingModel'
        linear_interpolation:
          $ref: '#/components/schemas/LinearInterpolationSmoothingModel'
        stupid_backoff:
          $ref: '#/components/schemas/StupidBackoffSmoothingModel'
      minProperties: 1
      maxProperties: 1
    LaplaceSmoothingModel:
      type: object
      properties:
        alpha:
          type: number
          format: double
      required:
        - alpha
    LinearInterpolationSmoothingModel:
      type: object
      properties:
        bigram_lambda:
          type: number
          format: double
        trigram_lambda:
          type: number
          format: double
        unigram_lambda:
          type: number
          format: double
      required:
        - bigram_lambda
        - trigram_lambda
        - unigram_lambda
    StupidBackoffSmoothingModel:
      type: object
      properties:
        discount:
          type: number
          format: double
      required:
        - discount
    TermSuggester:
      allOf:
        - $ref: '#/components/schemas/SuggesterBase'
        - type: object
          properties:
            lowercase_terms:
              type: boolean
            max_edits:
              type: integer
              format: int32
            max_inspections:
              type: integer
              format: int32
            max_term_freq:
              type: number
              format: float
            min_doc_freq:
              type: number
              format: float
            min_word_length:
              type: integer
              format: int32
            prefix_length:
              type: integer
              format: int32
            shard_size:
              type: integer
              format: int32
            sort:
              $ref: '#/components/schemas/SuggestSort'
            string_distance:
              $ref: '#/components/schemas/StringDistance'
            suggest_mode:
              $ref: '_common.yaml#/components/schemas/SuggestMode'
            text:
              type: string
    SuggestSort:
      type: string
      enum:
        - frequency
        - score
    StringDistance:
      type: string
      enum:
        - damerau_levenshtein
        - internal
        - jaro_winkler
        - levenshtein
        - ngram
    PointInTimeReference:
      type: object
      properties:
        id:
          $ref: '_common.yaml#/components/schemas/Id'
        keep_alive:
          $ref: '_common.yaml#/components/schemas/Duration'
      required:
        - id
    ResponseBody:
      type: object
      properties:
        took:
          type: integer
          format: int64
        timed_out:
          type: boolean
        _shards:
          $ref: '_common.yaml#/components/schemas/ShardStatistics'
        phase_took:
          x-version-added: '2.12'
          $ref: '_common.yaml#/components/schemas/PhaseTook'
        hits:
          $ref: '#/components/schemas/HitsMetadata'
        aggregations:
          type: object
          additionalProperties:
            $ref: '_common.aggregations.yaml#/components/schemas/Aggregate'
        _clusters:
          $ref: '_common.yaml#/components/schemas/ClusterStatistics'
        fields:
          type: object
          additionalProperties:
            type: object
        max_score:
          type: number
          format: float
        num_reduce_phases:
          type: integer
          format: int32
        profile:
          $ref: '#/components/schemas/Profile'
        pit_id:
          $ref: '_common.yaml#/components/schemas/Id'
        _scroll_id:
          $ref: '_common.yaml#/components/schemas/ScrollId'
        suggest:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Suggest'
        terminated_early:
          type: boolean
      required:
        - _shards
        - hits
        - timed_out
        - took
