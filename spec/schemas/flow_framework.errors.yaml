openapi: 3.1.0
info:
  title: Schemas of `flow_framework._errors` Category
  description: Schemas of `flow_framework._errors` category.
  version: 1.0.0
paths: {}
components:
  schemas:
    FlowFrameworkAPIDisabledError:
      type: object
      description: Indicates that the Flow Framework API is disabled.
      properties:
        error:
          type: string
          # example: This API is disabled. To enable it, set [flow_framework.enabled] to true.
        status:
          type: integer
    InvalidParameterError:
      type: object
      description: Indicates that invalid parameters were provided in the request.
      properties:
        error:
          type: string
          # example: Only the parameters [param1, param2] are permitted unless the provision parameter is set to true.
        status:
          type: integer
    ConflictError:
      type: object
      description: Indicates that conflicting parameters were provided in the request.
      properties:
        error:
          type: string
          # example: You cannot use both the 'provision_workflow' and 'update_workflow_fields' parameters in the same request.
        status:
          type: integer
    MissingParameterError:
      type: object
      description: Indicates that required parameters are missing from the request.
      properties:
        error:
          type: string
          # example: You cannot use the 'reprovision_workflow' parameter to create a new template.
        status:
          type: integer
    ParameterConflictError:
      type: object
      description: Indicates that mutually exclusive parameters were provided in the request.
      properties:
        error:
          type: string
          # example: You cannot use the 'reprovision_workflow' and 'use_case' parameters in the same request.
        status:
          type: integer
    WorkFlowIdNullError:
      type: object
      description: Indicates that the workflow ID is missing.
      properties:
        error:
          type: string
          # example: Workflow ID can not be null
        status:
          type: integer
    DuplicateKeyError:
      type: object
      description: Indicates that a duplicate key was found in the request.
      properties:
        error:
          type: string
          description: Error message when a duplicate key is found in the request.
        status:
          type: integer
          description: The HTTP status code for the error.
          # example: 400
    InvalidRequestBodyFieldError:
      type: object
      description: Indicates that a field in the request body has an invalid type.
      properties:
        error:
          type: string
          description: Error message when a request body field is not a string.
        status:
          type: integer
          description: HTTP status code for the error.
    RequestBodyParsingFailedError:
      type: object
      description: Indicates that the request body could not be parsed.
      properties:
        error:
          type: string
          description: Error message when request body parsing fails.
        status:
          type: integer
          description: HTTP status code for the error.
          # example: 400
    WorkflowSaveError:
      type: object
      description: Indicates that the workflow state could not be saved.
      properties:
        error:
          type: string
          # example: Failed to save workflow state
        status:
          type: integer
    MaxWorkflowsLimitError:
      type: object
      description: Indicates that the maximum number of workflows has been reached.
      properties:
        error:
          type: string
          # example: Maximum workflows limit reached 50
        code:
          type: integer
    TemplateNameRequiredError:
      type: object
      description: Indicates that the template name is missing from the request.
      properties:
        error:
          type: string
          description: Error message when the template name is missing.
    TemplateNotFoundError:
      type: object
      description: Indicates that the requested template could not be found.
      properties:
        error:
          type: string
          # example: Failed to retrieve template (12345) from global context.
        code:
          type: integer
    InvalidTemplateVersionError:
      type: object
      description: Indicates that the template version is invalid or missing.
      properties:
        error:
          type: string
          # example: Unable to parse field [version] in a version object.
    UnsupportedFieldUpdateError:
      type: object
      description: Indicates an attempt to update a field that cannot be modified independently.
      properties:
        error:
          type: string
          # example: You can not update the field [fieldName] without updating the whole template.
    WorkflowParsingError:
      type: object
      description: Indicates that the workflow template could not be parsed.
      properties:
        error:
          type: string
          # example: Unable to parse field [workflow] in a template object.
    WorkflowStepsRetrieveError:
      type: object
      description: Indicates that the workflow steps could not be retrieved.
      properties:
        error:
          type: string
          # example: Failed to retrieve workflow step json.
        code:
          type: integer
    DeprovisioningError:
      type: object
      description: Indicates that some resources could not be deprovisioned and names the resources.
      properties:
        error:
          type: string
          # example: Failed to deprovision some resources [connector_id Lw7PX4wBfVtHp98y06wV].
      required:
        - error
    DeprovisioningForbiddenError:
      type: object
      description: Describes the resources that require the `allow_delete` parameter for deprovisioning.
      properties:
        error:
          type: string
          # example: These resources require the `allow_delete` parameter to deprovision [index_name my-index].
      required:
        - error
    RequestTimeoutError:
      type: object
      properties:
        error:
          type: string
          description: Indicates that the request exceeded the time limit.
        status:
          type: integer
          description: HTTP status code for the error.
          # example: 408
    BadRequestError:
      type: object
      description: Indicates that the request contains invalid parameters or body.
      properties:
        error:
          type: string
          # example: Invalid request body or query parameters.
        status:
          type: integer
          description: The HTTP status code for the error.
          # example: 400