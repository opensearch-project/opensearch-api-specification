openapi: 3.1.0
info:
  title: Schemas of ingest._common category
  description: Schemas of ingest._common category
  version: 1.0.0
paths: {}
components:
  schemas:
    Pipeline:
      type: object
      properties:
        description:
          description: Description of the ingest pipeline.
          type: string
        on_failure:
          description: Processors to run immediately after a processor failure.
          type: array
          items:
            $ref: '#/components/schemas/ProcessorContainer'
        processors:
          description: |-
            Processors used to perform transformations on documents before indexing.
            Processors run sequentially in the order specified.
          type: array
          items:
            $ref: '#/components/schemas/ProcessorContainer'
        version:
          $ref: '_common.yaml#/components/schemas/VersionNumber'
        _meta:
          $ref: '_common.yaml#/components/schemas/Metadata'
      required:
        - _meta
    ProcessorContainer:
      type: object
      properties:
        attachment:
          $ref: '#/components/schemas/AttachmentProcessor'
        append:
          $ref: '#/components/schemas/AppendProcessor'
        csv:
          $ref: '#/components/schemas/CsvProcessor'
        convert:
          $ref: '#/components/schemas/ConvertProcessor'
        date:
          $ref: '#/components/schemas/DateProcessor'
        date_index_name:
          $ref: '#/components/schemas/DateIndexNameProcessor'
        dot_expander:
          $ref: '#/components/schemas/DotExpanderProcessor'
        enrich:
          $ref: '#/components/schemas/EnrichProcessor'
        fail:
          $ref: '#/components/schemas/FailProcessor'
        foreach:
          $ref: '#/components/schemas/ForeachProcessor'
        json:
          $ref: '#/components/schemas/JsonProcessor'
        user_agent:
          $ref: '#/components/schemas/UserAgentProcessor'
        kv:
          $ref: '#/components/schemas/KeyValueProcessor'
        geoip:
          $ref: '#/components/schemas/GeoIpProcessor'
        grok:
          $ref: '#/components/schemas/GrokProcessor'
        gsub:
          $ref: '#/components/schemas/GsubProcessor'
        join:
          $ref: '#/components/schemas/JoinProcessor'
        lowercase:
          $ref: '#/components/schemas/LowercaseProcessor'
        remove:
          $ref: '#/components/schemas/RemoveProcessor'
        rename:
          $ref: '#/components/schemas/RenameProcessor'
        script:
          $ref: '_common.yaml#/components/schemas/Script'
        set:
          $ref: '#/components/schemas/SetProcessor'
        sort:
          $ref: '#/components/schemas/SortProcessor'
        split:
          $ref: '#/components/schemas/SplitProcessor'
        trim:
          $ref: '#/components/schemas/TrimProcessor'
        uppercase:
          $ref: '#/components/schemas/UppercaseProcessor'
        urldecode:
          $ref: '#/components/schemas/UrlDecodeProcessor'
        bytes:
          $ref: '#/components/schemas/BytesProcessor'
        dissect:
          $ref: '#/components/schemas/DissectProcessor'
        set_security_user:
          $ref: '#/components/schemas/SetSecurityUserProcessor'
        pipeline:
          $ref: '#/components/schemas/PipelineProcessor'
        drop:
          $ref: '#/components/schemas/DropProcessor'
        circle:
          $ref: '#/components/schemas/CircleProcessor'
        inference:
          $ref: '#/components/schemas/InferenceProcessor'
      minProperties: 1
      maxProperties: 1
    AttachmentProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and field does not exist, the processor quietly exits without modifying the document.
              type: boolean
            indexed_chars:
              description: |-
                The number of chars being used for extraction to prevent huge fields.
                Use `-1` for no limit.
              type: number
            indexed_chars_field:
              $ref: '_common.yaml#/components/schemas/Field'
            properties:
              description: >-
                Array of properties to select to be stored.

                Can be `content`, `title`, `name`, `author`, `keywords`, `date`, `content_type`, `content_length`, `language`.
              type: array
              items:
                type: string
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
            resource_name:
              description: >-
                Field containing the name of the resource to decode.

                If specified, the processor passes this resource name to the underlying Tika library to enable Resource Name Based Detection.
              type: string
          required:
            - field
    ProcessorBase:
      type: object
      properties:
        description:
          description: |-
            Description of the processor.
            Useful for describing the purpose of the processor or its configuration.
          type: string
        if:
          description: Conditionally execute the processor.
          type: string
        ignore_failure:
          description: Ignore failures for the processor.
          type: boolean
        on_failure:
          description: Handle failures for the processor.
          type: array
          items:
            $ref: '#/components/schemas/ProcessorContainer'
        tag:
          description: |-
            Identifier for the processor.
            Useful for debugging and metrics.
          type: string
    AppendProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            value:
              description: The value to be appended. Supports template snippets.
              type: array
              items:
                type: object
            allow_duplicates:
              description: If `false`, the processor does not append values already present in the field.
              type: boolean
          required:
            - field
            - value
    CsvProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            empty_value:
              description: |-
                Value used to fill empty fields.
                Empty fields are skipped if this is not provided.
                An empty field is one with no value (2 consecutive separators) or empty quotes (`""`).
              type: object
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            quote:
              description: Quote used in CSV, has to be single character string.
              type: string
            separator:
              description: Separator used in CSV, has to be single character string.
              type: string
            target_fields:
              $ref: '_common.yaml#/components/schemas/Fields'
            trim:
              description: Trim whitespaces in unquoted fields.
              type: boolean
          required:
            - field
            - target_fields
    ConvertProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
            type:
              $ref: '#/components/schemas/ConvertType'
          required:
            - field
            - type
    ConvertType:
      type: string
      enum:
        - integer
        - long
        - float
        - double
        - string
        - boolean
        - auto
    DateProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            formats:
              description: |-
                An array of the expected date formats.
                Can be a java time pattern or one of the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.
              type: array
              items:
                type: string
            locale:
              description: |-
                The locale to use when parsing the date, relevant when parsing month names or week days.
                Supports template snippets.
              type: string
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
            timezone:
              description: |-
                The timezone to use when parsing the date.
                Supports template snippets.
              type: string
          required:
            - field
            - formats
    DateIndexNameProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            date_formats:
              description: |-
                An array of the expected date formats for parsing dates / timestamps in the document being preprocessed.
                Can be a java time pattern or one of the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.
              type: array
              items:
                type: string
            date_rounding:
              description: |-
                How to round the date when formatting the date into the index name. Valid values are:
                `y` (year), `M` (month), `w` (week), `d` (day), `h` (hour), `m` (minute) and `s` (second).
                Supports template snippets.
              type: string
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            index_name_format:
              description: |-
                The format to be used when printing the parsed date into the index name.
                A valid java time pattern is expected here.
                Supports template snippets.
              type: string
            index_name_prefix:
              description: |-
                A prefix of the index name to be prepended before the printed date.
                Supports template snippets.
              type: string
            locale:
              description: The locale to use when parsing the date from the document being preprocessed, relevant when parsing month
                names or week days.
              type: string
            timezone:
              description: The timezone to use when parsing the date and when date math index supports resolves expressions into
                concrete index names.
              type: string
          required:
            - date_formats
            - date_rounding
            - field
    DotExpanderProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            path:
              description: >-
                The field that contains the field to expand.

                Only required if the field to expand is part another object field, because the `field` option can only understand leaf fields.
              type: string
          required:
            - field
    EnrichProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            max_matches:
              description: >-
                The maximum number of matched documents to include under the configured target field.

                The `target_field` will be turned into a json array if `max_matches` is higher than 1, otherwise `target_field` will become a json object.

                In order to avoid documents getting too large, the maximum allowed value is 128.
              type: number
            override:
              description: |-
                If processor will update fields with pre-existing non-null-valued field.
                When set to `false`, such fields will not be touched.
              type: boolean
            policy_name:
              description: The name of the enrich policy to use.
              type: string
            shape_relation:
              $ref: '_common.yaml#/components/schemas/GeoShapeRelation'
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
            - policy_name
            - target_field
    FailProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            message:
              description: |-
                The error message thrown by the processor.
                Supports template snippets.
              type: string
          required:
            - message
    ForeachProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true`, the processor silently exits without changing the document if the `field` is `null` or missing.
              type: boolean
            processor:
              $ref: '#/components/schemas/ProcessorContainer'
          required:
            - field
            - processor
    JsonProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            add_to_root:
              description: |-
                Flag that forces the parsed JSON to be added at the top level of the document.
                `target_field` must not be set when this option is chosen.
              type: boolean
            add_to_root_conflict_strategy:
              $ref: '#/components/schemas/JsonProcessorConflictStrategy'
            allow_duplicate_keys:
              description: |-
                When set to `true`, the JSON parser will not fail if the JSON contains duplicate keys.
                Instead, the last encountered value for any duplicate key wins.
              type: boolean
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    JsonProcessorConflictStrategy:
      type: string
      enum:
        - replace
        - merge
    UserAgentProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            options:
              type: array
              items:
                $ref: '#/components/schemas/UserAgentProperty'
            regex_file:
              description: The name of the file in the `config/ingest-user-agent` directory containing the regular expressions for
                parsing the user agent string. Both the directory and the file have to be created before starting
                Opensearch. If not specified, ingest-user-agent will use the `regexes.yaml` from uap-core it ships with.
              type: string
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    UserAgentProperty:
      type: string
      enum:
        - NAME
        - MAJOR
        - MINOR
        - PATCH
        - OS
        - OS_NAME
        - OS_MAJOR
        - OS_MINOR
        - DEVICE
        - BUILD
    KeyValueProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            exclude_keys:
              description: List of keys to exclude from document.
              type: array
              items:
                type: string
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            field_split:
              description: Regex pattern to use for splitting key-value pairs.
              type: string
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            include_keys:
              description: |-
                List of keys to filter and insert into document.
                Defaults to including all keys.
              type: array
              items:
                type: string
            prefix:
              description: Prefix to be added to extracted keys.
              type: string
            strip_brackets:
              description: If `true`. strip brackets `()`, `<>`, `[]` as well as quotes `'` and `"` from extracted values.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
            trim_key:
              description: String of characters to trim from extracted keys.
              type: string
            trim_value:
              description: String of characters to trim from extracted values.
              type: string
            value_split:
              description: Regex pattern to use for splitting the key from the value within a key-value pair.
              type: string
          required:
            - field
            - field_split
            - value_split
    GeoIpProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            database_file:
              description: The database filename referring to a database the module ships with (GeoLite2-City.mmdb,
                GeoLite2-Country.mmdb, or GeoLite2-ASN.mmdb) or a custom database in the ingest-geoip config directory.
              type: string
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            first_only:
              description: If `true`, only the first found geoip data will be returned, even if the field contains an array.
              type: boolean
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            properties:
              description: Controls what properties are added to the `target_field` based on the geoip lookup.
              type: array
              items:
                type: string
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    GrokProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            pattern_definitions:
              description: |-
                A map of pattern-name and pattern tuples defining custom patterns to be used by the current processor.
                Patterns matching existing names will override the pre-existing definition.
              type: object
              additionalProperties:
                type: string
            patterns:
              description: |-
                An ordered list of grok expression to match and extract named captures with.
                Returns on the first expression in the list that matches.
              type: array
              items:
                type: string
            trace_match:
              description: When `true`, `_ingest._grok_match_index` will be inserted into your matched document’s metadata with the
                index into the pattern found in `patterns` that matched.
              type: boolean
          required:
            - field
            - patterns
    GsubProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            pattern:
              description: The pattern to be replaced.
              type: string
            replacement:
              description: The string to replace the matching patterns with.
              type: string
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
            - pattern
            - replacement
    JoinProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            separator:
              description: The separator character.
              type: string
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
            - separator
    LowercaseProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    RemoveProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Fields'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
          required:
            - field
    RenameProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
            - target_field
    SetProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            copy_from:
              $ref: '_common.yaml#/components/schemas/Field'
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_empty_value:
              description: If `true` and `value` is a template snippet that evaluates to `null` or the empty string, the processor
                quietly exits without modifying the document.
              type: boolean
            media_type:
              description: |-
                The media type for encoding `value`.
                Applies only when value is a template snippet.
                Must be one of `application/json`, `text/plain`, or `application/x-www-form-urlencoded`.
              type: string
            override:
              description: |-
                If `true` processor will update fields with pre-existing non-null-valued field.
                When set to `false`, such fields will not be touched.
              type: boolean
            value:
              description: |-
                The value to be set for the field.
                Supports template snippets.
                May specify only one of `value` or `copy_from`.
              type: object
          required:
            - field
    SortProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            order:
              $ref: '_common.yaml#/components/schemas/SortOrder'
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    SplitProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            preserve_trailing:
              description: Preserves empty trailing fields, if any.
              type: boolean
            separator:
              description: A regex which matches the separator, for example, `,` or `\s+`.
              type: string
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
            - separator
    TrimProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    UppercaseProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    UrlDecodeProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    BytesProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - field
    DissectProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            append_separator:
              description: The character(s) that separate the appended fields.
              type: string
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the
                document.
              type: boolean
            pattern:
              description: The pattern to apply to the field.
              type: string
          required:
            - field
            - pattern
    SetSecurityUserProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            properties:
              description: Controls what user related properties are added to the field.
              type: array
              items:
                type: string
          required:
            - field
    PipelineProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            name:
              $ref: '_common.yaml#/components/schemas/Name'
            ignore_missing_pipeline:
              description: Whether to ignore missing pipelines instead of failing.
              type: boolean
          required:
            - name
    DropProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
    CircleProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            error_distance:
              description: The difference between the resulting inscribed distance from center to side and the circle’s radius
                (measured in meters for `geo_shape`, unit-less for `shape`).
              type: number
            field:
              $ref: '_common.yaml#/components/schemas/Field'
            ignore_missing:
              description: If `true` and `field` does not exist, the processor quietly exits without modifying the document.
              type: boolean
            shape_type:
              $ref: '#/components/schemas/ShapeType'
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
          required:
            - error_distance
            - field
            - shape_type
    ShapeType:
      type: string
      enum:
        - geo_shape
        - shape
    InferenceProcessor:
      allOf:
        - $ref: '#/components/schemas/ProcessorBase'
        - type: object
          properties:
            model_id:
              $ref: '_common.yaml#/components/schemas/Id'
            target_field:
              $ref: '_common.yaml#/components/schemas/Field'
            field_map:
              description: |-
                Maps the document field names to the known field names of the model.
                This mapping takes precedence over any default mappings provided in the model configuration.
              type: object
              additionalProperties:
                type: object
            inference_config:
              $ref: '#/components/schemas/InferenceConfig'
          required:
            - model_id
    InferenceConfig:
      type: object
      properties:
        regression:
          $ref: '#/components/schemas/InferenceConfigRegression'
        classification:
          $ref: '#/components/schemas/InferenceConfigClassification'
      minProperties: 1
      maxProperties: 1
    InferenceConfigRegression:
      type: object
      properties:
        results_field:
          $ref: '_common.yaml#/components/schemas/Field'
        num_top_feature_importance_values:
          description: Specifies the maximum number of feature importance values per document.
          type: number
    InferenceConfigClassification:
      type: object
      properties:
        num_top_classes:
          description: Specifies the number of top class predictions to return.
          type: number
        num_top_feature_importance_values:
          description: Specifies the maximum number of feature importance values per document.
          type: number
        results_field:
          $ref: '_common.yaml#/components/schemas/Field'
        top_classes_results_field:
          $ref: '_common.yaml#/components/schemas/Field'
        prediction_field_type:
          description: |-
            Specifies the type of the predicted field to write.
            Valid values are: `string`, `number`, `boolean`.
          type: string
